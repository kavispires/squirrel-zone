{"version":3,"sources":["serviceWorker.js","images/logo.svg","components/global/Header.jsx","services/firebase.js","utils/constants.js","states/useDistributorState.js","utils/distributor/enum.js","utils/distributor/utilities.js","utils/distributor/part.js","utils/distributor/line.js","utils/distributor/section.js","utils/distributor/song.js","services/store.js","states/useGlobalState.js","states/useLoadingState.js","utils/index.js","api/deserializers.js","api/serializers.js","api/index.js","components/global/LoadingContainer.jsx","components/modals/LoadMemberModal.jsx","components/admin/EditMember.jsx","components/modals/LoadGroupModal.jsx","components/admin/EditGroup.jsx","components/Admin.jsx","components/svg/Grid.jsx","utils/properties/index.js","utils/properties/fur.js","utils/properties/snout.js","utils/properties/nose.js","utils/properties/eyes.js","utils/properties/defaults.js","components/svg/BaseBody.jsx","components/svg/index.js","components/svg/BaseHead.jsx","components/svg/BaseTail.jsx","states/useCharacterState.js","components/Character.jsx","components/options/FurColorSelector.jsx","components/options/SnoutColorSelector.jsx","components/options/NoseColorSelector.jsx","components/options/EyeColorSelector.jsx","components/CharacterOptions.jsx","components/Creator.jsx","states/functions.js","components/modals/LoadSongModal.jsx","components/distributor/YoutubeVideo.jsx","components/log/LogAssignees.jsx","components/log/LogPart.jsx","components/log/LogLine.jsx","components/log/LogSection.jsx","components/log/Log.jsx","components/Avatar.jsx","components/Member.jsx","components/Distribute.jsx","components/distributor/StepperProgress.jsx","components/distributor/LoadSong.jsx","components/distributor/LyricsAndSections.jsx","components/distributor/OptionsSection.jsx","components/distributor/OptionsLine.jsx","components/distributor/OptionsPart.jsx","components/distributor/ModalOptions.jsx","components/distributor/KeyCapture.jsx","utils/useKeypress.js","components/distributor/Controls.jsx","components/distributor/TimestampsBank.jsx","components/distributor/TimeAndSync.jsx","utils/distribution/chartEntry.js","utils/distribution/distributedPart.js","utils/distribution/lineEntry.js","utils/distribution/lyricEntry.js","utils/distribution/memberEntry.js","utils/distribution/previewer.js","components/distributor/LineDistribution.jsx","components/distributor/Preview.jsx","components/distributor/SongMetadata.jsx","components/distributor/SaveSong.jsx","components/Distributor.jsx","components/Groups.jsx","components/Home.jsx","api/auth.js","components/Login.jsx","components/Distribution.jsx","components/global/Loading.jsx","components/global/Notification.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Header","isAuthenticated","className","src","logo","alt","to","exact","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","database","DATA_TYPE","DATA_TYPE_COLLECTION","KEYS","KEY_ASSIGNEE","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","POSITIONS","LEADER","MAIN_VOCALIST","LEAD_VOCALIST","VOCALIST","SUB_VOCALIST","MAIN_RAPPER","LEAD_RAPPER","RAPPER","MAIN_DANCER","LEAD_DANCER","DANCER","VISUAL","CENTER","POSITIONS_WEIGHT","ROMAN_NUMBER","0","10","11","12","13","14","15","DEFAULT_MEMBERS","id","type","key","name","color","positions","createGlobalState","step","videoId","isRecording","song","sections","lines","parts","activeInstance","selection","unassignedTimestamps","assignee","selectedTimestamps","isPlaying","isFullyLoaded","currentLine","currentSection","timestamp","useGlobalState","setGlobalState","getGlobalState","NULL","ASSIGNEE","ASSIGNEE_LABEL","SKILL","AD_LIB","CHOIR","DANCE","RAP","VOCAL","SKILL_LEVEL","SKILL_TYPE","BELT","SFX","SHOUT","REGULAR","RUN","WHISPER","CHANTING","SHOUTING","GROUP","LIPSYNC","POSING","SOLO","SLOW","FAST","SPOKEN","HIGH","LOW","SECTION","BREAK","BRIDGE","CHORUS","DANCE_BREAK","DROP","HOOK","INSTRUMENTAL_SOLO","INTRO","OUTRO","POST_CHORUS","PRE_CHORUS","SPECIAL","UNKNOWN","VERSE","generateUniqueId","cache","generate","length","Math","random","toString","substr","generateTempId","lastId","convertStoMS","seconds","round","serializeKey","deserializeKey","split","getDefault","context","data","propertyName","defaultValue","getNullDefault","undefined","getEnumDefault","enumObj","getRelationshipsDefault","instance","reduce","ids","entry","push","nullifyDefault","defaultValues","getDuplicatedData","dict","list","isKey","entries","map","result","item","Object","forEach","value","cleanupObject","obj","keys","filter","k","a","Part","this","_id","_type","endTime","startTime","text","lineId","deserialize","console","log","setDistributorGlobalState","state","_save","line","getDistributorGlobalState","Error","addPart","removePart","trim","criteria","duration","complete","i","floor","completion","isComplete","isDismissible","sectionId","freeze","Line","skill","skillType","skillLevel","placeholder","partsIds","_isSorted","sortedParts","sort","b","part","values","acc","cur","section","addLine","removeLine","partId","lindId","library","linesIds","index","findIndex","firstPart","lastPart","join","attributesCompletion","relationshipsCompletion","relationshipsTotal","p","isAdLib","isChoir","isDance","isRap","Section","kind","number","songId","sortedLines","addSection","removeSection","sectionsIds","firstLine","lastLine","l","Song","title","version","createdAt","Date","now","updatedAt","isSingle","idealGroupSize","moment","tempo","genre","style","albumId","sortedSections","sectionsNumbers","included","sectionsLibrary","linesLibrary","partsLibrary","serialize","format","lastSection","flat","allPartsIds","s","partsCount","Store","_records","_collections","_loaded","_loadedInstance","API","fetchDistributionData","fetchMember","fetchSong","fetchSongData","asObject","extra","collectionSorting","filterKey","fetchDistributions","_updateCollection","fetchGroups","fetchMembers","fetchSongs","isAdditive","incomingData","recordKey","record","DEFAULT_SORTING","x","y","songTitle","debutYear","age","store","notification","message","description","isLoading","activeGroup","activeMembers","loadedLineDistribution","lineDistribution","stats","reducerTypeMapping","createStore","action","newState","payload","some","v","warn","isAlbumLoading","isDistributionLoading","isDistributionDataLoading","isGroupLoading","isMemberLoading","isMemberDataLoading","isSongLoading","isSongDataLoading","dispatch","wasPrinted","printProps","props","e","hex","f","rate","bemClass","args","baseClass","c","getBemModifier","condition","modifier","bemClassConditionalModifier","getFrameFromTimestamp","framerate","getTimestampFromFrame","frame","buildMockDistribution","groupId","deepCopy","JSON","parse","stringify","cleanupStats","deserializer","distribution","assignedParts","group","member","songData","includedData","cleanData","serializer","distributionData","disbandmentYear","membersIds","hexColor","startsWith","colorName","codename","tagline","isContestant","errorNotification","error","successNotification","fetchAlbums","setLoading","collectionName","ref","child","once","snapshot","childSnapshot","setRecord","val","distributionId","typeName","saveDistribution","deserializedData","distributionDataCollectionName","set","saveGroup","memberId","saveMember","saveSong","dataCollectionName","deserializedSong","deserializedSongData","LoadingContainer","children","waitFor","noResults","forceLoading","size","useLoadingState","BorderOutlined","MemberModal","isModalVisible","setIsModalVisible","onBeforeLoad","setLoadedData","onAfterLoad","useState","setData","selectedId","setSelectedId","useEffect","getCollection","loadMembers","onLoadMember","useCallback","getRecord","fetchData","rowSelection","onChange","_","selectedRows","visible","onOk","okText","onCancel","okButtonProps","disabled","columns","dataIndex","render","dataSource","LoadMemberModal","buttonLabel","onClick","EditMember","loadedData","Form","useForm","form","setFieldsValue","onFinish","resetFields","requiredRule","required","layout","autoComplete","preserve","Item","label","rules","min","valuePropName","mode","allowClear","width","position","Option","htmlType","GroupModal","loadGroups","onLoadSong","loadGroup","LoadGroupModal","EditGroup","membersOptions","setMembersOptions","TabPane","Tabs","Admin","setTab","Content","defaultActiveKey","tab","Grid","PROPS","FUR","AA","dna","AB","AC","AD","BA","BB","BC","BD","CA","CB","CC","CD","DA","DB","DC","DD","HEAD","SNOUT","NOSE","EYES","DEFAULTS","BaseBody","svg","xmlns","overflow","viewBox","d","transform","cx","cy","r","Base","Head","furColor","snoutColor","noseColor","eyeColor","furColorClass","st2FurClass","snoutColorClass","snoutClass","noseColorClass","noseClass","eyeColorClass","pupilClass","rx","ry","Body","furClass","st1FurClass","Tail","borderFurClass","fillFurClass","initialState","Character","useCharacterState","FURS","FurColorSelector","setFurColor","target","htmlFor","Group","swatch","Button","checked","SNOUTS","SnoutColorSelector","setSnoutColor","NOSES","NoseColorSelector","setNoseColor","EyeColorSelector","setEyeColor","CharacterOptions","Panel","header","Creator","loadSongState","newSong","newSections","newLines","newParts","newInstance","loadActiveMembers","includeDefault","members","SongModal","LoadSongModal","YoutubeVideo","playerRef","height","onStateChange","useDistributorState","setIsRecording","setIsPlaying","videoOptions","playerVars","autoplay","containerClassName","opts","onReady","onPlay","onPause","onEnd","onPlaybackRateChange","LogAssignees","ApiOutlined","distributionAssignees","assignedMembers","backgroundColor","LogPart","Compact","seekAndPlay","onCheckboxChange","setSelectedTimestamps","setUnassignedTimestamps","assigneeClass","attachTimestamp","selectedTimestampsCopy","firstTimestamp","shift","updateTimestamp","checkedIndex","indexOf","onPlayPart","icon","CheckCircleOutlined","NotificationFilled","shape","Distribute","assignMembers","Edit","onShowModal","LogLine","incompleteClass","every","isLineChecked","includes","checkedClass","MessageFilled","PlusOutlined","newPart","onAddNewPart","ColumnWidthOutlined","LogSection","onPlaySection","PlayCircleOutlined","isSectionChecked","onAddNewLine","newLine","DatabaseFilled","Log","defaultCompactSetting","locked","setActiveInstance","setSelection","isCompact","setIsCompact","handleEditAll","batchDeserializeInstancesSameData","equalParts","defaultChecked","Avatar","urlPrefix","border","toLowerCase","fallback","Member","showName","showPosition","progress","count","showProgressNumber","borderColor","DistributeWidget","distributionCompletion","resetDistribution","setLineDistribution","setStats","selectedMember","setSelectedMember","isAbsoluteProgress","setAbsoluteProgress","progressType","setProgressType","useRef","total","totalAll","totalAllNone","max","maxAll","maxAllNone","newStats","memberKeysObj","partDuration","membersKeys","memberKey","relativeProgress","relativeProgressAll","relativeProgressAllNone","absoluteProgress","absoluteProgressAll","absoluteProgressAllNone","toggleMember","memberStats","MemberSelection","percent","current","internalPlayer","seekTo","playVideo","isSelected","history","useHistory","setActiveMembers","setLoadedDistribution","distributionName","setDistributionName","loadContent","response","event","Step","Steps","StepperProgress","currentStep","progressDot","Number","LoadSong","setSong","setStep","setVideoId","onAddVideoId","addonBefore","onPressEnter","Paragraph","Typography","LyricsAndSections","setLines","setParts","setSections","isBuiltOnce","setIsBuiltOnce","textarea","setTextarea","onTextareaChange","buildSections","filteredTextarea","tempSections","tempSection","newSectionId","newSection","rebuildSections","confirm","TextArea","danger","OptionsSection","onValuesChange","initialValues","linesTotal","help","DeleteOutlined","OptionsLine","setSkill","onSkillChange","partsTotal","skillTypes","ASSIGNEE_OPTIONS","OptionsPart","tempAssignee","setTempAssignee","formClass","options","optionType","ModalOptions","tempData","setTempData","onSaveModal","onFormChange","playing","temp","keyPressing","handleActionDown","getCurrentTime","newTimestamp","handleActionUp","copy","KeyCapture","Keyboard","onKeyDown","addEventListener","removeEventListener","onKeyup","useKeyUp","MouseButtons","onCaptureButtonDown","onCaptureButtonUp","onMouseDown","onMouseUp","Controls","pauseVideo","setAssignee","onRadioGroupChange","toggleRecording","currentTarget","blur","TimestampsBank","isPointAndClickOn","setIsPointClickOn","isOnlyPartsSelection","setIsOnlyPartsSelection","isTimestampDeleteOn","setIsTimestampDeleteOn","onToggleTimestampSelection","selectedClass","sts","ts","arr","unassignedTimestampsArray","onToggleSequentialPointAndClick","deleteAllUnassignedTimestamps","onToggleTimestampDelete","onTimestampClick","onPerformLinearSync","partKey","selectedIndex","activeClass","DeleteFilled","ClockCircleOutlined","block","TimeAndSync","ChartEntry","on","percentage","DistributedPart","assignees","Array","isArray","LineEntry","LyricEntry","Set","names","colors","MemberEntry","ALL_NONE_MEMBERS","Previewer","allParts","_songTitle","_allParts","_distribution","_framerate","_members","_buildMembers","_distributedParts","_buildDistributionParts","_max","_calculateMax","_priorityPosition","_buildMemberPriorityPosition","_membersCountCache","_membersChartData","_buildMembersLineBarChartData","distributedPart","distributedAssignees","totalDuration","winningDuration","winnerKey","memberEntry","force","_bars","dPart","startIndex","endIndex","assigneeKey","chartEntry","ceil","sortedEntry","toFixed","newLastEntry","_lyrics","lineEntries","add","lyricsEntries","sortedLineEntries","latestEntry","cleanup","RankingBars","currentRank","RankEntry","rank","onClass","LyricsScroller","currentTime","lyrics","lyricsRef","lyric","el","Lyric","LineDistribution","bars","intervalId","setIntervalId","setCurrentTime","setCurrentRank","frameIndex","setInterval","clearInterval","Preview","sampleGroupJson","sampleGroup","previewMembers","setPreviewMembers","previewBars","setPreviewBars","previewLyrics","setPreviewLyrics","preview","SongMetadata","formatter","SaveSong","success","setSuccess","onSave","Collapse","Distributor","accordion","activeKey","setActiveGroup","setLoadedLineDistribution","setIsFullyLoaded","groupMembers","setGroupMembers","activateDistribution","isEdit","route","EditOutlined","tab1","GroupDistributions","FileAddOutlined","groupDistributions","setGroupDistributions","GroupDistributionSnippet","YoutubeOutlined","showHeader","tableLayout","memberData","Groups","groups","setGroups","setMembers","groupsRefs","offsetTop","scrollIntoView","behavior","Home","signIn","email","password","signInWithEmailAndPassword","labelCol","span","wrapperCol","tailLayout","offset","Login","setError","setEmail","setPassword","onHandleSubmit","showIcon","Distribution","Loading","Notification","setNotification","onClose","placement","openNotification","PrivateRoute","Component","component","authenticated","rest","pathname","from","PublicRoute","fromPath","App","setIsLoading","setIsAuthenticated","onAuthStateChanged","user","path","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f587ffe0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.f1d0cca3.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// Design Resources\nimport { Layout } from 'antd';\n\nimport logo from '../../images/logo.svg';\n\nfunction Header({ isAuthenticated }) {\n  return (\n    <Layout.Header className=\"header\">\n      <img src={logo} className=\"header__logo\" alt=\"Squirrel Zone Logo\" />\n      {isAuthenticated && (\n        <nav className=\"header__nav\">\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact>\n                Home\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/history\">History</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/groups\">Groups</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/creator\">Creator</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/distributor\">Distributor</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/admin\">Admin</NavLink>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </Layout.Header>\n  );\n}\n\nexport default Header;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","export const DATA_TYPE = {\n  ALBUM: 'album',\n  DISTRIBUTION: 'distribution',\n  DISTRIBUTION_DATA: 'distribution-data',\n  GROUP: 'group',\n  MEMBER: 'member',\n  MEMBER_DATA: 'member-data',\n  SONG: 'song',\n  SONG_DATA: 'song-data',\n};\n\nexport const DATA_TYPE_COLLECTION = {\n  [DATA_TYPE.ALBUM]: 'albums',\n  [DATA_TYPE.DISTRIBUTION]: 'distributions',\n  [DATA_TYPE.DISTRIBUTION_DATA]: 'distributions-data',\n  [DATA_TYPE.GROUP]: 'groups',\n  [DATA_TYPE.MEMBER]: 'members',\n  [DATA_TYPE.MEMBER_DATA]: 'members-data',\n  [DATA_TYPE.SONG]: 'songs',\n  [DATA_TYPE.SONG_DATA]: 'songs-data',\n};\n\nexport const KEYS = [' ', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport const KEY_ASSIGNEE = {\n  ' ': 'S',\n  1: 'A',\n  2: 'B',\n  3: 'C',\n  4: 'D',\n  5: 'E',\n  6: 'F',\n  7: 'G',\n  8: 'H',\n  9: 'I',\n  A: 'A',\n  B: 'B',\n  C: 'C',\n  D: 'D',\n  E: 'E',\n  F: '',\n  G: 'G',\n  H: 'H',\n  I: 'I',\n};\n\nexport const POSITIONS = {\n  LEADER: 'LEADER',\n  MAIN_VOCALIST: 'MAIN_VOCALIST',\n  LEAD_VOCALIST: 'LEAD_VOCALIST',\n  VOCALIST: 'VOCALIST',\n  SUB_VOCALIST: 'SUB_VOCALIST',\n  MAIN_RAPPER: 'MAIN_RAPPER',\n  LEAD_RAPPER: 'LEAD_RAPPER',\n  RAPPER: 'RAPPER',\n  MAIN_DANCER: 'MAIN_DANCER',\n  LEAD_DANCER: 'LEAD_DANCER',\n  DANCER: 'DANCER',\n  VISUAL: 'VISUAL',\n  CENTER: 'CENTER',\n};\n\nexport const POSITIONS_WEIGHT = {\n  MAIN_VOCALIST: 0,\n  MAIN_RAPPER: 1,\n  MAIN_DANCER: 2,\n  VISUAL: 3,\n  CENTER: 4,\n  LEADER: 5,\n  LEAD_VOCALIST: 6,\n  LEAD_RAPPER: 7,\n  LEAD_DANCER: 8,\n  VOCALIST: 9,\n  RAPPER: 10,\n  DANCER: 11,\n  SUB_VOCALIST: 12,\n};\n\nexport const ROMAN_NUMBER = {\n  0: '?',\n  1: 'I',\n  2: 'II',\n  3: 'III',\n  4: 'IV',\n  5: 'V',\n  6: 'VI',\n  7: 'VII',\n  8: 'VIII',\n  9: 'IX',\n  10: 'X',\n  11: 'XI',\n  12: 'XII',\n  13: 'XIII',\n  14: 'XIV',\n  15: 'XV',\n};\n\nexport const SEPARATOR = '::';\n\nexport const DEFAULT_MEMBERS = {\n  'member::ALL': {\n    id: 'ALL',\n    type: 'member',\n    key: 'member::ALL',\n    name: 'All',\n    color: '#4c5c68',\n    positions: ['ALL'],\n  },\n  'member::NONE': {\n    id: 'NONE',\n    type: 'member',\n    key: 'member::NONE',\n    name: 'None',\n    color: '#899ba9',\n    positions: ['NONE'],\n  },\n};\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  step: '0',\n  videoId: null,\n  isRecording: false,\n  song: null,\n  sections: {},\n  lines: {},\n  parts: {},\n  activeInstance: null,\n  selection: [],\n  unassignedTimestamps: {},\n  assignee: 'A',\n\n  selectedTimestamps: [],\n  isPlaying: false,\n\n  isFullyLoaded: false,\n\n  currentLine: null,\n  currentSection: null,\n  timestamp: 0,\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState as setDistributorGlobalState, getGlobalState as getDistributorGlobalState };\n\nexport default useGlobalState;\n","export const NULL = 'NULL';\n\nexport const ASSIGNEE = {\n  A: 'A',\n  B: 'B',\n  C: 'C',\n  D: 'D',\n  E: 'E',\n  F: 'F',\n  G: 'G',\n  H: 'H',\n  I: 'I',\n};\n\nexport const ASSIGNEE_LABEL = {\n  A: 'V1',\n  B: 'V2',\n  C: 'R1',\n  D: 'R2',\n  E: 'A1',\n  F: 'A2',\n  G: 'ALL',\n  H: 'NONE',\n  I: 'CENTER',\n};\n\nexport const SKILL = {\n  AD_LIB: 'AD_LIB',\n  CHOIR: 'CHOIR',\n  DANCE: 'DANCE',\n  RAP: 'RAP',\n  VOCAL: 'VOCAL',\n};\n\nexport const SKILL_LEVEL = {\n  1: 1,\n  2: 2,\n  3: 3,\n};\n\nexport const SKILL_TYPE = {\n  [SKILL.AD_LIB]: {\n    BELT: 'BELT',\n    SFX: 'SFX',\n    SHOUT: 'SHOUT',\n    RAP: 'RAP',\n    REGULAR: 'REGULAR',\n    RUN: 'RUN',\n    WHISPER: 'WHISPER',\n  },\n  [SKILL.CHOIR]: {\n    CHANTING: 'CHANTING',\n    REGULAR: 'REGULAR',\n    SHOUTING: 'SHOUTING',\n  },\n  [SKILL.DANCE]: {\n    GROUP: 'GROUP',\n    LIPSYNC: 'LIPSYNC',\n    POSING: 'POSING',\n    SOLO: 'SOLO',\n  },\n  [SKILL.RAP]: {\n    SLOW: 'SLOW',\n    REGULAR: 'REGULAR',\n    FAST: 'FAST',\n    SPOKEN: 'SPOKEN',\n  },\n  [SKILL.VOCAL]: {\n    HIGH: 'HIGH',\n    LOW: 'LOW',\n    REGULAR: 'REGULAR',\n  },\n};\n\nexport const SECTION = {\n  BREAK: 'BREAK',\n  BRIDGE: 'BRIDGE',\n  CHORUS: 'CHORUS',\n  DANCE_BREAK: 'DANCE_BREAK',\n  DROP: 'DROP',\n  HOOK: 'HOOK',\n  INSTRUMENTAL_SOLO: 'INSTRUMENTAL_SOLO',\n  INTRO: 'INTRO',\n  OUTRO: 'OUTRO',\n  POST_CHORUS: 'POST_CHORUS',\n  PRE_CHORUS: 'PRE_CHORUS',\n  RAP: 'RAP',\n  SPECIAL: 'SPECIAL',\n  UNKNOWN: 'UNKNOWN',\n  VERSE: 'VERSE',\n};\n","import { SEPARATOR } from '../constants';\n\nexport const generateUniqueId = (function () {\n  const cache = {};\n\n  function generate(length = 5) {\n    const id = '_' + Math.random().toString(36).substr(2, length);\n    if (cache[id]) {\n      return generate(length);\n    }\n\n    cache[id] = true;\n    return id;\n  }\n\n  return generate;\n})();\n\nexport const generateTempId = (function () {\n  let lastId = 100;\n\n  function generate() {\n    const id = lastId + 1;\n    lastId = id;\n    return id;\n  }\n\n  return generate;\n})();\n\nexport const convertStoMS = (seconds) => {\n  return Math.round(seconds * 1000);\n};\n\nexport const serializeKey = (type, id) => `${type}${SEPARATOR}${id}`;\n\nexport const deserializeKey = (key) => key.split(SEPARATOR);\n\n/**\n * Get value with default fallback.\n * @param {*} context\n * @param {object} data\n * @param {string} propertyName\n * @param {*} [defaultValue]\n */\nexport const getDefault = (context, data, propertyName, defaultValue = null) => {\n  return data[propertyName] ?? context[propertyName] ?? defaultValue;\n};\n\n/**\n * Get value with default fallback only if the value is undefined.\n * @param {*} context\n * @param {object} data\n * @param {string} propertyName\n * @param {*} [defaultValue]\n */\nexport const getNullDefault = (context, data, propertyName, defaultValue = null) => {\n  return data[propertyName] === undefined ? context[propertyName] ?? defaultValue : data[propertyName];\n};\n\n/**\n * Get enum value with default fallback.\n * @param {*} context\n * @param {object} data\n * @param {string} propertyName\n * @param {object} enumObj\n * @param {string} defaultValue\n */\nexport const getEnumDefault = (context, data, propertyName, enumObj, defaultValue) => {\n  return data[propertyName] ? enumObj[data[propertyName]] : context[propertyName] ?? defaultValue;\n};\n\n/**\n * Get relationships ids from list of instances or strings.\n * @param {*} context\n * @param {object} data\n * @param {string} propertyName\n * @param {Class} instance\n */\nexport const getRelationshipsDefault = (context, data, propertyName, instance) => {\n  return (data[propertyName] ?? context[propertyName] ?? []).reduce((ids, entry) => {\n    if (entry instanceof instance) {\n      ids.push(entry.id);\n    } else if (typeof entry === 'string') {\n      ids.push(entry);\n    }\n    return ids;\n  }, []);\n};\n\n/**\n * Fallback to null if value of property is the same as the default value\n * @param {*} data\n * @param {*} propertyName\n * @param {*} defaultValues\n */\nexport const nullifyDefault = (data, propertyName, defaultValues) => {\n  return data[propertyName] === defaultValues[propertyName] ? null : data[propertyName];\n};\n\n/**\n * Compare the entries of given list of ids/keys and return all equal values.\n * @param {*} dict\n * @param {*} list\n * @param {boolean} [isKey]\n */\nexport const getDuplicatedData = (dict, list, isKey = false) => {\n  const entries = list.map((entry) => {\n    const id = isKey ? deserializeKey(entry)[1] : entry;\n    return dict[id].data;\n  });\n\n  return entries.reduce((result, item) => {\n    Object.entries(item).forEach(([key, value]) => {\n      if (result[key] !== value) {\n        delete result[key];\n      }\n    });\n\n    return result;\n  }, entries[0]);\n};\n\n/**\n * Call deserialize in every instance in the ids list with given data\n * @param {object} library - the library with given instances (parts, lines, sections)\n * @param {string[]} ids - the list of keys or ids\n * @param {object} data - the data that needs to be deserialized\n * @param {boolean} isKey - flag indicating if the items in ids are keys\n */\nexport const batchDeserializeInstancesSameData = (library, ids, data, isKey = false) => {\n  ids.forEach((entry) => {\n    const id = isKey ? deserializeKey(entry)[1] : entry;\n    return library[id].deserialize(data);\n  });\n};\n\n/**\n * Removes any object key that is undefined or null\n * @param {object} obj\n * @returns {object}\n */\nexport const cleanupObject = (obj) => {\n  return Object.keys(obj)\n    .filter((k) => obj[k] != null && obj[k] !== undefined)\n    .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\n};\n\n/**\n * Check if two arrays are similar (have the same elements, even if in different order)\n * Note: it won't work with arrays with non primitive elements\n * @param {array} a\n * @param {array} b\n * @return {boolean}\n */\nexport const areArraysSimilar = (a, b) => JSON.stringify(a.sort()) === JSON.stringify(b.sort());\n","// Global State\nimport { getDistributorGlobalState, setDistributorGlobalState } from '../../states/useDistributorState';\n// Engine and utilities\nimport { ASSIGNEE } from './enum';\nimport {\n  cleanupObject,\n  generateUniqueId,\n  getDefault,\n  getEnumDefault,\n  getNullDefault,\n  nullifyDefault,\n  serializeKey,\n} from './utilities';\n\n/**\n * Class representing a Part - the smallest part of the lyrics, it composes a line.\n */\nexport class Part {\n  /**\n   * Create a Part.\n   * @constructor\n   * @param {object} data - An object with the necessary data to be loaded in this instance\n   */\n  constructor(data) {\n    this._id = data?.id || generateUniqueId();\n    this._type = 'part';\n\n    // Attributes\n    this.assignee = ASSIGNEE.A;\n    this.endTime = null;\n    this.startTime = null;\n    this.text = null;\n\n    // Relationships\n    this.lineId = null;\n\n    if (data) {\n      this.deserialize(data);\n    }\n  }\n\n  /**\n   * Save part to the React Global State.\n   */\n  _save() {\n    console.log('%cSaving part...', 'color:yellow');\n    setDistributorGlobalState('parts', (state) => {\n      return { ...state, [this.id]: this };\n    });\n  }\n\n  /**\n   * Get id.\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Get type.\n   * @type {string}\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * Get key.\n   * @type {string}\n   */\n  get key() {\n    return serializeKey(this.type, this.id);\n  }\n\n  /**\n   * Dictionary of default values for this instance.\n   */\n  get defaultValues() {\n    return {\n      assignee: ASSIGNEE.A,\n    };\n  }\n\n  /**\n   * Get duration.\n   * @type {number}\n   */\n  get duration() {\n    return (this.endTime || 0) - (this.startTime || 0);\n  }\n\n  /**\n   * Percentage (0-100) of completion of this instance.\n   * @type {number}\n   */\n  get completion() {\n    const criteria = [\n      this.duration > 0, // If has start and end time positive difference\n      Boolean(this.text), // Has text\n      Boolean(this.lineId), // Has its parent line\n    ];\n    const complete = criteria.filter((i) => i);\n    return Math.floor((100 * complete.length) / criteria.length);\n  }\n\n  /**\n   * Flag indicating if the part has all required values.\n   * @type {boolean}\n   */\n  get isComplete() {\n    return Math.floor(this.completion === 100);\n  }\n\n  /**\n   * Get the complete data set.\n   * @type {object}\n   */\n  get data() {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const line = library[this.lineId] ?? null;\n\n    const data = {\n      id: this._id,\n      type: this.type,\n      // Getters\n      isComplete: this.isComplete,\n      duration: this.duration,\n      // Attributes\n      assignee: this.assignee,\n      endTime: this.endTime,\n      startTime: this.startTime,\n      text: this.text,\n      // Relationships\n      lineId: this.lineId,\n      // Extra data\n      isDismissible: line.isDismissible,\n      sectionId: line.sectionId,\n    };\n\n    Object.freeze(data);\n    return data;\n  }\n\n  /**\n   * Updates time information and assignee.\n   * @param {*} timestamp\n   * @returns {string} the instance id\n   */\n  updateTimestamp({ startTime, endTime, assignee }) {\n    if (assignee) {\n      this.assignee = assignee;\n    }\n    this.startTime = startTime;\n    this.endTime = endTime;\n\n    // TODO: Since we have access to partId from the timestamp, should we disconnect?\n\n    this._save();\n\n    return this.id;\n  }\n\n  /**\n   * Connects parent relationship adding line-part one-to-many relationship end-to-end.\n   * @method\n   * @param {string} lineId\n   */\n  connectSection(lineId) {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const line = library[lineId] ?? null;\n\n    if (!line) throw Error(`Line ${lineId} does not exist in the state`);\n\n    line.addPart(this);\n    this.deserialize({ lineId });\n\n    return this;\n  }\n\n  /**\n   * Disconnects parent relationship removing line-part one-to-many relationship end-to-end.\n   * @method\n   * @param {string} lineId\n   */\n  disconnectSection(lineId) {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const line = library[lineId] ?? null;\n\n    if (line) {\n      line.removePart(this.id);\n    }\n    this.deserialize({ lineId: null });\n\n    return this;\n  }\n\n  /**\n   * De-serializes data and injects to this part instance.\n   * @method\n   * @param {object|null} data\n   */\n  deserialize(data) {\n    this._id = data.id || this._id || generateUniqueId();\n    // Attributes\n    this.assignee = getEnumDefault(this, data, 'assignee', ASSIGNEE, this.defaultValues.assignee);\n    this.endTime = getDefault(this, data, 'endTime', null);\n    this.startTime = getDefault(this, data, 'startTime', null);\n    this.text = getDefault(this, data, 'text', null);\n    if (this.text) {\n      this.text = this.text.trim();\n    }\n    // Relationships\n    this.lineId = getNullDefault(this, data, 'lineId', null);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Serializes the part instance's relevant data.\n   * @method\n   * @returns {object}\n   */\n  serialize() {\n    return cleanupObject({\n      id: this.id,\n      type: this.type,\n      // Attributes\n      assignee: nullifyDefault(this, 'assignee', this.defaultValues),\n      endTime: this.endTime,\n      startTime: this.startTime,\n      text: this.text ? this.text.trim() : this.text,\n      // Relationships\n      lineId: this.lineId,\n    });\n  }\n}\n\nexport default Part;\n","// Global State\nimport { getDistributorGlobalState, setDistributorGlobalState } from '../../states/useDistributorState';\n// Engine and utilities\nimport Part from './part';\nimport { SKILL, SKILL_LEVEL, SKILL_TYPE } from './enum';\nimport {\n  generateUniqueId,\n  getDefault,\n  getRelationshipsDefault,\n  getEnumDefault,\n  serializeKey,\n  getNullDefault,\n  nullifyDefault,\n  cleanupObject,\n} from './utilities';\n\n/**\n * Class representing a Line - a collection of parts that will compose a section/verse.\n */\nexport class Line {\n  /**\n   * Create a Line.\n   * @constructor\n   * @param {object} data - An object with the necessary data to be loaded in this instance\n   */\n  constructor(data) {\n    this._id = data?.id || generateUniqueId();\n    this._type = 'line';\n\n    // Attributes\n    this.isDismissible = false; // yeahs and yous that don't need to be displayed\n    this.skill = SKILL.VOCAL;\n    this.skillType = SKILL_TYPE.VOCAL.REGULAR;\n    this.skillLevel = SKILL_LEVEL['1'];\n    this.placeholder = 'oh yeah';\n\n    // Relationships\n    this.partsIds = [];\n    this.sectionId = null;\n\n    // Internal\n    this._isSorted = false;\n\n    if (data) {\n      this.deserialize(data);\n    }\n  }\n\n  /**\n   * Save line to the React Global State.\n   */\n  _save() {\n    console.log('%cSaving line...', 'color:orange');\n    setDistributorGlobalState('lines', (state) => {\n      return { ...state, [this.id]: this };\n    });\n  }\n\n  /**\n   * Get id.\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Get type.\n   * @type {string}\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * Get key.\n   * @type {string}\n   */\n  get key() {\n    return serializeKey(this.type, this.id);\n  }\n\n  /**\n   * Dictionary of default values for this instance.\n   */\n  get defaultValues() {\n    return {\n      isDismissible: false,\n      skill: SKILL.VOCAL,\n      skillType: SKILL_TYPE.VOCAL.REGULAR,\n      skillLevel: SKILL_LEVEL['1'],\n    };\n  }\n\n  /**\n   * List of parts.\n   * @type {Part[]}\n   */\n  get parts() {\n    const library = getDistributorGlobalState('parts') ?? {};\n    const parts = this.partsIds.map((partId) => library[partId]);\n    if (!this._isSorted) {\n      return this.sort(parts);\n    }\n    return parts;\n  }\n\n  /**\n   * Get parent section instance.\n   * @type {Song|null}\n   */\n  get section() {\n    const sections = getDistributorGlobalState('sections') ?? {};\n    return sections[this.id] ?? null;\n  }\n\n  /**\n   * Get the line before this instance in the section\n   * @type {Line|null}\n   */\n  get previousLine() {\n    const { lines = {} } = this.section ?? {};\n    const { linesIds = {} } = this.section ?? {};\n    const index = linesIds.findIndex((id) => id === this.id);\n    if (index < 1) return null;\n\n    return lines[index - 1];\n  }\n\n  /**\n   * Get the line after this instance in the section\n   * @type {Line|null}\n   */\n  get nextSection() {\n    const { lines = {} } = this.section ?? {};\n    const { linesIds = {} } = this.section ?? {};\n    const index = linesIds.findIndex((id) => id === this.id);\n    if (index === -1 || index >= linesIds.length) return null;\n\n    return lines[index + 1];\n  }\n\n  /**\n   * Get start time.\n   * @type {number}\n   */\n  get startTime() {\n    const firstPart = this.parts[0];\n\n    return firstPart?.startTime ?? 0;\n  }\n\n  /**\n   * Get end time.\n   * @type {number}\n   */\n  get endTime() {\n    const lastPart = this.parts.length > 0 ? this.parts[this.parts.length - 1] : null;\n\n    return lastPart?.endTime ?? 0;\n  }\n\n  /**\n   * Get duration.\n   * @type {number}\n   */\n  get duration() {\n    return this.endTime - this.startTime;\n  }\n\n  /**\n   * Flag indicating if the line is an ad lib.\n   * @type {boolean}\n   */\n  get isAdLib() {\n    return this.skill === SKILL.AD_LIB;\n  }\n\n  /**\n   * Flag indicating if the line is a rap.\n   * @type {boolean}\n   */\n  get isRap() {\n    return this.skill === SKILL.RAP;\n  }\n\n  /**\n   * Flag indicating if the line is a dance line.\n   * @type {boolean}\n   */\n  get isDance() {\n    return this.skill === SKILL.DANCE;\n  }\n\n  /**\n   * Flag indicating if the line is a choir line.\n   * @type {boolean}\n   */\n  get isChoir() {\n    return this.skill === SKILL.CHOIR;\n  }\n\n  /**\n   * Get aggregated text from each part.\n   * @type {string}\n   */\n  get text() {\n    if (!this.partsIds?.length) {\n      return `[${this.placeholder}]`;\n    }\n\n    return this.parts\n      .map((part) => {\n        if (part && part instanceof Part) {\n          return part.text;\n        }\n        return '';\n      })\n      .join(' ');\n  }\n\n  /**\n   * Percentage (0-100) of completion of this instance.\n   * @type {number}\n   */\n  get completion() {\n    const criteria = [\n      Boolean(this.sectionId), // has parent section\n      Boolean(this.partsIds.length), // has at last one child part\n    ];\n    const complete = criteria.filter((i) => i);\n    const attributesCompletion = (100 * complete.length) / criteria.length;\n\n    return Math.floor((attributesCompletion + this.relationshipsCompletion) / 2);\n  }\n\n  /**\n   * Percentage (0-100) of completion of the child relationships of this instance.\n   */\n  get relationshipsCompletion() {\n    const relationshipsTotal = this.partsIds.length;\n    const relationshipsCompleted = this.parts.filter((p) => p.isComplete);\n\n    return (100 * relationshipsCompleted.length) / relationshipsTotal;\n  }\n\n  /**\n   * Flag indicating if the line has all required values.\n   * @type {boolean}\n   */\n  get isComplete() {\n    return this.completion === 100;\n  }\n\n  /**\n   * Get the complete data set.\n   * @type {object}\n   */\n  get data() {\n    return {\n      id: this.id,\n      type: this.type,\n      // Getters\n      duration: this.duration,\n      endTime: this.endTime,\n      isAdLib: this.isAdLib,\n      isChoir: this.isChoir,\n      isComplete: this.isComplete,\n      isDance: this.isDance,\n      isRap: this.isRap,\n      startTime: this.startTime,\n      text: this.text,\n      placeholder: this.placeholder,\n      // Attributes\n      isDismissible: this.isDismissible,\n      skill: this.skill,\n      skillType: this.skillType,\n      skillLevel: this.skillLevel,\n      // Relationships\n      partsIds: this.partsIds,\n      sectionId: this.sectionId,\n    };\n  }\n\n  /**\n   * Sorts parts according to their starting time.\n   * @method\n   * @param {Part[]} parts\n   * @returns {object[]}\n   */\n  sort(parts = this.parts) {\n    const sortedParts = parts.sort((a, b) => (a.startTime >= b.startTime ? 1 : -1));\n\n    this.partsIds = sortedParts.map((entry) => entry.id);\n    this._isSorted = true;\n    this._save();\n    return sortedParts;\n  }\n\n  /**\n   * Adds a part to the partsIds.\n   * @method\n   * @param {Part|string} part\n   */\n  addPart(part) {\n    const id = part?.id ? part.id : part;\n    const dict = Object.values(this.partsIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    dict[id] = true;\n\n    this.partsIds = Object.keys(dict);\n    this.sort();\n\n    this._save();\n\n    return this;\n  }\n\n  /**\n   * Removes a part from the partsIds object.\n   * @method\n   * @param {string} id\n   */\n  removePart(id) {\n    const dict = Object.values(this.partsIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    delete dict[id];\n\n    this.partsIds = Object.keys(dict);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Connects parent relationship adding section-line one-to-many relationship end-to-end.\n   * @method\n   * @param {string} sectionId\n   */\n  connectSection(sectionId) {\n    const library = getDistributorGlobalState('sections') ?? {};\n    const section = library[sectionId] ?? null;\n\n    if (!section) throw Error(`Section ${sectionId} does not exist in the state`);\n\n    section.addLine(this);\n    this.deserialize({ sectionId });\n\n    return this;\n  }\n\n  /**\n   * Disconnects parent relationship removing section-line one-to-many relationship end-to-end.\n   * @method\n   * @param {string} sectionId\n   */\n  disconnectSection(sectionId) {\n    const library = getDistributorGlobalState('sections') ?? {};\n    const section = library[sectionId] ?? null;\n\n    if (section) {\n      section.removeLine(this.id);\n    }\n    this.deserialize({ sectionId: null });\n\n    return this;\n  }\n\n  /**\n   * Connects child relationship adding line-part one-to-many relationship end-to-end.\n   * @method\n   * @param {string} partId\n   */\n  connectLine(partId) {\n    const library = getDistributorGlobalState('parts') ?? {};\n    const part = library[partId] ?? null;\n\n    if (!part) throw Error(`Part ${partId} does not exist in the state`);\n\n    part.deserialize({ lineId: this.id });\n    this.addPart(partId);\n\n    return this;\n  }\n\n  /**\n   * Disconnects child relationship removing line-part one-to-many relationship end-to-end.\n   * @method\n   * @param {string} partId\n   */\n  disconnectLine(partId) {\n    const library = getDistributorGlobalState('parts') ?? {};\n    const part = library[partId] ?? null;\n\n    if (part) {\n      part.deserialize({ lindId: null });\n    }\n    this.removePart(part);\n\n    return this;\n  }\n\n  /**\n   * De-serializes data and injects to this line instance.\n   * @method\n   * @param {object|null} data\n   */\n  deserialize(data) {\n    this._id = data.id || this._id || generateUniqueId();\n    // Attributes\n    this.isDismissible = getDefault(this, data, 'isDismissible', false);\n    this.skill = getEnumDefault(this, data, 'skill', SKILL, this.defaultValues.skill);\n    this.skillType = getDefault(this, data, 'skillType', this.defaultValues.skillType);\n    this.skillLevel = getEnumDefault(this, data, 'skillLevel', SKILL_LEVEL, this.defaultValues.skillType);\n    this.placeholder = getDefault(this, data, 'placeholder', 'oh yeah');\n    // Relationships\n    this.sectionId = getNullDefault(this, data, 'sectionId', null);\n    this.partsIds = getRelationshipsDefault(this, data, 'partsIds', Part);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Serializes the line instance's relevant data.\n   * @method\n   * @returns {object}\n   */\n  serialize() {\n    return cleanupObject({\n      id: this.id,\n      type: this.type,\n      // Attributes\n      isDismissible: nullifyDefault(this, 'isDismissible', this.defaultValues),\n      skill: nullifyDefault(this, 'skill', this.defaultValues),\n      skillType: nullifyDefault(this, 'skillType', this.defaultValues),\n      skillLevel: nullifyDefault(this, 'skillLevel', this.defaultValues),\n      // Relationships\n      partsIds: this.partsIds,\n      sectionId: this.sectionId,\n    });\n  }\n}\n\nexport default Line;\n","// Global State\nimport { getDistributorGlobalState, setDistributorGlobalState } from '../../states/useDistributorState';\n// Engine and utilities\nimport Line from './line';\nimport { NULL, SECTION } from './enum';\nimport {\n  generateUniqueId,\n  getDefault,\n  getRelationshipsDefault,\n  getEnumDefault,\n  serializeKey,\n  getNullDefault,\n  nullifyDefault,\n  cleanupObject,\n} from './utilities';\nimport { ROMAN_NUMBER } from '../constants';\n\n/**\n * Class representing a Section - a collection of lines that will compose a song.\n */\nexport class Section {\n  /**\n   * Create a Section.\n   * @constructor\n   * @param {object} data - An object with the necessary data to be loaded in this instance\n   */\n  constructor(data) {\n    this._id = data?.id || generateUniqueId();\n    this._type = 'section';\n\n    // Attributes\n    this.kind = NULL;\n    this.number = 1;\n\n    // Relationships\n    this.linesIds = [];\n    this.songId = null;\n\n    // Internal\n    this._isSorted = false;\n\n    if (data) {\n      this.deserialize(data);\n    }\n  }\n\n  /**\n   * Save section to the React Global State.\n   */\n  _save() {\n    console.log('%cSaving section...', 'color:red');\n    setDistributorGlobalState('sections', (state) => {\n      return { ...state, [this.id]: this };\n    });\n  }\n\n  /**\n   * Get id.\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Get type.\n   * @type {string}\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * Get key.\n   * @type {string}\n   */\n  get key() {\n    return serializeKey(this.type, this.id);\n  }\n\n  /**\n   * Dictionary of default values for this instance.\n   */\n  get defaultValues() {\n    return {\n      kind: NULL,\n      number: 1,\n    };\n  }\n\n  /**\n   * List of lines.\n   * @type {Line[]}\n   */\n  get lines() {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const lines = this.linesIds.map((lineId) => library[lineId]);\n    if (!this._isSorted) {\n      return this.sort(lines);\n    }\n    return lines;\n  }\n\n  /**\n   * Get parent song instance\n   * @type {Song|null}\n   */\n  get song() {\n    const song = getDistributorGlobalState('song') ?? {};\n    return song.id === this.songId ? song : null;\n  }\n\n  /**\n   * Get the section before this instance in the song\n   * @type {Section|null}\n   */\n  get previousSection() {\n    const { sections = {} } = this.song ?? {};\n    const { sectionsIds = {} } = this.song ?? {};\n    const index = sectionsIds.findIndex((id) => id === this.id);\n    if (index < 1) return null;\n\n    return sections[index - 1];\n  }\n\n  /**\n   * Get the section after this instance in the song\n   * @type {Section|null}\n   */\n  get nextSection() {\n    const { sections = {} } = this.song ?? {};\n    const { sectionsIds = {} } = this.song ?? {};\n    const index = sectionsIds.findIndex((id) => id === this.id);\n    if (index === -1 || index >= sectionsIds.length) return null;\n\n    return sections[index + 1];\n  }\n\n  /**\n   * Builds name of the section\n   * @type {string}\n   */\n  get name() {\n    return `${this.kind} ${ROMAN_NUMBER[this.number]}`;\n  }\n\n  /**\n   * Get start time.\n   * @type {number}\n   */\n  get startTime() {\n    const firstLine = this.lines[0];\n    return firstLine?.startTime ?? 0;\n  }\n\n  /**\n   * Get end time.\n   * @type {number}\n   */\n  get endTime() {\n    const lastLine = this.lines.length > 0 ? this.lines[this.lines.length - 1] : null;\n    return lastLine?.endTime ?? 0;\n  }\n\n  /**\n   * Get duration.\n   * @type {number}\n   */\n  get duration() {\n    return (this.endTime || 0) - (this.startTime || 0);\n  }\n\n  /**\n   * Get aggregated text from each line.\n   * @type {string}\n   */\n  get text() {\n    if (!this.linesIds?.length) {\n      return `[${this.placeholder}]`;\n    }\n\n    return this.lines\n      .map((line) => {\n        if (line && line instanceof Line) {\n          if (line.isAdLib) {\n            return `(${line.text})`;\n          }\n\n          return line.text;\n        }\n        return '';\n      })\n      .join('\\n');\n  }\n\n  /**\n   * Percentage (0-100) of completion of this instance.\n   * @type {number}\n   */\n  get completion() {\n    const criteria = [\n      Boolean(this.songId), // has parent song\n      Boolean(this.linesIds.length), // has at last one child line\n      Boolean(SECTION?.[this.kind]), // has a section\n    ];\n    const complete = criteria.filter((i) => i);\n    const attributesCompletion = (100 * complete.length) / criteria.length;\n\n    return Math.floor((attributesCompletion + this.relationshipsCompletion) / 2);\n  }\n\n  /**\n   * Percentage (0-100) of completion of the child relationships of this instance.\n   */\n  get relationshipsCompletion() {\n    const relationshipsTotal = this.linesIds.length;\n    const relationshipsCompleted = this.lines.filter((l) => l.isComplete);\n\n    return (100 * relationshipsCompleted.length) / relationshipsTotal;\n  }\n\n  /**\n   * Flag indicating if the section has all required values.\n   * @type {boolean}\n   */\n  get isComplete() {\n    return this.completion === 100;\n  }\n\n  /**\n   * Get the complete data set.\n   * @type {object}\n   */\n  get data() {\n    return {\n      id: this._id,\n      // Getters\n      name: this.name,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      duration: this.duration,\n      text: this.text,\n      // Attributes\n      kind: this.kind,\n      number: this.number,\n      // Relationships\n      linesIds: this.linesIds,\n      songId: this.songId,\n    };\n  }\n\n  /**\n   * Sorts lines according to their starting time.\n   * @method\n   * @param {Line[]} lines\n   * @returns {object[]}\n   */\n  sort(lines = this.lines) {\n    const sortedLines = lines.sort((a, b) => (a.startTime >= b.startTime ? 1 : -1));\n\n    this.linesIds = sortedLines.map((entry) => entry.id);\n    this._isSorted = true;\n    return sortedLines;\n  }\n\n  /**\n   * Adds a line to the linesIds.\n   * @method\n   * @param {Line} line\n   */\n  addLine(line) {\n    const id = line?.id ? line.id : line;\n    const dict = Object.values(this.linesIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    dict[id] = true;\n\n    this.linesIds = Object.keys(dict);\n    this.sort();\n\n    this._save();\n\n    return this;\n  }\n\n  /**\n   * Removes a line from the linesIds.\n   * @method\n   * @param {string} id\n   */\n  removeLine(id) {\n    const dict = Object.values(this.linesIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    delete dict[id];\n\n    this.linesIds = Object.keys(dict);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Connects parent relationship adding song-section one-to-many relationship end-to-end.\n   * @method\n   * @param {string} songId\n   */\n  connectSong(songId) {\n    const library = getDistributorGlobalState('song') ?? {};\n    const song = library.id === songId ? library : null;\n\n    if (!song) throw Error(`Song ${songId} does not exist in the state`);\n\n    song.addSection(this);\n    this.deserialize({ songId });\n\n    return this;\n  }\n\n  /**\n   * Disconnects parent relationship removing song-section one-to-many relationship end-to-end.\n   * @method\n   * @param {string} songId\n   */\n  disconnectSong(songId) {\n    const library = getDistributorGlobalState('song') ?? {};\n    const song = library.id === songId ? library : null;\n\n    if (song) {\n      song.removeSection(this.id);\n    }\n    this.deserialize({ songId: null });\n\n    return this;\n  }\n\n  /**\n   * Connects child relationship adding section-line one-to-many relationship end-to-end.\n   * @method\n   * @param {string} lineId\n   */\n  connectLine(lineId) {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const line = library[lineId] ?? null;\n\n    if (!line) throw Error(`Section ${lineId} does not exist in the state`);\n\n    line.deserialize({ sectionId: this.id });\n    this.addLine(lineId);\n\n    return this;\n  }\n\n  /**\n   * Disconnects child relationship removing section-line one-to-many relationship end-to-end.\n   * @method\n   * @param {string} lineId\n   */\n  disconnectLine(lineId) {\n    const library = getDistributorGlobalState('lines') ?? {};\n    const line = library[lineId] ?? null;\n\n    if (line) {\n      line.deserialize({ sectionId: null });\n    }\n    this.removeLine(lineId);\n\n    return this;\n  }\n\n  /**\n   * De-serializes data and injects to this section instance.\n   * @method\n   * @param {object|null} data\n   */\n  deserialize(data) {\n    this._id = data.id ?? this._id ?? generateUniqueId();\n    // Attributes\n    this.kind = getEnumDefault(this, data, 'kind', SECTION, SECTION.VERSE);\n    this.number = getDefault(this, data, 'number', this.defaultValues.number);\n    this.placeholder = getDefault(this, data, 'placeholder', '');\n    // Relationships\n    this.songId = getNullDefault(this, data, 'songId', null);\n    this.linesIds = getRelationshipsDefault(this, data, 'linesIds', Line);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Serializes the section instance's relevant data.\n   * @method\n   * @returns {object}\n   */\n  serialize() {\n    return cleanupObject({\n      id: this.id,\n      type: this.type,\n      // Attributes\n      kind: nullifyDefault(this, 'kind', this.defaultValues),\n      number: nullifyDefault(this, 'number', this.defaultValues),\n      // Relationships\n      linesIds: this.linesIds,\n      songId: this.songId,\n    });\n  }\n}\n\nexport default Section;\n","// Global State\nimport { getDistributorGlobalState, setDistributorGlobalState } from '../../states/useDistributorState';\n// Engine and utilities\nimport Section from './section';\nimport {\n  generateUniqueId,\n  getDefault,\n  getNullDefault,\n  getRelationshipsDefault,\n  nullifyDefault,\n  serializeKey,\n} from './utilities';\nimport moment from 'moment';\n\n/**\n * Class representing a Song - a collection of sections.\n */\nexport class Song {\n  /**\n   * Create a Song.\n   * @constructor\n   * @param {object} data - An object with the necessary data to be loaded in this instance\n   */\n  constructor(data) {\n    this._id = data.id || 0; // Set to 0 so firebase can know to create a new key for it\n    this._type = 'song';\n    // Attributes\n    this.videoId = '';\n    this.title = '';\n    this.version = '';\n    this.createdAt = data.createdAt || Date.now();\n    this.updatedAt = null;\n\n    this.isSingle = false;\n    this.idealGroupSize = 5;\n    this.duration = moment(0, 'mm:ss');\n    this.tempo = 0;\n    this.genre = '';\n    this.style = '';\n    // Relationships\n    this.sectionsIds = [];\n    this.albumId = null;\n\n    // Internal\n    this._isSorted = true;\n\n    if (data) {\n      this.deserialize(data);\n    }\n  }\n\n  /**\n   * Save song to the React Global State.\n   */\n  _save() {\n    console.log('%cSaving song...', 'color:purple');\n    this.updatedAt = Date.now();\n    setDistributorGlobalState('song', this);\n  }\n\n  /**\n   * Get id.\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Get type.\n   * @type {string}\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * Get key.\n   * @type {string}\n   */\n  get key() {\n    return serializeKey(this.type, this.id);\n  }\n\n  /**\n   * Dictionary of default values for this instance.\n   */\n  get defaultValues() {\n    return {\n      isSingle: false,\n      idealGroupSize: 5,\n      tempo: 0,\n    };\n  }\n\n  /**\n   * List of sections.\n   * @type {Part[]}\n   */\n  get sections() {\n    const library = getDistributorGlobalState('sections') ?? {};\n    const sections = this.sectionsIds.map((sectionId) => library[sectionId]);\n    if (!this._isSorted) {\n      return this.sort(sections);\n    }\n    return sections;\n  }\n\n  /**\n   * Get aggregated text from each part.\n   * @type {string}\n   */\n  get text() {\n    return this.sections\n      .map((section) => {\n        if (section && section instanceof Section) {\n          return section.text;\n        }\n        return '';\n      })\n      .join('\\n');\n  }\n\n  /**\n   * Get the id of the first line.\n   * @type {string}\n   */\n  get firstLineId() {\n    return this.sections?.[0]?.lines[0]?.id ?? null;\n  }\n\n  /**\n   * Get the id of the last line.\n   * @type {string}\n   */\n  get lastLineId() {\n    const lastSection = this.sections?.[this.sections.length - 1];\n    return lastSection?.lines[lastSection.lines.length - 1]?.id ?? null;\n  }\n\n  /**\n   * Get a list of all ids of all parts in the song.\n   * @type {string[]}\n   */\n  get allPartsIds() {\n    return this.sections\n      .map((section) => section.lines)\n      .flat()\n      .map((line) => line.partsIds)\n      .flat();\n  }\n\n  /**\n   * Total number of parts on the song.\n   * @type {type}\n   */\n  get partsCount() {\n    return this.allPartsIds.length;\n  }\n\n  /**\n   * Percentage (0-100) of completion of this instance.\n   * @type {number}\n   */\n  get completion() {\n    const criteria = [\n      Boolean(this.videoId), // has a videoId\n      Boolean(this.title), // has a title\n      Boolean(this.duration), // has a duration\n      Boolean(this.tempo), // has a tempo\n      Boolean(this.genre), // has a genre\n      Boolean(this.style), // has a style\n      Boolean(this.sectionsIds.length), // has at last one child section\n    ];\n    const complete = criteria.filter((i) => i);\n    const attributesCompletion = (100 * complete.length) / criteria.length;\n\n    return Math.floor((attributesCompletion + this.relationshipsCompletion) / 2);\n  }\n\n  /**\n   * Percentage (0-100) of completion of the child relationships of this instance.\n   */\n  get relationshipsCompletion() {\n    const relationshipsTotal = this.sectionsIds.length;\n    const relationshipsCompleted = this.sections.filter((s) => s.isComplete);\n\n    return (100 * relationshipsCompleted.length) / relationshipsTotal;\n  }\n\n  /**\n   * Flag indicating if the section has all required values.\n   * @type {boolean}\n   */\n  get isComplete() {\n    return this.completion === 100;\n  }\n\n  /**\n   * Get the complete data set.\n   */\n  get data() {\n    return {\n      id: this.id,\n      type: this._type,\n      // Getters\n      text: this.text,\n      partsCount: this.partsCount,\n      // Attributes\n      videoId: this.videoId,\n      title: this.title,\n      version: this.version,\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n      isSingle: this.isSingle,\n      idealGroupSize: this.idealGroupSize,\n      duration: this.duration,\n      tempo: this.tempo,\n      genre: this.genre,\n      style: this.style,\n      // Relationships\n      albumId: this.albumId,\n      sectionsIds: this.sectionsIds,\n    };\n  }\n\n  /**\n   * Sorts sections according to their starting time.\n   * @method\n   * @param {Section[]} sections\n   * @returns {object[]}\n   */\n  sort(sections = this.sections) {\n    const sortedSections = sections.sort((a, b) => (a.startTime > b.startTime ? 1 : -1));\n\n    // Renumber the parts. e.g. VERSE 1, VERSE 2, etc...\n    const sectionsNumbers = {};\n    sortedSections.forEach((section) => {\n      if (sectionsNumbers[section.kind]) {\n        sectionsNumbers[section.kind] += 1;\n        section.deserialize({ number: sectionsNumbers[section.kind] });\n      } else {\n        sectionsNumbers[section.kind] = 1;\n      }\n    });\n\n    this.sectionsIds = sortedSections.map((entry) => entry.id);\n\n    this._isSorted = true;\n    return sortedSections;\n  }\n\n  /**\n   * Adds a section to the sectionsIds.\n   * @method\n   * @param {Section} section\n   */\n  addSection(section) {\n    const id = section?.id ? section.id : section;\n    const dict = Object.values(this.sectionsIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    dict[id] = true;\n\n    this.sectionsIds = Object.keys(dict);\n    this.sort();\n\n    this._save();\n\n    return this;\n  }\n\n  /**\n   * Removes a section from the sectionsIds.\n   * @method\n   * @param {string} id\n   */\n  removeSection(id) {\n    const dict = Object.values(this.sectionsIds).reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {});\n\n    delete dict[id];\n\n    this.sectionsIds = Object.keys(dict);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Connects child relationship adding song-section one-to-many relationship end-to-end.\n   * @method\n   * @param {string} sectionId\n   */\n  connectSection(sectionId) {\n    const library = getDistributorGlobalState('sections') ?? {};\n    const section = library[sectionId] ?? null;\n\n    if (!section) throw Error(`Section ${sectionId} does not exist in the state`);\n\n    section.deserialize({ songId: this.id });\n    this.addSection(this);\n\n    return this;\n  }\n\n  /**\n   * Removes song-section one-to-many relationship end-to-end.\n   * @method\n   * @param {string} sectionId\n   */\n  disconnectSection(sectionId) {\n    const library = getDistributorGlobalState('sections') ?? {};\n    const section = library[sectionId] ?? null;\n\n    if (section) {\n      section.deserialize({ songId: null });\n    }\n    this.removeSection(sectionId);\n\n    return this;\n  }\n\n  /**\n   * De-serializes data and injects to this song instance.\n   * @method\n   * @param {object|null} data\n   */\n  deserialize(data) {\n    this._id = data.id ?? this._id ?? generateUniqueId();\n    // Attributes\n    this.videoId = getDefault(this, data, 'videoId', '');\n    this.title = getDefault(this, data, 'title', '');\n    this.version = getDefault(this, data, 'version', '');\n    this.createdAt = getDefault(this, data, 'createdAt', Date.now());\n    this.updatedAt = getDefault(this, data, 'updatedAt', Date.now());\n    this.isSingle = getDefault(this, data, 'isSingle', false);\n    this.idealGroupSize = getDefault(this, data, 'idealGroupSize', 5);\n    const duration = getDefault(this, data, 'duration', 0);\n    if (duration) {\n      this.duration = moment(duration, 'mm:ss');\n    }\n    this.tempo = getDefault(this, data, 'tempo', '');\n    this.genre = getDefault(this, data, 'genre', '');\n    this.style = getDefault(this, data, 'style', '');\n    // Relationships\n    this.albumId = getNullDefault(this, data, 'albumId', null);\n    this.sectionsIds = getRelationshipsDefault(this, data, 'sectionsIds', Section);\n\n    this._save();\n    return this;\n  }\n\n  /**\n   * Serializes the song instance's relevant data.\n   * @method\n   * @returns {object}\n   */\n  serialize() {\n    // Gather included relationships\n    const included = [];\n    const sectionsLibrary = getDistributorGlobalState('sections') ?? {};\n    const linesLibrary = getDistributorGlobalState('lines') ?? {};\n    const partsLibrary = getDistributorGlobalState('parts') ?? {};\n    this.sectionsIds.forEach((sectionId) => {\n      const section = sectionsLibrary[sectionId];\n      // Add section serialized data to included\n      included.push(section.serialize());\n      // Iterate though lines\n      section.linesIds.forEach((lineId) => {\n        const line = linesLibrary[lineId];\n        // Add section serialized data to included\n        included.push(line.serialize());\n        // Iterate though parts\n        line.partsIds.forEach((partId) => {\n          const part = partsLibrary[partId];\n          // Add section serialized data to included\n          included.push(part.serialize());\n        });\n      });\n    });\n\n    return {\n      id: this.id,\n      type: this.type,\n\n      song: {\n        id: this.id,\n        type: this.type,\n        albumId: nullifyDefault(this, 'albumId', this.defaultValues),\n        completion: this.completion,\n        createdAt: nullifyDefault(this, 'createdAt', this.defaultValues),\n        duration: this.duration.format('mm:ss'),\n        genre: nullifyDefault(this, 'genre', this.defaultValues),\n        isComplete: this.isComplete,\n        isSingle: nullifyDefault(this, 'isSingle', this.defaultValues),\n        idealGroupSize: nullifyDefault(this, 'idealGroupSize', this.defaultValues),\n        style: nullifyDefault(this, 'style', this.defaultValues),\n        tempo: nullifyDefault(this, 'tempo', this.defaultValues),\n        title: nullifyDefault(this, 'title', this.defaultValues),\n        version: nullifyDefault(this, 'version', this.defaultValues),\n        videoId: nullifyDefault(this, 'videoId', this.defaultValues),\n        updatedAt: Date.now(),\n      },\n      data: {\n        id: this.id,\n        type: 'song-data',\n\n        sectionsIds: this.sectionsIds,\n        included,\n      },\n    };\n  }\n}\n\nexport default Song;\n","import API from '../api';\nimport { DATA_TYPE, DATA_TYPE_COLLECTION, DEFAULT_MEMBERS } from '../utils/constants';\nimport { serializeKey } from '../utils/distributor';\n\nexport class Store {\n  constructor() {\n    this._records = {};\n    this._collections = {};\n\n    this._loaded = {};\n    this._loadedInstance = {};\n  }\n\n  /**\n   * Retrieves record from the store or fetches the API.\n   * @param {string} type\n   * @param {string} id\n   * @returns {object}\n   */\n  async getRecord(type, id) {\n    if (!type) throw Error('A type is required to access the store');\n\n    if (!id) throw Error('An id is required to access a store record');\n\n    const key = serializeKey(type, id);\n\n    if (this._records[key]) {\n      return this._records[key];\n    }\n\n    switch (type) {\n      case DATA_TYPE.DISTRIBUTION_DATA:\n        await API.fetchDistributionData(id);\n        break;\n      case DATA_TYPE.MEMBER_DATA:\n        await API.fetchMember(id);\n        break;\n      case DATA_TYPE.SONG:\n        await API.fetchSong(id);\n        break;\n      case DATA_TYPE.SONG_DATA:\n        await API.fetchSongData(id);\n        break;\n\n      default:\n        throw Error(`Provided type ${type} is not supported`);\n    }\n\n    this._loaded[key] = Date.now();\n    return this._records[key];\n  }\n\n  /**\n   * Retrieves collection of data from the store or fetches the API\n   * @param {string} type\n   * @param {boolean} [asObject] return result as object\n   * @returns {object[]}\n   */\n  async getCollection(type, asObject = false, extra = null) {\n    if (!type) throw Error('A type is required to access the store');\n\n    if (this._collections[type] && Object.values(this._collections[type]).length && !extra) {\n      if (asObject) {\n        return this._collections[type];\n      }\n      return Object.values(this._collections[type]).sort(collectionSorting[type]);\n    }\n\n    const [filterKey, id] = Object.entries(extra ?? {})?.[0] ?? [];\n\n    if (filterKey && id && this._collections[type] && Object.values(this._collections[type]).length) {\n      const result = Object.values(this._collections[type])\n        .filter((entry) => entry[filterKey] === id)\n        .sort(collectionSorting[type]);\n\n      if (result.length > 0) {\n        return result;\n      }\n    }\n\n    switch (type) {\n      case DATA_TYPE_COLLECTION[DATA_TYPE.DISTRIBUTION]:\n        await API.fetchDistributions(id);\n        this._updateCollection(DATA_TYPE.DISTRIBUTION, true);\n        break;\n      case DATA_TYPE_COLLECTION[DATA_TYPE.GROUP]:\n        await API.fetchGroups();\n        this._updateCollection(DATA_TYPE.GROUP);\n        break;\n      case DATA_TYPE_COLLECTION[DATA_TYPE.MEMBER]:\n        await API.fetchMembers();\n        this._updateCollection(DATA_TYPE.MEMBER);\n        break;\n      case DATA_TYPE_COLLECTION[DATA_TYPE.SONG]:\n        await API.fetchSongs();\n        this._updateCollection(DATA_TYPE.SONG);\n        break;\n\n      default:\n        throw Error(`Provided type ${type} is not supported`);\n    }\n\n    if (asObject) {\n      return this._collections[type];\n    }\n\n    if (filterKey && id) {\n      return Object.values(this._collections[type])\n        .filter((entry) => entry[filterKey] === id)\n        .sort(collectionSorting[type]);\n    }\n\n    return Object.values(this._collections[type]).sort(collectionSorting[type]);\n  }\n\n  /**\n   * Set record\n   * @param {string} type\n   * @param {string} id\n   * @param {object} data\n   */\n  setRecord(data, id) {\n    if (!data.type) throw Error('A type is required to access the store');\n\n    if (!id && !data.id) throw Error('An id is required to access a store record');\n\n    const key = serializeKey(data.type, id ?? data.id);\n    this._records[key] = data;\n    return this._records[key];\n  }\n\n  /**\n   * Builds a dictionary with all the\n   * @param {string} type\n   * @param {boolean} [isAdditive] - indicates if the incoming data should just be added to the existing one\n   */\n  _updateCollection(type, isAdditive = false) {\n    const incomingData = Object.entries(this._records).reduce((acc, [recordKey, record]) => {\n      if (record.type === type) {\n        acc[recordKey] = record;\n      }\n      return acc;\n    }, {});\n\n    if (isAdditive) {\n      this._collections[DATA_TYPE_COLLECTION[type]] = {\n        ...this._collections[DATA_TYPE_COLLECTION[type]],\n        ...incomingData,\n      };\n    } else {\n      this._collections[DATA_TYPE_COLLECTION[type]] = incomingData;\n    }\n  }\n}\n\nconst DEFAULT_SORTING = (a, b) => {\n  const x = a.id;\n  const y = b.id;\n  return x < y ? -1 : x > y ? 1 : 0;\n};\n\nconst collectionSorting = {\n  [DATA_TYPE_COLLECTION[DATA_TYPE.ALBUM]]: (a, b) => {\n    const x = a?.title ?? a.id;\n    const y = b?.title ?? b.id;\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  [DATA_TYPE_COLLECTION[DATA_TYPE.DISTRIBUTION]]: (a, b) => {\n    const x = a?.songTitle ?? a?.name ?? a.id;\n    const y = b?.songTitle ?? b?.name ?? b.id;\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  [DATA_TYPE_COLLECTION[DATA_TYPE.DISTRIBUTION_DATA]]: DEFAULT_SORTING,\n  [DATA_TYPE_COLLECTION[DATA_TYPE.GROUP]]: (a, b) => {\n    const x = a?.debutYear ?? a?.name ?? a.id;\n    const y = b?.debutYear ?? b?.name ?? b.id;\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  [DATA_TYPE_COLLECTION[DATA_TYPE.MEMBER]]: (a, b) => {\n    const x = a?.age ?? a?.name ?? a.id;\n    const y = b?.age ?? b?.name ?? b.id;\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  [DATA_TYPE_COLLECTION[DATA_TYPE.MEMBER_DATA]]: DEFAULT_SORTING,\n  [DATA_TYPE_COLLECTION[DATA_TYPE.SONG]]: (a, b) => {\n    const x = a?.title ?? a?.version ?? a.id;\n    const y = b?.title ?? b?.version ?? b.id;\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  [DATA_TYPE_COLLECTION[DATA_TYPE.SONG_DATA]]: DEFAULT_SORTING,\n};\n\nconst store = new Store();\n\nexport default store;\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  notification: {\n    type: null,\n    message: null,\n    description: null,\n  },\n  isLoading: false,\n  activeGroup: null,\n  activeMembers: null,\n  loadedLineDistribution: {},\n  lineDistribution: {},\n  stats: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState };\n\nexport default useGlobalState;\n","import { createStore } from 'react-hooks-global-state';\nimport { DATA_TYPE } from '../utils/constants';\n\nconst reducer = (state, action) => {\n  const newState = { ...state };\n\n  if (reducerTypeMapping[action.type]) {\n    newState[reducerTypeMapping[action.type]] = action.payload;\n  } else {\n    console.warn('Invalid loading type', { action });\n    return state;\n  }\n\n  delete newState.isLoading;\n  newState.isLoading = Object.values(newState).some((v) => v);\n  return newState;\n};\n\nconst initialState = {\n  isLoading: false,\n  isAlbumLoading: false,\n  isDistributionLoading: false,\n  isDistributionDataLoading: false,\n  isGroupLoading: false,\n  isMemberLoading: false,\n  isMemberDataLoading: false,\n  isSongLoading: false,\n  isSongDataLoading: false,\n};\n\nconst reducerTypeMapping = {\n  [DATA_TYPE.ALBUM]: 'isAlbumLoading',\n  [DATA_TYPE.DISTRIBUTION]: 'isDistributionLoading',\n  [DATA_TYPE.DISTRIBUTION_DATA]: 'isDistributionDataLoading',\n  [DATA_TYPE.GROUP]: 'isGroupLoading',\n  [DATA_TYPE.MEMBER]: 'isMemberLoading',\n  [DATA_TYPE.MEMBER_DATA]: 'isMemberDataLoading',\n  [DATA_TYPE.SONG]: 'isSongLoading',\n  [DATA_TYPE.SONG_DATA]: 'isSongDataLoading',\n};\n\nconst { dispatch, useGlobalState } = createStore(reducer, initialState);\n\nexport { dispatch as setLoading, reducerTypeMapping, useGlobalState as useLoadingState };\n\nexport default useGlobalState;\n","import { serializeKey } from './distributor';\n\nconst wasPrinted = {};\nexport function printProps(props, name = 'PROP') {\n  if (wasPrinted[name] !== undefined) return;\n\n  wasPrinted[name] = true;\n\n  console.log(name);\n  console.log('Colors:', props.map((e) => e.hex).join(', ') + ';');\n  console.log(\n    'Rate:',\n    props.reduce((acc, f) => {\n      return acc + f.rate;\n    }, 0)\n  );\n  console.log('Count:', props.length);\n  console.log('==========');\n}\n\n/**\n * Generate classes modifiers with always the base class (first argument) present\n * @param  {...any} args\n * @returns {string}\n */\nexport const bemClass = (...args) => {\n  if (args.length === 0) return Error('Missing required baseClass');\n\n  const baseClass = args[0];\n  return args.filter((c) => c).join(` ${baseClass}--`);\n};\n\n/**\n * Return modifier if condition is met, else empty string\n * @param {boolean|*} condition\n * @param {string} modifier\n * @return {string}\n */\nexport const getBemModifier = (condition, modifier) => {\n  return Boolean(condition) ? modifier : '';\n};\n\n/**\n * Output base class with modifier if condition is positive, otherwise, just base class\n * @param {string} baseClass\n * @param {string} modifier\n * @param {boolean} condition\n * @returns {string}\n */\nexport const bemClassConditionalModifier = (baseClass, modifier, condition) => {\n  return bemClass(baseClass, getBemModifier(condition, modifier));\n};\n\n/**\n * Calculate the duration of a timestamp object.\n * @param {{ endTime: number, startTime: number}} timestamps\n * @returns {number}\n */\nexport const getTimestampDuration = ({ endTime, startTime }) => endTime - startTime;\n\n/**\n * Convert a timestamp into a frame based on the framerate.\n * @param {number} timestamp\n * @param {number} framerate\n * @returns {number}\n */\nexport const getFrameFromTimestamp = (timestamp, framerate) => {\n  return Math.floor(timestamp / (1000 / framerate));\n};\n\n/**\n * Convert a frame int a timestamp based on the framerate\n * @param {number} frame\n * @param {number} framerate\n * @returns {number}\n */\nexport const getTimestampFromFrame = (frame, framerate) => {\n  return frame * (1000 / framerate);\n};\n\n/**\n * Creates an mock distribution with random assignees\n * @param {Part{}} partsIds\n * @return {object}\n */\nexport const buildMockDistribution = (parts) => {\n  const data = Object.values(parts).reduce((acc, part) => {\n    acc[part.id] = { [serializeKey('member', part.assignee)]: true };\n    return acc;\n  }, {});\n\n  return {\n    id: 'sample-distribution-id',\n    type: 'distribution',\n    groupId: 'sample-group-id',\n    songId: 'sample-song-id',\n    data,\n  };\n};\n\n/**\n * Injects a song id into the sections in the included array.\n * This is necessary when the song is about to be created and does not have an id yet.\n * @param {object[]} includedData\n * @param {string} songId\n * @returns {object[]}\n */\nexport const injectSongIdToSections = (includedData, songId) => {\n  return includedData.map((instance) => {\n    if (instance.type === 'section') {\n      instance.songId = songId;\n    }\n    return instance;\n  });\n};\n\n/**\n * Adds # to the beginning of a hex color if it doesn't exist.\n * @param {string} hexColor\n * @returns {strings}\n */\nexport const parseColor = (hexColor) => {\n  return hexColor.startsWith('#') ? hexColor : `#${hexColor}`;\n};\n\n/**\n * Makes a deep copy of given data.\n * @param {*} data\n * @return {*}\n */\nexport const deepCopy = (data) => JSON.parse(JSON.stringify(data));\n\n/**\n * Removes unnecessary data (lines) from stats object\n * @param {object} stats\n */\nexport const cleanupStats = (stats) => {\n  const data = deepCopy(stats);\n  Object.values(data).forEach((entry) => {\n    delete entry.lines;\n  });\n  return data;\n};\n","import { cleanupStats, injectSongIdToSections } from '../utils';\nimport { DATA_TYPE, POSITIONS_WEIGHT } from '../utils/constants';\nimport { cleanupObject } from '../utils/distributor';\n\nconst deserialize = (data, id) => {\n  const cleanData = cleanupObject(data);\n\n  switch (data.type) {\n    case DATA_TYPE.DISTRIBUTION:\n      return deserializer.distribution(data, id);\n    case DATA_TYPE.GROUP:\n      return deserializer.group(cleanData, id);\n    case DATA_TYPE.MEMBER:\n      return deserializer.member(cleanData, id);\n    case DATA_TYPE.SONG:\n      return deserializer.song(cleanData, id);\n    case DATA_TYPE.SONG_DATA:\n      return deserializer.songData(cleanData, id);\n    default:\n      return { ...data, id: id ?? data.id };\n  }\n};\n\nconst deserializer = {\n  distribution: (data, id) => {\n    return {\n      distribution: {\n        id: id ?? data.id,\n        type: 'distribution',\n        name: data.name,\n        songId: data.songId,\n        songTitle: data.songTitle,\n        groupId: data.groupId,\n        stats: JSON.stringify(cleanupStats(data.stats)),\n      },\n      data: {\n        id: id ?? data.id,\n        type: 'distribution-data',\n        groupId: data.groupId,\n        assignedParts: JSON.stringify(data.assignedParts),\n      },\n    };\n  },\n  group: (data, id) => {\n    return {\n      ...data,\n      id: id ?? data.id,\n    };\n  },\n  member: (data, id) => {\n    return {\n      ...data,\n      id: id ?? data.id,\n      positions: data.positions.sort((a, b) =>\n        POSITIONS_WEIGHT[b] > POSITIONS_WEIGHT[a] ? -1 : POSITIONS_WEIGHT[b] < POSITIONS_WEIGHT[a] ? 1 : 0\n      ),\n    };\n  },\n  song: (data, id) => {\n    return {\n      ...data,\n      id: id ?? data.id,\n    };\n  },\n\n  songData: (data, id) => {\n    return {\n      ...data,\n      id: id ?? data.id,\n      sectionsIds: JSON.stringify(data.sectionsIds),\n      // Inject songId to included sections songId\n      included: JSON.stringify(injectSongIdToSections(data.included, id ?? data.id)),\n    };\n  },\n};\n\nexport default deserialize;\n","import { parseColor } from '../utils';\nimport { DATA_TYPE } from '../utils/constants';\nimport { serializeKey } from '../utils/distributor';\n\nconst serialize = (data, id) => {\n  switch (data.type) {\n    case DATA_TYPE.DISTRIBUTION:\n      return serializer.distribution(data, id);\n    case DATA_TYPE.DISTRIBUTION_DATA:\n      return serializer.distributionData(data, id);\n    case DATA_TYPE.GROUP:\n      return serializer.group(data, id);\n    case DATA_TYPE.MEMBER:\n      return serializer.member(data, id);\n    case DATA_TYPE.SONG:\n      return serializer.song(data, id);\n    case DATA_TYPE.SONG_DATA:\n      return serializer.songData(data, id);\n    default:\n      return { ...data, key: serializeKey(data.type, id ?? data.id) };\n  }\n};\n\nconst serializer = {\n  distribution: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      name: data.name,\n      songId: data.songId,\n      songTitle: data.songTitle,\n      groupId: data.groupId,\n      stats: JSON.parse(data.stats ?? '') || {},\n    };\n  },\n  distributionData: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      groupId: data.groupId,\n      assignedParts: JSON.parse(data.assignedParts ?? '') || {},\n    };\n  },\n  group: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      name: data.name,\n      debutYear: data.debutYear ?? 0,\n      disbandmentYear: data.disbandmentYear ?? 0,\n      membersIds: data.membersIds ?? [],\n    };\n  },\n  member: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      name: data.name,\n      age: data.age,\n      color: data.color ? parseColor(data.color) : '',\n      colorName: data.colorName ?? '',\n      codename: data.codename ?? '',\n      tagline: data.tagline ?? '',\n      isContestant: data.isContestant ?? false,\n      positions: data.positions ?? [],\n    };\n  },\n  song: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      albumId: data.albumId ?? 'N/A',\n      completion: data.completion,\n      createdAt: data.createdAt,\n      duration: data.duration ?? '00:00',\n      genre: data.genre ?? '',\n      idealGroupSize: data.idealGroupSize ?? 5,\n      isComplete: data.isComplete,\n      isSingle: Boolean(data.isSingle),\n      style: data.style ?? '',\n      tempo: data.tempo ?? 0,\n      title: data.title ?? 'Untitled',\n      version: data.version ?? '',\n      videoId: data.videoId,\n      updatedAt: data.updatedAt,\n    };\n  },\n\n  songData: (data, id) => {\n    return {\n      id: id ?? data.id,\n      type: data.type,\n      key: serializeKey(data.type, id ?? data.id),\n      sectionsIds: JSON.parse(data.sectionsIds ?? '') || [],\n      included: JSON.parse(data.included ?? '') || [],\n    };\n  },\n};\n\nexport default serialize;\n","import { db } from '../services/firebase';\n\nimport store from '../services/store';\nimport { setGlobalState } from '../states/useGlobalState';\nimport { setLoading } from '../states/useLoadingState';\nimport { DATA_TYPE, DATA_TYPE_COLLECTION } from '../utils/constants';\nimport deserialize from './deserializers';\nimport serialize from './serializers';\n\n/**\n * Sets a global error notification.\n * @param {string} message\n * @param {*} error\n */\nconst errorNotification = (message, error) => {\n  setGlobalState('notification', {\n    type: 'error',\n    message: message || 'Fail to do something in the API',\n    description: error?.message ?? error ?? 'Unknown error',\n  });\n  console.error(error);\n};\n\n/**\n * Sets a global success notification.\n * @param {string} message\n * @param {*} description\n */\nconst successNotification = (message, description) => {\n  setGlobalState('notification', {\n    type: 'success',\n    message: message || 'Action Successful',\n    description: description || 'It worked',\n  });\n};\n\n// API\n\n/**\n * Query GET `/albums`\n */\nconst fetchAlbums = async () => {\n  setLoading({ type: DATA_TYPE.ALBUM, payload: true });\n\n  const collectionName = DATA_TYPE_COLLECTION[DATA_TYPE.ALBUM];\n\n  try {\n    await db\n      .ref()\n      .child(collectionName)\n      .once('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          const { key } = childSnapshot;\n          store.setRecord(serialize(childSnapshot.val()), key);\n        });\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${collectionName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.ALBUM, payload: false });\n  }\n};\n\n/**\n * Query `/distributions/<group_id>`\n */\nconst fetchDistributions = async (groupId) => {\n  setLoading({ type: DATA_TYPE.DISTRIBUTION, payload: true });\n\n  const collectionName = DATA_TYPE_COLLECTION[DATA_TYPE.DISTRIBUTION];\n\n  try {\n    if (!groupId) {\n      throw Error('A group ID is required to query distributions');\n    }\n\n    await db\n      .ref()\n      .child(collectionName)\n      .child(groupId)\n      .once('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          const { key } = childSnapshot;\n          store.setRecord(serialize(childSnapshot.val()), key);\n        });\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${collectionName} for group ${groupId}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.DISTRIBUTION, payload: false });\n  }\n};\n\n/**\n * Query GET `/distributions-data/<id>`\n */\nconst fetchDistributionData = async (distributionId) => {\n  setLoading({ type: DATA_TYPE.DISTRIBUTION_DATA, payload: true });\n\n  const typeName = DATA_TYPE.DISTRIBUTION_DATA;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    if (!distributionId) {\n      throw Error('A distribution ID is required');\n    }\n\n    await db\n      .ref()\n      .child(collectionName)\n      .child(distributionId)\n      .once('value', function (snapshot) {\n        const { key } = snapshot;\n        store.setRecord(serialize(snapshot.val()), key);\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${typeName} ${distributionId}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.DISTRIBUTION_DATA, payload: false });\n  }\n};\n\n/**\n * Query POST `/distribution/<id>`\n */\nconst saveDistribution = async (data) => {\n  setLoading({ type: DATA_TYPE.DISTRIBUTION, payload: true });\n\n  let response;\n\n  const typeName = DATA_TYPE.DISTRIBUTION;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    // Create new key if it is a new instance\n    const key = data.id || db.ref().child(collectionName).push().key;\n    const deserializedData = deserialize({ ...data, type: typeName }, key);\n\n    const { groupId, songId } = deserializedData.distribution;\n\n    if (!groupId) {\n      throw Error('Distribution must include a group ID');\n    }\n\n    if (!songId) {\n      throw Error('Distribution must include a song ID');\n    }\n\n    const distributionDataCollectionName = DATA_TYPE_COLLECTION[DATA_TYPE.DISTRIBUTION_DATA];\n\n    await db.ref(`/${collectionName}/${groupId}/${key}`).set(deserializedData.distribution);\n    await db.ref(`/${distributionDataCollectionName}/${key}`).set(deserializedData.data);\n\n    store.setRecord(serialize(deserializedData.distribution));\n    store.setRecord(serialize(deserializedData.data));\n\n    successNotification('Distribution saved successfully', `id: ${key}`);\n  } catch (error) {\n    errorNotification(`Failed to save ${typeName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.DISTRIBUTION, payload: false });\n  }\n\n  return response;\n};\n\n/**\n * Query GET `/groups`\n */\nconst fetchGroups = async () => {\n  setLoading({ type: DATA_TYPE.GROUP, payload: true });\n\n  const collectionName = DATA_TYPE_COLLECTION[DATA_TYPE.GROUP];\n\n  try {\n    await db\n      .ref()\n      .child(collectionName)\n      .once('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          const { key } = childSnapshot;\n          store.setRecord(serialize(childSnapshot.val()), key);\n        });\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${collectionName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.GROUP, payload: false });\n  }\n};\n\n/**\n * Query POST `/groups/<id>`\n */\nconst saveGroup = async (data) => {\n  setLoading({ type: DATA_TYPE.GROUP, payload: true });\n\n  let response;\n\n  const typeName = DATA_TYPE.GROUP;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    // Create new key if it is a new instance\n    const key = data.id || db.ref().child(collectionName).push().key;\n    const deserializedData = deserialize({ ...data, type: typeName }, key);\n\n    await db.ref(`/${collectionName}/${key}`).set(deserializedData);\n    store.setRecord(serialize(deserializedData));\n\n    successNotification('Group saved successfully', `id: ${key}`);\n  } catch (error) {\n    errorNotification(`Failed to save ${typeName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.GROUP, payload: false });\n  }\n\n  return response;\n};\n\n/**\n * Query GET `/members`\n */\nconst fetchMembers = async () => {\n  setLoading({ type: DATA_TYPE.MEMBER, payload: true });\n\n  const collectionName = DATA_TYPE_COLLECTION[DATA_TYPE.MEMBER];\n\n  try {\n    await db\n      .ref()\n      .child(collectionName)\n      .once('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          const { key } = childSnapshot;\n          store.setRecord(serialize(childSnapshot.val()), key);\n        });\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${collectionName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.MEMBER, payload: false });\n  }\n};\n\n/**\n * Query GET `/members/<id>`\n */\nconst fetchMember = async (memberId) => {\n  setLoading({ type: DATA_TYPE.MEMBER, payload: true });\n\n  const typeName = DATA_TYPE.MEMBER;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    if (!memberId) {\n      throw Error('A member ID is required');\n    }\n\n    await db\n      .ref()\n      .child(collectionName)\n      .child(memberId)\n      .once('value', function (snapshot) {\n        const { key } = snapshot;\n        store.setRecord(serialize(snapshot.val()), key);\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${typeName} ${memberId}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.MEMBER, payload: false });\n  }\n};\n\n/**\n * Query POST `/members/<id>`\n */\nconst saveMember = async (data) => {\n  setLoading({ type: DATA_TYPE.MEMBER, payload: true });\n\n  let response;\n\n  const typeName = DATA_TYPE.MEMBER;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    // Create new key if it is a new instance\n    const key = data.id || db.ref().child(collectionName).push().key;\n    const deserializedData = deserialize({ ...data, type: typeName }, key);\n\n    await db.ref(`/${collectionName}/${key}`).set(deserializedData);\n    store.setRecord(serialize(deserializedData));\n\n    successNotification('Member saved successfully', `id: ${key}`);\n  } catch (error) {\n    errorNotification(`Failed to save ${typeName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.MEMBER, payload: false });\n  }\n\n  return response;\n};\n\n/**\n * Query GET `/songs`\n */\nconst fetchSongs = async () => {\n  setLoading({ type: DATA_TYPE.SONG, payload: true });\n\n  const collectionName = DATA_TYPE_COLLECTION[DATA_TYPE.SONG];\n\n  try {\n    await db\n      .ref()\n      .child(collectionName)\n      .once('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          const { key } = childSnapshot;\n          store.setRecord(serialize(childSnapshot.val()), key);\n        });\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${collectionName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.SONG, payload: false });\n  }\n};\n\n/**\n * Query GET `/songs/<id>`\n */\nconst fetchSong = async (songId) => {\n  setLoading({ type: DATA_TYPE.SONG, payload: true });\n\n  const typeName = DATA_TYPE.SONG;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    if (!songId) {\n      throw Error('A song ID is required');\n    }\n\n    await db\n      .ref()\n      .child(collectionName)\n      .child(songId)\n      .once('value', function (snapshot) {\n        const { key } = snapshot;\n        store.setRecord(serialize(snapshot.val()), key);\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${typeName} ${songId}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.SONG, payload: false });\n  }\n};\n\n/**\n * Query GET `/songs-data/<id>`\n */\nconst fetchSongData = async (songId) => {\n  setLoading({ type: DATA_TYPE.SONG_DATA, payload: true });\n\n  const typeName = DATA_TYPE.SONG_DATA;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n\n  try {\n    await db\n      .ref()\n      .child(collectionName)\n      .child(songId)\n      .once('value', function (snapshot) {\n        const { key } = snapshot;\n        store.setRecord(serialize(snapshot.val()), key);\n      });\n  } catch (error) {\n    errorNotification(`Failed to load ${typeName} ${songId}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.SONG_DATA, payload: false });\n  }\n};\n\n/**\n * Query POST `/songs/<id>`\n */\nconst saveSong = async (data) => {\n  setLoading({ type: DATA_TYPE.SONG, payload: true });\n\n  let response;\n  const typeName = DATA_TYPE.SONG;\n  const collectionName = DATA_TYPE_COLLECTION[typeName];\n  const dataCollectionName = DATA_TYPE_COLLECTION[DATA_TYPE.SONG_DATA];\n\n  try {\n    // Create new key if it is a new instance\n    const key = data.id || db.ref().child('songs').push().key;\n    const deserializedSong = deserialize({ ...data.song }, key);\n    const deserializedSongData = deserialize({ ...data.data }, key);\n\n    await db.ref(`/${collectionName}/${key}`).set(deserializedSong);\n    store.setRecord(serialize(deserializedSong));\n\n    await db.ref(`/${dataCollectionName}/${key}`).set(deserializedSongData);\n    store.setRecord(serialize(deserializedSongData));\n\n    successNotification('Song saved successfully', `id: ${key}`);\n  } catch (error) {\n    errorNotification(`Failed to save ${typeName}`, error);\n  } finally {\n    setLoading({ type: DATA_TYPE.SONG, payload: false });\n  }\n\n  return response;\n};\n\nconst API = {\n  fetchAlbums,\n  fetchDistributions,\n  fetchDistributionData,\n  fetchGroups,\n  fetchMembers,\n  fetchMember,\n  fetchSongs,\n  fetchSong,\n  fetchSongData,\n  saveDistribution,\n  saveGroup,\n  saveMember,\n  saveSong,\n};\n\nexport default API;\n","import React, { Fragment } from 'react';\n\n// Design Resources\nimport { Spin } from 'antd';\nimport { BorderOutlined } from '@ant-design/icons';\n// State\nimport { reducerTypeMapping, useLoadingState } from '../../states/useLoadingState';\n\nfunction LoadingContainer({ children, waitFor, noResults = false, forceLoading = false, size = 'large' }) {\n  const [isLoading] = useLoadingState(reducerTypeMapping?.[waitFor] ?? 'isLoading');\n\n  if (isLoading || forceLoading) {\n    return (\n      <div className=\"loading-container\">\n        <Spin size={size} />\n      </div>\n    );\n  }\n\n  if (noResults) {\n    return (\n      <div className=\"loading-container\">\n        <BorderOutlined />\n        <p className=\"loading-container__message\">No data to display</p>\n      </div>\n    );\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default LoadingContainer;\n","import React, { useState, useCallback, useEffect, Fragment } from 'react';\n\n// Design Resources\nimport { Button, Modal, Spin, Table } from 'antd';\n// State\nimport useLoadingState from '../../states/useLoadingState';\n// Store\nimport store from '../../services/store';\n// Components\nimport LoadingContainer from '../global/LoadingContainer';\n\nfunction LoadMemberModal({\n  setLoadedData,\n  buttonLabel = 'Load Member',\n  onBeforeLoad = () => {},\n  onAfterLoad = () => {},\n}) {\n  const [isMemberLoading] = useLoadingState('isMemberLoading');\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setIsModalVisible(true)} disabled={isMemberLoading}>\n        {isMemberLoading ? <Spin size=\"small\" /> : buttonLabel}\n      </Button>\n\n      {isModalVisible && (\n        <MemberModal\n          isModalVisible={isModalVisible}\n          setIsModalVisible={setIsModalVisible}\n          onBeforeLoad={onBeforeLoad}\n          setLoadedData={setLoadedData}\n          onAfterLoad={onAfterLoad}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction MemberModal({ isModalVisible, setIsModalVisible, onBeforeLoad, setLoadedData, onAfterLoad }) {\n  const [isMemberLoading] = useLoadingState('isMemberLoading');\n\n  const [data, setData] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  useEffect(() => {\n    async function loadMembers() {\n      setData(await store.getCollection('members'));\n    }\n    loadMembers();\n  }, []);\n\n  const onCancelModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const onLoadMember = useCallback(() => {\n    async function fetchData() {\n      onBeforeLoad();\n\n      setLoadedData(await store.getRecord('member', selectedId));\n\n      setSelectedId(null);\n      onAfterLoad();\n      setIsModalVisible(false);\n    }\n\n    fetchData();\n  }, [selectedId, setLoadedData, onBeforeLoad, onAfterLoad, setIsModalVisible]);\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n    },\n\n    {\n      title: 'Age',\n      dataIndex: 'age',\n    },\n    {\n      title: 'Tagline',\n      dataIndex: 'tagline',\n      render: (text) => `\"${text}\"`,\n    },\n  ];\n\n  const rowSelection = {\n    onChange: (_, selectedRows) => {\n      setSelectedId(selectedRows[0].id);\n    },\n  };\n\n  return (\n    <Modal\n      title=\"Members\"\n      visible={isModalVisible}\n      onOk={onLoadMember}\n      okText=\"Load Member\"\n      onCancel={onCancelModal}\n      okButtonProps={{ disabled: isMemberLoading || Boolean(!setSelectedId) }}\n    >\n      <LoadingContainer waitFor=\"member\">\n        <Table\n          rowSelection={{\n            type: 'radio',\n            ...rowSelection,\n          }}\n          columns={columns}\n          dataSource={data ?? []}\n        />\n      </LoadingContainer>\n    </Modal>\n  );\n}\n\nexport default LoadMemberModal;\n","import React, { useState, useEffect } from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Checkbox, Select, Divider } from 'antd';\n// API\nimport API from '../../api';\n// Utilities\nimport { POSITIONS } from '../../utils/constants';\nimport { bemClass } from '../../utils';\n// Components\nimport LoadMemberModal from '../modals/LoadMemberModal';\n\nfunction EditMember() {\n  const [loadedData, setLoadedData] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue(loadedData);\n  }, [form, loadedData]);\n\n  const onFinish = async (values) => {\n    try {\n      await API.saveMember(values);\n      form.resetFields();\n    } catch (_) {}\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const requiredRule = [{ required: true }];\n\n  return (\n    <section className=\"admin__form-container\">\n      <h3>Create/Edit Member</h3>\n      <div className={bemClass('admin-button-container', 'center')}>\n        <LoadMemberModal setLoadedData={setLoadedData} />\n      </div>\n\n      <Divider />\n\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"edit-member\"\n        onFinish={onFinish}\n        className=\"admin-form admin-edit-member-form\"\n        autoComplete=\"off\"\n        preserve={false}\n      >\n        <Form.Item label=\"ID\" name=\"id\" className=\"admin-form__item\">\n          <Input disabled />\n        </Form.Item>\n\n        <Form.Item label=\"Name\" name=\"name\" className=\"admin-form__item\" rules={requiredRule}>\n          <Input />\n        </Form.Item>\n\n        <div className={bemClass('admin-form__items', '2')}>\n          <Form.Item label=\"Color\" name=\"color\" className=\"admin-form__item\" rules={requiredRule}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Color Name\" name=\"colorName\" className=\"admin-form__item\">\n            <Input />\n          </Form.Item>\n        </div>\n\n        <div className={bemClass('admin-form__items', '2')}>\n          <Form.Item label=\"Codename\" name=\"codename\" className=\"admin-form__item\">\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Tagline\" name=\"tagline\" className=\"admin-form__item\">\n            <Input />\n          </Form.Item>\n        </div>\n\n        <div className={bemClass('admin-form__items', '4')}>\n          <Form.Item label=\"Age\" name=\"age\" className=\"admin-form__item\">\n            <InputNumber min={12} />\n          </Form.Item>\n          <Form.Item\n            label=\"Contestant\"\n            name=\"isContestant\"\n            className=\"admin-form__item\"\n            valuePropName=\"checked\"\n          >\n            <Checkbox />\n          </Form.Item>\n          <Form.Item label=\"Positions\" name=\"positions\" className={bemClass('admin-form__item', 'double')}>\n            <Select\n              mode=\"multiple\"\n              allowClear\n              style={{ width: '100%' }}\n              placeholder=\"Please select a position\"\n            >\n              {Object.values(POSITIONS).map((position) => (\n                <Select.Option key={position}>{position}</Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <div></div>\n        </div>\n\n        <Form.Item className=\"admin-form__item\">\n          <div className={bemClass('admin-button-container', 'right')}>\n            <Button htmlType=\"button\" onClick={onReset}>\n              Reset\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Member\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </section>\n  );\n}\n\nexport default EditMember;\n","import React, { useState, useCallback, useEffect, Fragment } from 'react';\n\n// Design Resources\nimport { Button, Modal, Spin, Table } from 'antd';\n// State\nimport useLoadingState from '../../states/useLoadingState';\n// Store\nimport store from '../../services/store';\n// Components\nimport LoadingContainer from '../global/LoadingContainer';\n\nfunction LoadGroupModal({\n  setLoadedData,\n  buttonLabel = 'Load Member',\n  onBeforeLoad = () => {},\n  onAfterLoad = () => {},\n}) {\n  const [isMemberLoading] = useLoadingState('isMemberLoading');\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setIsModalVisible(true)} disabled={isMemberLoading}>\n        {isMemberLoading ? <Spin size=\"small\" /> : buttonLabel}\n      </Button>\n\n      {isModalVisible && (\n        <GroupModal\n          isModalVisible={isModalVisible}\n          setIsModalVisible={setIsModalVisible}\n          onBeforeLoad={onBeforeLoad}\n          setLoadedData={setLoadedData}\n          onAfterLoad={onAfterLoad}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction GroupModal({ isModalVisible, setIsModalVisible, onBeforeLoad, setLoadedData, onAfterLoad }) {\n  const [isGroupLoading] = useLoadingState('isGroupLoading');\n\n  const [data, setData] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  useEffect(() => {\n    async function loadGroups() {\n      setData(await store.getCollection('groups'));\n    }\n    loadGroups();\n  }, []);\n\n  const onCancelModal = () => {\n    setIsModalVisible(false);\n  };\n  const onLoadSong = useCallback(() => {\n    async function loadGroup() {\n      onBeforeLoad();\n\n      setLoadedData(await store.getRecord('group', selectedId));\n\n      setSelectedId(null);\n      onAfterLoad();\n      setIsModalVisible(false);\n    }\n    loadGroup();\n  }, [selectedId, setLoadedData, onBeforeLoad, onAfterLoad, setIsModalVisible]);\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n    },\n\n    {\n      title: 'Debut Year',\n      dataIndex: 'debutYear',\n    },\n    {\n      title: 'Group Size',\n      dataIndex: 'membersIds',\n      render: (list) => `${list.length}`,\n    },\n  ];\n\n  const rowSelection = {\n    onChange: (_, selectedRows) => {\n      setSelectedId(selectedRows[0].id);\n    },\n  };\n\n  return (\n    <Modal\n      title=\"Groups\"\n      visible={isModalVisible}\n      onOk={onLoadSong}\n      okText=\"Load Group\"\n      onCancel={onCancelModal}\n      okButtonProps={{ disabled: isGroupLoading || Boolean(!setSelectedId) }}\n    >\n      <LoadingContainer waitFor=\"group\">\n        <Table\n          rowSelection={{\n            type: 'radio',\n            ...rowSelection,\n          }}\n          columns={columns}\n          dataSource={data ?? []}\n        />\n      </LoadingContainer>\n    </Modal>\n  );\n}\n\nexport default LoadGroupModal;\n","import React, { useState, useEffect } from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Select, Divider } from 'antd';\n// API\nimport API from '../../api';\n// Utilities\nimport { bemClass } from '../../utils';\n// Components\nimport LoadGroupModal from '../modals/LoadGroupModal';\n// Store\nimport store from '../../services/store';\n\nfunction EditGroup() {\n  const [loadedData, setLoadedData] = useState(false);\n  const [membersOptions, setMembersOptions] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue(loadedData);\n  }, [form, loadedData]);\n\n  useEffect(() => {\n    async function loadMembers() {\n      setMembersOptions(await store.getCollection('members'));\n    }\n    loadMembers();\n  }, []);\n\n  const onFinish = async (values) => {\n    try {\n      await API.saveGroup(values);\n      form.resetFields();\n    } catch (_) {}\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const requiredRule = [{ required: true }];\n\n  return (\n    <section className=\"admin__form-container\">\n      <h3>Create/Edit Group</h3>\n      <div className={bemClass('admin-button-container', 'center')}>\n        <LoadGroupModal setLoadedData={setLoadedData} />\n      </div>\n\n      <Divider />\n\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"edit-group\"\n        onFinish={onFinish}\n        className=\"admin-form admin-edit-group-form\"\n        autoComplete=\"off\"\n        preserve={false}\n      >\n        <Form.Item label=\"ID\" name=\"id\" className=\"admin-form__item\">\n          <Input disabled />\n        </Form.Item>\n\n        <Form.Item label=\"Name\" name=\"name\" className=\"admin-form__item\" rules={requiredRule}>\n          <Input />\n        </Form.Item>\n\n        <div className={bemClass('admin-form__items', '2')}>\n          <Form.Item label=\"Debut Year\" name=\"debutYear\" className=\"admin-form__item\">\n            <InputNumber min={1950} />\n          </Form.Item>\n          <Form.Item label=\"Disbandment Year\" name=\"disbandmentYear\" className=\"admin-form__item\">\n            <InputNumber min={1950} />\n          </Form.Item>\n        </div>\n\n        <Form.Item label=\"Members\" name=\"membersIds\" className={bemClass('admin-form__item', 'double')}>\n          <Select\n            mode=\"multiple\"\n            allowClear\n            style={{ width: '100%' }}\n            placeholder=\"Please select the members\"\n          >\n            {membersOptions &&\n              membersOptions.map((member) => <Select.Option key={member.id}>{member.name}</Select.Option>)}\n          </Select>\n        </Form.Item>\n\n        <Form.Item className=\"admin-form__item\">\n          <div className={bemClass('admin-button-container', 'right')}>\n            <Button htmlType=\"button\" onClick={onReset}>\n              Reset\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Group\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </section>\n  );\n}\n\nexport default EditGroup;\n","import React, { useState } from 'react';\n\n// Design Resources\nimport { Layout, Tabs } from 'antd';\n\n// Components\nimport EditMember from './admin/EditMember';\nimport EditGroup from './admin/EditGroup';\n\n// Components\nconst { TabPane } = Tabs;\n\nfunction Admin() {\n  const [tab, setTab] = useState('1');\n\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main admin\">\n        <h1>Admin</h1>\n        <Tabs defaultActiveKey=\"1\" onChange={setTab}>\n          <TabPane tab=\"Albums\" key=\"1\">\n            TBD\n          </TabPane>\n          <TabPane tab=\"Groups\" key=\"2\">\n            <EditGroup />\n          </TabPane>\n          <TabPane tab=\"Members\" key=\"3\">\n            <EditMember />\n          </TabPane>\n        </Tabs>\n      </main>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import React from 'react';\n\nexport function Grid() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      overflow=\"visible\"\n      viewBox=\"0 0 1024 1024\"\n      className=\"svg-sprite\"\n    >\n      <g>\n        <g id=\"grid-base\">\n          <path\n            d=\"M3 3h1018v1018H3zM3 957.4h1018M3 893.8h1018M3 830.1h1018M3 766.5h1018M3 702.9h1018M3 639.3h1018M3 575.6h1018M3 512h1018M3 448.4h1018M3 384.7h1018M3 321.1h1018M3 257.5h1018M3 193.9h1018M3 130.2h1018M3 66.6h1018M957.4 3v1018M893.8 3v1018M830.1 3v1018M766.5 3v1018M702.9 3v1018M639.3 3v1018M575.6 3v1018M512 3v1018M448.4 3v1018M384.7 3v1018M321.1 3v1018M257.5 3v1018M193.9 3v1018M130.2 3v1018M66.6 3v1018\"\n            className=\"svg-grid__base\"\n          />\n        </g>\n        <g id=\"grid-safety\">\n          <path d=\"M130.2 3h763.5v1018H130.2z\" className=\"svg-grid__safety-lines\" />\n          <path\n            d=\"M130.2 3h763.5v1018H130.2z\"\n            className=\"svg-grid__safety-lines\"\n            transform=\"rotate(90 512 512)\"\n          />\n          <path\n            d=\"M66.6 66.6h890.8v890.8H66.6z\"\n            className=\"svg-grid__safety-lines\"\n            transform=\"rotate(90 512 512)\"\n          />\n        </g>\n        <g id=\"grid-star\">\n          <circle cx=\"512\" cy=\"512\" r=\"509\" className=\"svg-grid__star-lines\" />\n          <path\n            d=\"M512 0v1024M1024 512H0M4.5 4.5l1015 1015M1019.5 4.5l-1015 1015\"\n            className=\"svg-grid__star-lines\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Grid;\n","import { FUR } from './fur';\nimport { SNOUT } from './snout';\nimport { NOSE } from './nose';\nimport { EYES } from './eyes';\n\nconst PROPS = {\n  FUR,\n  HEAD: {\n    SNOUT,\n    NOSE,\n    EYES,\n  },\n};\n\nexport const schema = {\n  FUR: [16],\n  HEAD: {\n    'hair-style': [15],\n    'hair-bangs-style': [15],\n    'hair-color': [10],\n    'head-prop': ['none', 'beanie', 'cowboy-hat', 'headphones', 'hat', 'hat-backwards', 'color-lock'],\n\n    'eye-color': [10],\n    'eye-style': ['normal', 'angry', 'calm', 'suspicious', 'tired', 'high', 'not-impressed'],\n    'eye-prop': ['none', 'sunglasses-1', 'sunglasses-2', 'glasses', 'cool-glasses'],\n\n    'snout-color': [3],\n    nose: ['small', 'normal', 'large'],\n    'nose-color': [6],\n    tooth: ['large', 'normal', 'small', 'chipped', 'doubled', 'braces'],\n    'ear-prop': ['none', 'earring', 'piercing', 'cut', 'cross'],\n    'facial-hair': ['none', 'mustache', 'goatee', 'beard'],\n  },\n  body: {\n    hands: ['gloves', 'globes-white', 'nail-polish-color', 'mail-polish-black', 'bracelet-1', 'bracelet-2'],\n\n    necklace: ['none', 'army', 'hippie', 'simple'],\n\n    'under-shirt': [\n      'none',\n      'short-sleeve',\n      'short-sleeve-v',\n      'long-sleeve',\n      'long-sleeve-v',\n      'tank-top',\n      'tank-top-v',\n    ],\n    'under-shirt-color': [30],\n\n    shirt: ['none', 'closed', 'open', 'half-open', 'polo'],\n\n    jacket: ['none', 'vest', 'overcoat', 'life-vest'],\n\n    pants: ['normal', 'shorts', 'cargo'],\n    'pants-color': [15],\n\n    shoe: ['dress', 'sneakers', 'boots', 'flipflops'],\n    'shoe-color': [30],\n\n    tail: ['spiked', 'droopie', 'normal'],\n  },\n};\n\nexport default PROPS;\n","export const FUR = {\n  AA: {\n    id: '0',\n    name: 'neutral',\n    dna: 'AA',\n    hex: '#a3967a',\n    rate: 1,\n  },\n  AB: {\n    id: '1',\n    name: 'caramel',\n    dna: 'AB',\n    hex: '#a5711f',\n    rate: 18,\n  },\n  AC: {\n    id: '2',\n    name: 'caramel-medium',\n    dna: 'AC',\n    hex: '#c28b40',\n    rate: 13,\n  },\n  AD: {\n    id: '3',\n    name: 'caramel-light',\n    dna: 'AD',\n    hex: '#c49a48',\n    rate: 7,\n  },\n  BA: {\n    id: '4',\n    name: 'hazel',\n    dna: 'BA',\n    hex: '#977725',\n    rate: 13,\n  },\n  BB: {\n    id: '5',\n    name: 'hazel-medium',\n    dna: 'BB',\n    hex: '#a38731',\n    rate: 13,\n  },\n  BC: {\n    id: '6',\n    name: 'hazel-light',\n    dna: 'BC',\n    hex: '#b59a48',\n    rate: 10,\n  },\n  BD: {\n    id: '7',\n    name: 'blond',\n    dna: 'BD',\n    hex: '#ab8925',\n    rate: 8,\n  },\n  CA: {\n    id: '8',\n    name: 'blond-medium',\n    dna: 'CA',\n    hex: '#d3b437',\n    rate: 4,\n  },\n  CB: {\n    id: '9',\n    name: 'blond-light',\n    dna: 'CB',\n    hex: '#d9c350',\n    rate: 2,\n  },\n  CC: {\n    id: '10',\n    name: 'brown',\n    dna: 'CC',\n    hex: '#574639',\n    rate: 1,\n  },\n  CD: {\n    id: '11',\n    name: 'brown-medium',\n    dna: 'CD',\n    hex: '#7b623e',\n    rate: 3,\n  },\n  DA: {\n    id: '12',\n    name: 'brown-light',\n    dna: 'DA',\n    hex: '#8c754a',\n    rate: 1,\n  },\n  DB: {\n    id: '13',\n    name: 'red',\n    dna: 'DB',\n    hex: '#bf4c30',\n    rate: 1,\n  },\n  DC: {\n    id: '14',\n    name: 'red-medium',\n    dna: 'DC',\n    hex: '#bf6c30',\n    rate: 2,\n  },\n  DD: {\n    id: '15',\n    name: 'red-light',\n    dna: 'DD',\n    hex: '#c17b38',\n    rate: 3,\n  },\n};\n","export const SNOUT = {\n  AA: {\n    id: '0',\n    name: 'normal',\n    dna: 'AA',\n    hex: '#f2d4b1',\n    rate: 85,\n  },\n  BB: {\n    id: '1',\n    name: 'yellow',\n    dna: 'BB',\n    hex: '#f6ebb4',\n    rate: 9,\n  },\n  CC: {\n    id: '2',\n    name: 'brown',\n    dna: 'CC',\n    hex: '#dacdbd',\n    rate: 6,\n  },\n};\n","export const NOSE = {\n  AA: {\n    id: '0',\n    name: 'brown',\n    dna: 'AA',\n    hex: '#522906',\n    rate: 48,\n  },\n  AB: {\n    id: '1',\n    name: 'black',\n    dna: 'AB',\n    hex: '#2b230e',\n    rate: 6,\n  },\n  BA: {\n    id: '2',\n    name: 'hazel',\n    dna: 'BA',\n    hex: '#725f10',\n    rate: 11,\n  },\n  BB: {\n    id: '3',\n    name: 'caramel',\n    dna: 'BB',\n    hex: '#7a4f18',\n    rate: 16,\n  },\n  CA: {\n    id: '4',\n    name: 'brown-sugar',\n    dna: 'CA',\n    hex: '#b46838',\n    rate: 17,\n  },\n  CB: {\n    id: '5',\n    name: 'pink',\n    dna: 'CB',\n    hex: '#cc3f3f',\n    rate: 2,\n  },\n};\n","export const EYES = {\n  AA: {\n    id: '0',\n    name: 'grey',\n    dna: 'AA',\n    hex: '#626c7a',\n    rate: 2,\n  },\n  AB: {\n    id: '1',\n    name: 'light-blue',\n    dna: 'AB',\n    hex: '#6fcbd6',\n    rate: 9,\n  },\n  AC: {\n    id: '2',\n    name: 'blue',\n    dna: 'AC',\n    hex: '#3f76bb',\n    rate: 13,\n  },\n  BA: {\n    id: '3',\n    name: 'deep-blue',\n    dna: 'BA',\n    hex: '#016683',\n    rate: 6,\n  },\n  BB: {\n    id: '4',\n    name: 'light-green',\n    dna: 'BB',\n    hex: '#3ab44a',\n    rate: 5,\n  },\n  BC: {\n    id: '5',\n    name: 'green',\n    dna: 'BC',\n    hex: '#259361',\n    rate: 9,\n  },\n  CA: {\n    id: '6',\n    name: 'deep-green',\n    dna: 'CA',\n    hex: '#1b694a',\n    rate: 6,\n  },\n  CB: {\n    id: '7',\n    name: 'hazel',\n    dna: 'CB',\n    hex: '#5e3a21',\n    rate: 15,\n  },\n  CC: {\n    id: '8',\n    name: 'brown',\n    dna: 'CC',\n    hex: '#42210a',\n    rate: 18,\n  },\n  DA: {\n    id: '9',\n    name: 'black',\n    dna: 'DA',\n    hex: '#261e03',\n    rate: 17,\n  },\n};\n","const DEFAULTS = {\n  FUR: 'AA',\n  HEAD: {\n    SNOUT: 'AA',\n    NOSE: 'AA',\n    EYES: 'AA',\n  },\n};\n\nexport default DEFAULTS;\n","import React from 'react';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\n\nfunction BaseBody({ furColor = DEFAULTS.FUR }) {\n  const furClass = `fur-color-fill-${PROPS.FUR[furColor].id}`;\n  const st1FurClass = `svg-base-body__st1 ${furClass}`;\n  const st2FurClass = `svg-base-body__st2 ${furClass}`;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      overflow=\"visible\"\n      viewBox=\"0 0 1024 1024\"\n      className=\"svg-sprite\"\n    >\n      <g id=\"_x2B_Body_copy\">\n        <g id=\"_x2B_Base_copy\">\n          <path\n            d=\"M722.3 602.9s-23.4 3.5-42.9 10.5c0 0-23.5-77.8-38.2-93-14.8-15.2-48.2-11.3-48.2 6.1s18.2 140.7 48.2 153.3c30 12.6 103.2-19.4 107-32.5 3.8-13 14-49.2-25.9-44.4z\"\n            className={st1FurClass}\n          />\n          <path\n            d=\"M458.3 570.8c2 23 8.5 48.4 11.9 71.3 1.3 8.9 4.3 18 3.4 27.1-.8 8.7-3.9 17.5-5.8 26-6.4 28.6-10.8 57.7-14.1 86.8-3.8 33.8-5.2 68.8-10.8 102l-1.9 2.7-14.9 18.8c-11.5 19-15 40.7 15.6 48.9s36.9-11.5 51.1-31.4c14.2-20 2.9-31.8 2.9-31.8-1.6-2.8-1.5-6.2-1.2-9.4 2.1-23.9 12.4-41.8 15.2-65.6.4-3.4.7-6.8 1.8-10 1.3-3.5 3.5-6.5 5.7-9.6 17.9-25.2 34.8-45.8 47.9-73.9 13.1 17.6 16.5 29.4 36.5 53.4 9.3 11.1 9.3 24.9 12.3 37.4 6.4 26.2 10.3 45.2 7.2 71.4-.9 7.6.7 15.5 4.1 22.4 7.1 14.4 26.5 16.4 40.5 19 10.8 1.9 21.6 8.2 32.1 11.6 2.7.9 5.5 1.7 8.3 1.4 2.8-.3 5.7-1.9 6.5-4.6.4-1.2.4-2.7 1.2-3.7.9-1.1 2.5-1.3 3.9-1.7 8.1-2.3 8.7-14.9 9.2-21.8.7-10.3-11.4-16.5-18.4-21.9-5.1-3.9-10.9-6.7-17-8.4l-15.1-7c-.1-29.2-.3-58.6-4.1-87.6-1.9-14.8-4.7-29.5-8.8-43.8-3.9-13.5-4.8-27.9-7.2-41.8-2.2-12.4-5-19.3-3.5-31.1 3.7-29.1 1-68.2-5.9-97.8 0 0-8.8-48.3-45.3-59.8s-92.1-8.9-100-6.8c-31.2 8.4-48.8 5.5-43.3 69.3z\"\n            className={st2FurClass}\n          />\n          <path d=\"M600.7 511.5c-10-3.1-20.4-4.9-30.9-6.2-10.5-1.3-21.1-1.9-31.7-2.1-2.7-.1-5.3-.1-8-.1s-5.3.1-7.9.1c-5.3.2-10.6.4-15.7 1l-1.9.2-.5.1-.4.1-.8.2-.4.1-.5.1-1 .3-2 .5-7.8 1.9c-5.1 1.3-10.3 2.5-14.7 4.5-2.2 1-4.3 2.2-6.1 3.7-1.8 1.5-3.3 3.3-4.5 5.3l-.9 1.5-.8 1.6c-.4 1.1-.9 2.3-1.2 3.5-.7 2.4-1.2 4.8-1.6 7.4-1.4 10.2-1.1 20.8-.3 31.3 1.4 21.1 6.4 41.9 10.2 63 .5 2.6.9 5.3 1.4 8l.6 4c.2 1.3.4 2.5.6 3.8 1 5.1 2.2 10.5 2.8 16.1.3 2.8.3 5.7 0 8.6-.3 2.8-.8 5.6-1.4 8.3-1.2 5.4-2.8 10.5-4 15.6-4.7 20.7-8.4 41.8-11.3 62.9-1.5 10.6-2.8 21.2-3.9 31.8-1.1 10.6-2 21.3-2.9 31.9-1.8 21.3-3.6 42.8-7.2 64.1-.1.5-.3 1-.6 1.3l-2 2.8-2.1 2.7-4.2 5.4-8.5 10.8.2-.3c-3.4 5.6-6.2 11.6-7.4 17.8-.6 3.1-.7 6.1-.1 9 .6 2.9 1.8 5.5 3.7 7.7.9 1.1 2 2.1 3.2 3.1 1.2.9 2.5 1.8 3.9 2.5 2.7 1.5 5.7 2.7 8.8 3.6 6.2 1.8 12.8 2.9 18.7 1.8 1.5-.3 2.9-.7 4.3-1.2.7-.2 1.4-.6 2-.9.6-.4 1.3-.7 1.9-1.1 2.5-1.6 4.8-3.8 6.9-6.2 4.2-4.9 7.7-10.7 11.5-16.5 1.9-2.9 4-5.8 5.6-8.4.5-.7.8-1.4 1.2-2.1.3-.7.8-1.4 1.1-2.1l.9-2.2c.3-.7.5-1.5.7-2.2.8-2.9 1.1-5.9.7-8.8-.2-1.4-.6-2.8-1.1-4.1-.3-.7-.6-1.3-.9-1.9l-.6-.9c-.2-.2-.4-.6-.5-.6l-.1-.2c-.1-.1-.2-.3-.3-.5-1.3-2.4-1.7-4.9-1.8-7.1 0-2.3.2-4.3.4-6.2.4-4 1.1-7.9 1.9-11.8 1.7-7.8 4-15.3 6.3-22.7 2.2-7.4 4.4-14.8 5.7-22.2.2-.9.3-1.9.5-2.8l.4-2.8c.3-1.8.4-3.8.7-5.8.3-2 .7-4.2 1.5-6.3.8-2.1 1.9-4 3-5.8 1.1-1.7 2.3-3.3 3.4-4.9l3.4-4.8 6.9-9.5c4.6-6.3 9.1-12.5 13.5-18.9 8.8-12.7 16.9-25.8 23.4-39.7.8-1.6 2.7-2.3 4.3-1.6.5.2.9.6 1.2 1 2.4 3.2 4.7 6.6 6.9 9.9 2.2 3.4 4.2 6.8 6.3 10.2 4.1 6.8 8.2 13.4 12.8 19.7 2.3 3.2 4.7 6.3 7.1 9.3l3.7 4.6c1.3 1.7 2.6 3.5 3.6 5.3 2.1 3.7 3.6 7.8 4.7 11.8 1.1 4 1.8 8 2.5 11.9.3 1.9.7 3.9 1.1 5.7.4 1.9.8 3.7 1.3 5.7.9 3.9 1.8 7.7 2.7 11.6 1.7 7.8 3.2 15.7 4.1 23.7.5 4 .7 8 .9 12.1.1 4 .1 8.1-.1 12.1-.1 2-.3 4-.4 6l-.6 5.9c-.3 3.6 0 7.2.8 10.8.4 1.8.9 3.5 1.6 5.2.6 1.7 1.4 3.4 2.3 4.8 1.7 2.9 4.2 5.4 7.2 7.3 3 1.9 6.4 3.3 10 4.4 3.6 1.1 7.4 1.9 11.2 2.6l5.8 1 2.9.5c1 .2 2.1.4 3.1.7 4.1 1 7.9 2.4 11.7 3.9l11 4.6c1.8.7 3.6 1.4 5.4 2 1.8.6 3.7 1.2 5.3 1.5 1.6.3 3.2.4 4.3 0 1.2-.4 2.2-1.1 2.6-1.9.1-.2.1-.3.2-.7.1-.4.2-.9.3-1.5.2-.7.5-1.5 1.1-2.4.6-.9 1.5-1.6 2.3-2 1.6-.8 2.7-.9 3.5-1.1l.9-.3c.3-.1.5-.3.8-.5 1-.7 1.9-1.9 2.6-3.4.7-1.5 1.2-3.2 1.5-4.9.4-1.8.6-3.6.8-5.5.1-.9.2-1.9.2-2.9l.1-1.5v-1.1c-.1-1.5-.5-2.9-1.3-4.2-.8-1.4-1.9-2.7-3.1-3.9-2.5-2.5-5.6-4.7-8.9-7l-2.5-1.7-2.4-1.8c-1.5-1.1-3.1-2.1-4.7-3-3.2-1.8-6.7-3.2-10.2-4.1-.2 0-.4-.1-.5-.2l-15.1-7c-1.2-.5-1.8-1.7-1.9-2.9v-.1c-.2-12.7-.4-25.4-.9-38-.5-12.6-1.3-25.2-2.5-37.7-1.3-12.5-3.1-24.9-5.8-37.2-1.3-6.1-2.8-12.1-4.6-18.2-1.8-6.4-2.9-12.8-3.8-19.2-.9-6.4-1.7-12.6-2.7-18.8-.5-3.1-1-6.1-1.7-9.2-.6-3.1-1.3-6.2-1.9-9.5-.6-3.3-.9-6.7-.9-10.2 0-3.4.5-6.9.8-9.9.7-6.2 1.1-12.4 1.3-18.7.2-6.3.2-12.5-.1-18.8-.3-6.3-.6-12.5-1.1-18.8-.1-1.6-.3-3.1-.4-4.7-.1-1.6-.2-3.1-.4-4.7l-.4-4.7c-.2-1.6-.3-3.1-.5-4.7-.6-6.3-1.4-12.5-2.1-18.8-.1-.8.5-1.5 1.2-1.6.7-.1 1.3.3 1.5.9 4.1 12.2 6.6 24.8 8.1 37.6s2 25.6 1.8 38.5c-.1 6.4-.5 12.9-1.1 19.3-.3 3.4-.7 6.1-.7 9.1 0 2.9.3 5.8.8 8.8.5 3 1.2 6 1.9 9.2.7 3.1 1.3 6.4 1.8 9.5 1 6.4 1.8 12.7 2.7 18.9.9 6.2 2 12.3 3.6 18.2 1.7 6.1 3.3 12.4 4.6 18.7 2.7 12.6 4.4 25.3 5.7 38.1 1.2 12.8 1.7 25.5 2 38.3.3 12.8.2 25.5.1 38.2l-1.9-2.9 15.1 7-.5-.2c4.1 1.1 8 2.7 11.7 4.7 1.8 1 3.6 2.2 5.3 3.4l2.4 1.8 2.4 1.7c3.2 2.3 6.6 4.6 9.7 7.7 1.5 1.6 3 3.3 4.2 5.4 1.1 2.1 1.9 4.5 2.1 7v1.9l-.1 1.5c-.1 1-.1 2-.2 3-.2 2-.5 4.1-.9 6.2-.4 2.1-1 4.2-2 6.4-1 2.1-2.4 4.3-4.7 5.9-.6.4-1.2.7-1.8 1-.6.3-1.3.5-1.9.7-1.2.3-2 .5-2.2.6-.1.1 0 0 0-.1s0 0-.1.3-.2.8-.3 1.4c-.1.6-.4 1.4-.7 2.1-.7 1.4-1.7 2.5-2.9 3.4-1.1.8-2.4 1.4-3.7 1.8-2.7.8-5.2.6-7.4.1-1.1-.2-2.2-.5-3.2-.8-1-.3-1.9-.6-2.9-.9-1.9-.7-3.9-1.4-5.7-2.1l-11-4.6c-3.6-1.4-7.2-2.8-10.8-3.6l-2.7-.6-2.9-.5-5.9-1c-3.9-.7-7.9-1.6-11.9-2.8-4-1.2-7.9-2.8-11.6-5.1-3.7-2.3-7-5.5-9.3-9.4-1.2-2-2-3.9-2.8-5.9-.8-2-1.4-4-1.9-6.1-1-4.2-1.3-8.5-1-12.8l.6-5.9c.1-1.9.3-3.9.4-5.8.2-3.9.2-7.7.1-11.6-.2-3.9-.4-7.7-.9-11.6-.9-7.7-2.3-15.4-4-23-.9-3.8-1.8-7.7-2.7-11.5-.5-1.9-1-3.9-1.4-5.9-.4-2-.8-4-1.1-5.9-1.4-7.8-2.8-15.3-6.4-21.6-.9-1.6-1.9-3.1-3-4.5l-3.8-4.6c-2.5-3.1-4.9-6.3-7.3-9.6-4.7-6.5-9-13.3-13.1-20.1-2-3.4-4.1-6.8-6.2-10-2.1-3.3-4.3-6.5-6.6-9.6l5.5-.6c-6.7 14.3-15 27.8-23.9 40.6-4.5 6.4-9.1 12.7-13.6 19l-6.8 9.4-3.4 4.7c-1.1 1.6-2.3 3.2-3.3 4.7s-1.8 3-2.4 4.5c-.6 1.5-.9 3.2-1.2 5-.3 1.8-.4 3.7-.7 5.7l-.4 3c-.2 1-.3 2-.5 3-1.4 7.9-3.6 15.5-5.9 22.9-2.3 7.5-4.6 14.8-6.1 22.2-.8 3.7-1.4 7.4-1.8 11.2-.5 3.8-.7 7.4.6 9.5l-.1-.3c.5.6.8.9 1.1 1.4.3.4.6.9.8 1.3.5.9 1 1.8 1.3 2.7.8 1.8 1.3 3.8 1.6 5.7.6 3.9.2 7.8-.8 11.5-.3.9-.5 1.8-.9 2.7l-1.1 2.6c-.3.9-.8 1.6-1.2 2.5-.4.8-.8 1.7-1.3 2.4-2 3.2-3.9 5.8-5.8 8.6-3.8 5.6-7.3 11.6-12 17.1-2.4 2.7-5.1 5.4-8.3 7.4-3.2 2.1-6.9 3.5-10.6 4.2-3.8.7-7.5.7-11.2.3-3.6-.4-7.1-1.2-10.6-2.2-3.4-1-6.9-2.3-10.1-4.1-1.6-.9-3.2-1.9-4.7-3.1-1.5-1.2-2.9-2.5-4.2-4-2.5-3-4.3-6.7-5.1-10.6-.8-3.9-.6-7.8.1-11.4 1.4-7.3 4.6-13.9 8.2-19.9.1-.1.1-.2.2-.3l8.4-10.7 4.2-5.3 2.1-2.7 1.9-2.7-.6 1.3c3.5-20.9 5.3-42.2 7.1-63.5.9-10.7 1.8-21.4 2.9-32 1.1-10.7 2.4-21.3 3.9-32 3-21.3 6.6-42.4 11.4-63.5 1.3-5.3 2.8-10.4 4-15.5.6-2.5 1-5 1.3-7.5.3-2.4.2-4.9 0-7.4-.5-5-1.7-10.2-2.7-15.5-.3-1.3-.5-2.7-.7-4.1l-.6-3.9c-.4-2.6-.9-5.2-1.3-7.9-1.9-10.5-4.1-21-6-31.5-1.9-10.6-3.6-21.3-4.3-32.2-.4-5.4-.7-10.8-.7-16.3s.2-11 1-16.5c.4-2.8 1-5.5 1.8-8.3.4-1.4.9-2.7 1.5-4.1l.9-2c.3-.7.7-1.3 1.1-2 1.5-2.6 3.5-5 5.8-6.9 2.3-2 4.9-3.5 7.6-4.7 5.3-2.4 10.7-3.6 15.9-4.9l7.8-1.9 1.9-.5 1-.2.5-.1.6-.1 1.1-.2.6-.1.5-.1 2.1-.3c5.5-.6 10.9-.8 16.3-1 2.7-.1 5.4-.1 8.1-.1 2.7 0 5.4 0 8.1.1 10.8.2 21.6.9 32.4 2.2 10.8 1.3 21.5 3.2 32 6.5 1.7.5 2.7 2.3 2.1 4.1-.1 1.3-2 2.2-3.7 1.7z\" />\n          <path\n            d=\"M577.7 696.4c6.4 10.1 8.5 25 2.1 35.5-5.3 8.8-13.6 6-16-3-.7-2.8-1.2-5.6-1.5-8.5-.1 2.3-1.5 4.4-3.5 5.5-2 1-4.6.8-6.5-.5-2.5 1.7-6.3-.5-7.2-3.4-1-3.1-.2-9.6 2.7-11.6\"\n            className={st2FurClass}\n          />\n          <path d=\"M578.8 695.6c3.3 4.9 5.4 10.6 6.3 16.5.9 5.9.5 12.2-1.9 17.9-.3.7-.6 1.4-1 2.1-.2.3-.3.7-.5 1l-.7 1c-.4.7-1 1.3-1.5 2l-.9.9c-.3.3-.6.6-1 .8-1.4 1.1-3.4 1.9-5.4 1.9-2 0-4-.7-5.6-1.7-1.6-1.1-2.8-2.5-3.7-3.9-1-1.5-1.6-3.1-2.1-4.6-.9-2.9-1.5-5.9-1.8-8.9l6.5-.2c-.1 1.8-.6 3.4-1.5 4.8s-2.2 2.6-3.8 3.4c-1.6.8-3.3 1.1-5 1-1.7-.1-3.3-.7-4.8-1.7h3.7c-1.5.9-3.3 1.2-4.8.9-1.5-.3-2.7-1-3.8-1.8-1-.8-1.8-1.9-2.4-3.1-.3-.6-.5-1.3-.6-1.9-.1-.6-.2-1.2-.2-1.7-.1-2.2.2-4.2.8-6.1.3-1 .7-2 1.3-2.9.6-.9 1.3-1.9 2.4-2.6.8-.5 1.8-.2 2.3.6.4.7.3 1.6-.3 2.1l-.1.1c-.8.7-1.3 2.2-1.6 3.7-.2 1.5-.2 3.2 0 4.6.1.4.2.7.3 1 .1.3.2.4.3.6.3.4.7.8 1.1 1 .4.2.9.4 1.2.3.3 0 .3-.2.3-.2.4-.9 1.4-1.2 2.3-.8l.1.1 1.3.7c.4.3 1 .5 1.6.5.6 0 1.2-.1 1.6-.3.4-.2.9-.6 1.2-1.1.3-.5.5-1.1.5-1.6l.1-.5c.3-1.7 2-2.9 3.7-2.6 1.5.3 2.6 1.5 2.7 3 .1 2.7.5 5.3 1.1 7.9.3 1.1.6 2.3 1.2 3.2.5 1 1.2 1.8 2 2.4 1.5 1.1 3.2 1.3 4.9.2 1.8-1.1 3.2-3.3 4.4-5.6 2.3-4.7 3-10.2 2.4-15.6-.5-5.4-2.2-10.8-5-15.5-.4-.6-.2-1.5.5-1.9.7-.2 1.5 0 1.9.6z\" />\n          <g>\n            <path\n              d=\"M741.2 658s46 12 56.2-35.9-21.6-63.4-21.6-63.4-15.8-5.4-18.9-6.5c-3.1-1.1-19.2-3.2-29.3 15.5-10.1 18.7-26.4 31.1-3.6 53 .2-.1-1.1 25.4 17.2 37.3z\"\n              className={st1FurClass}\n            />\n            <path\n              d=\"M739.8 536.9c-4.8 1.5-9.5 2.9-10.4 3.1s-5.6 1.7-10.4 3.1l-1.3.4c-4.8 1.5-7.3 6.5-5.5 11.2l36.1 92.5c1.8 4.7 5.6 7.9 8.3 7.1 2.7-.8 5.7-1.7 6.6-2s3.9-1.2 6.6-2c2.7-.8 4.1-5.5 3-10.5l-20.9-97.1c-1.1-4.9-5.9-7.8-10.7-6.3l-1.4.5z\"\n              className=\"svg-base-body__st3\"\n            />\n            <ellipse\n              cx=\"726.6\"\n              cy=\"533.4\"\n              className=\"svg-base-body__st3\"\n              rx=\"33.5\"\n              ry=\"27.8\"\n              transform=\"rotate(-16.732 726.65 533.445)\"\n            />\n            <path\n              d=\"M781.9 640.3s-4.9-1.4-7.5 1.1-14.4 8.2-20.3-1.5 1.5-16.7 1.5-16.7-12.9-2.1-10.1-18.8c0 0-18.9 1-7.5-29.6 0 0-12-4.5-6.7-12.6s7.3-17 30.1-8.5\"\n              className={st1FurClass}\n            />\n            <path d=\"M745.6 604.3s4.2-12.7 27.6-13.3\" className={st2FurClass} />\n            <path d=\"M742.5 603.3c.1-.4.2-.5.3-.8l.3-.6c.2-.4.4-.7.7-1.1.5-.7.9-1.3 1.5-1.9 1-1.2 2.2-2.2 3.4-3.2 2.4-1.9 5.1-3.2 7.8-4.2s5.5-1.6 8.3-2c1.4-.1 2.8-.3 4.2-.4l4.2-.1c1 0 1.9.8 1.9 1.8s-.7 1.8-1.7 1.9h-.1l-3.9.4c-1.3.2-2.5.4-3.8.7-2.5.6-4.9 1.3-7.2 2.4-2.2 1-4.3 2.3-6 3.9-.8.8-1.6 1.6-2.3 2.5-.3.4-.6.9-.9 1.4-.1.2-.3.5-.3.7 0 .1-.1.2-.1.3 0 .1-.1.2-.1.2-.6 1.7-2.4 2.6-4.1 2.1-1.8-.5-2.7-2.3-2.1-4z\" />\n            <path d=\"M755.6 623.1s12.4-12.4 24.1-9.3\" className={st2FurClass} />\n            <path d=\"M753.3 620.8c1-.9 1.9-1.6 2.9-2.3 1-.7 2-1.4 3-2 2-1.2 4.2-2.4 6.4-3.2 2.3-.9 4.6-1.5 7.1-1.8 2.5-.2 5 0 7.4.7.9.3 1.4 1.2 1.1 2.1-.2.8-1.1 1.3-1.9 1.2h-.1c-2-.3-4-.3-5.9.1-2 .5-3.9 1.2-5.7 2.2-1.8 1-3.6 2.2-5.2 3.4-.8.6-1.6 1.3-2.4 2-.8.7-1.6 1.5-2.1 2.1-1.2 1.3-3.2 1.5-4.6.3-1.3-1.2-1.5-3.2-.3-4.6.1 0 .2-.1.3-.2z\" />\n            <g>\n              <path d=\"M739 575.2s6.6-7.4 27.1-3\" className={st2FurClass} />\n              <path d=\"M736.5 573c.5-.5.7-.7 1.1-.9.3-.2.6-.4 1-.6.6-.4 1.3-.7 1.9-1 1.3-.6 2.6-1 3.8-1.3 2.6-.6 5.1-.9 7.6-.8 1.3 0 2.5.1 3.7.1 1.2.1 2.4.3 3.7.4 1.2.2 2.4.4 3.6.7l3.5.8c1 .2 1.6 1.2 1.3 2.2-.2.9-1.1 1.5-2 1.4h-.1l-3.4-.5c-1.1-.1-2.3-.2-3.4-.3-1.1 0-2.3-.1-3.4 0s-2.2.1-3.3.2c-2.2.2-4.3.6-6.2 1.3-1 .3-1.9.8-2.7 1.2-.4.2-.8.5-1.2.8-.2.1-.3.3-.5.4l-.2.2c-1.2 1.3-3.2 1.5-4.6.3-1.2-1.2-1.4-3.3-.2-4.6z\" />\n            </g>\n            <ellipse\n              cx=\"722.3\"\n              cy=\"581.1\"\n              className={st1FurClass}\n              rx=\"18\"\n              ry=\"19.3\"\n              transform=\"rotate(-22.626 722.349 581.097)\"\n            />\n          </g>\n          <g>\n            <path\n              d=\"M428.6 720s22.3-80.4 23-85.6 41.3-37.1 43.8-65.8c2.5-28.7-3.6-54.6-29.6-50.8-25.9 3.9-57.1 59.9-68.2 92.5-11.1 32.6-19 41.3-29.1 82.6 0 0-7.5 13.2 17.9 24.9 25.3 11.7 40.2 9.2 42.2 2.2z\"\n              className={st2FurClass}\n            />\n            <path d=\"M466.1 520.3c-.4.4-.8.7-1.3.9-.4.2-.9.4-1.3.6-.4.2-.9.3-1.3.4-.4.1-.9.4-1.3.6-.4.2-.9.4-1.3.6l-1.3.7c-.9.4-1.7 1-2.5 1.5-3.3 2.2-6.4 4.9-9.4 7.8-5.9 5.8-11.1 12.5-15.8 19.4-9.5 13.9-17.5 29-24.3 44.6-1.7 3.9-3.2 7.8-4.7 11.8l-2.1 6.1c-.7 2-1.5 4.1-2.2 6.1-3 8.1-6.4 16.1-9.7 24-3.3 7.9-6.4 15.7-9 23.8-2.6 8.1-4.9 16.3-7 24.5l-.3.8v.1c0 .1-.1.2-.1.3-.1.2-.1.4-.2.6-.1.2-.1.4-.1.7 0 .2-.1.5-.1.7v.7c0 .2 0 .5.1.7 0 .5.2.9.2 1.4.5 1.9 1.6 3.7 3 5.4 2.9 3.4 7 6.1 11.4 8.2 2.2 1.1 4.5 2.1 6.8 3.1 2.3.9 4.7 1.8 7 2.6 4.7 1.5 9.6 2.7 14.3 3.1 2.3.2 4.7.1 6.8-.3 1-.2 2-.5 2.8-.9.8-.4 1.3-.9 1.7-1.3.1-.2.3-.4.3-.6 0 0 .1-.2.1-.4l.1-.5.3-.9 1-3.7 2.1-7.5 8.2-30c2.8-10 5.5-20 8.2-30l2-7.5.5-1.8c.1-.6.3-1.3.4-1.8l.2-.8.1-.6c.1-.4.2-.9.4-1.2l.4-.7c.1-.2.3-.5.4-.6.2-.3.5-.7.7-1 1.8-2.3 3.6-4.2 5.4-6.1l5.4-5.6c7.1-7.5 14-15 20-23.1 3-4.1 5.8-8.3 8.1-12.7 2.4-4.4 4.2-9.1 5.1-14 .1-.6.7-1.1 1.4-.9.6.1 1 .6 1 1.2-.1 5.4-1.4 10.7-3.4 15.7s-4.6 9.7-7.5 14.1c-2.9 4.4-6.1 8.7-9.5 12.7-3.3 4.1-6.9 7.9-10.4 11.8l-5.3 5.7c-1.7 1.9-3.5 3.8-4.9 5.6l-.4.6c-.1.1-.1.2-.1.2 0 .1-.1.1-.1.2 0 0 .1-.2.1-.3v-.1.1l-.1.3-.2 1.1c-.1.8-.3 1.3-.5 2l-.5 1.9-1.9 7.6c-2.6 10.1-5.3 20.1-8 30.1s-5.4 20-8.2 30l-2.1 7.5-1 3.7-.3.9-.1.5c0 .2-.1.3-.2.6-.3 1-.8 2-1.4 2.8-1.2 1.7-2.8 2.8-4.4 3.5-1.6.8-3.1 1.2-4.6 1.5-3 .6-5.9.6-8.7.4-5.6-.5-10.9-1.8-16-3.5-2.5-.9-5-1.8-7.5-2.9-2.5-1-4.9-2.1-7.3-3.4-4.8-2.5-9.6-5.6-13.4-10.2-3.7-4.5-6.4-11.4-3.1-18.2l-.3.8c2-8.4 4.3-16.8 6.9-25.1 2.6-8.3 5.7-16.4 9-24.4s6.6-15.8 9.6-23.8c.7-2 1.5-4 2.2-6l2.1-6.1c1.5-4.1 3.1-8.2 4.8-12.2 3.4-8 7.2-15.8 11.4-23.4 4.2-7.6 8.7-15.1 13.7-22.3 5-7.2 10.4-14.1 16.7-20.4 3.2-3.1 6.6-6.1 10.4-8.6 1-.6 1.9-1.3 3-1.8l1.5-.8c.5-.3 1.1-.5 1.6-.7 2.1-.9 4.5-1.9 7.1-1.2 1.4.4 2.3 1.8 1.9 3.3-.1.5-.4.9-.7 1.2l-.5.5z\" />\n          </g>\n          <g>\n            <path\n              d=\"M431.6 733.3c-.1-.1-.1-.3-.2-.4-1-3.3-1-7-2-10.4-4.1-13.4-14-25.2-26.4-31.8-10.4-5.5-22.1-3.6-32.6.9-5.4 2.3-8.9 5.9-12.4 10.5-2.5 3.3-4.9 6.8-7 10.3-4.3 7.2-7.7 15-9.8 23.2-2.2 8.8-2.8 18.6 1.7 26.9 0 0 1.4 9.9 13.4 6.7 0 0 4.2 10.2 13.4 9.9 0 0 5.8 9.2 14.9 6 0 0 14.7 10.6 19.3-6.3 4.6-16.9.8-26.8 3-27.1 2.2-.4 8.2 11.6 7.3 22.2-.9 10.1 10.3 13 17.1 2.5 4-6.3 4.9-14.7 4.9-22 0-4-.3-8.1-1.2-12-.4-1.8-.8-3.5-1.4-5.2-.6-1.5-1.5-2.7-2-3.9z\"\n              className={st2FurClass}\n            />\n            <path d=\"M353 769.7c-.3-2.9-.4-5.6-.4-8.4 0-2.8.1-5.5.4-8.3.3-2.8.8-5.6 1.6-8.3.9-2.7 2.1-5.5 4.3-7.9.7-.8 2-.8 2.7-.1.7.7.8 1.8.2 2.6v.1c-1.4 1.7-2.2 4-2.8 6.4-.5 2.4-.8 5-.8 7.5-.1 2.6 0 5.2.2 7.7.2 2.6.5 5.2 1 7.7v.1c.3 1.8-.9 3.5-2.6 3.8s-3.5-.9-3.8-2.6c.1-.2 0-.3 0-.3zM367.8 781.6c-.7-3.4-1.1-6.7-1.5-10-.3-3.3-.5-6.7-.4-10.1.1-3.4.4-6.8 1.2-10.2.8-3.3 2.2-6.8 4.7-9.5.6-.7 1.7-.7 2.4-.1.6.6.7 1.6.2 2.3-1.8 2.2-2.7 5.1-3.2 8.1s-.5 6.1-.3 9.3c.2 3.1.6 6.3 1.1 9.4.5 3.1 1.2 6.3 2.1 9.2v.1c.5 1.7-.5 3.5-2.2 4-1.7.5-3.5-.5-4-2.2 0-.2-.1-.3-.1-.3zM381.3 785.5c-.4-3.3-.6-6.4-.7-9.7-.1-3.2-.1-6.4 0-9.7.2-3.2.5-6.5 1.2-9.8.7-3.3 1.6-6.7 4-9.8.8-1.1 2.4-1.3 3.5-.4 1.1.8 1.3 2.4.5 3.4l-.1.1c-1.4 1.9-2.2 4.8-2.7 7.7-.5 2.9-.7 5.9-.7 9 0 3 .1 6.1.3 9.2.2 3.1.6 6.2 1 9.1v.1c.3 1.8-.9 3.4-2.7 3.7s-3.4-.9-3.7-2.7c.1-.1.1-.2.1-.2z\" />\n            <path d=\"M373.8 692.3c-.6.9-1.2 1.5-1.9 2s-1.3 1-1.9 1.3c-1.3.8-2.6 1.6-3.7 2.6-2.3 2-4.3 4.6-6.4 7.4-4 5.5-7.5 11.4-10.3 17.6-1.4 3.1-2.6 6.2-3.6 9.4s-1.9 6.5-2.3 9.7c-.5 3.2-.7 6.5-.4 9.6.3 3.1 1.1 6.2 2.5 9l.4 1.1v.2c0 .1.1.2.1.3.1.2.2.5.3.7.2.4.4.9.7 1.2.5.7 1.2 1.2 2 1.6.8.3 1.8.5 2.8.5.5 0 1.1-.1 1.7-.1l1.8-.4h.1c1.6-.3 3.1.5 3.7 1.9.1.1.2.5.4.7.1.3.3.5.5.8.3.5.7 1.1 1 1.6.7 1 1.6 1.9 2.5 2.6.9.7 1.9 1.3 2.8 1.6 1 .4 2 .5 3.1.5h.2c1.1 0 2.1.6 2.7 1.5.1.1.3.4.4.6.2.2.4.5.6.7.4.4.8.9 1.3 1.2.9.8 1.8 1.4 2.8 1.9 1 .5 2 .7 3 .7 1 .1 2-.2 3-.5h.2c1-.2 2 0 2.8.5.2.1.6.4.9.5.3.2.7.4 1 .5.7.3 1.4.6 2.1.8 1.4.5 2.8.7 3.9.6 1.2-.1 2.1-.5 3-1.2.8-.7 1.6-1.8 2.2-3.1.6-1.3 1-2.7 1.4-4.4.4-1.6.7-3.3 1-5 .5-3.3.8-6.7.8-10.1 0-1.7 0-3.4-.1-5.2 0-.9-.1-1.8 0-3 0-.3 0-.7.1-1.1 0-.2.1-.5.2-.8 0-.1.1-.3.2-.5s.2-.3.3-.6c.2-.2.3-.5.6-.7.2-.2.5-.5.9-.7.6-.4 1.4-.6 2.1-.6.3 0 .7 0 1 .1.2.1.5.1.7.2.3.1.4.2.5.2.2.1.3.2.5.3 1 .6 1.4 1.1 1.8 1.7.4.5.7 1 1 1.4.6.9 1.1 1.8 1.5 2.7.9 1.8 1.6 3.6 2.2 5.5 1.1 3.7 1.8 7.6 1.9 11.6v3.7c.1.3.1.6.1.8.2 1.1.7 1.9 1.3 2.3.6.5 1.4.7 2.4.6 1-.1 2.1-.5 3.1-1.2 1-.8 2.1-1.7 2.9-2.9.9-1.1 1.6-2.5 2.2-3.9 2.4-5.7 2.8-12.7 2.7-19.5-.1-3.4-.5-6.7-1.2-9.9-.2-.8-.4-1.6-.6-2.3-.1-.4-.2-.8-.4-1.1-.1-.2-.2-.5-.4-.8-.3-.7-.8-1.5-1.3-2.6l-.3-.9-.2-.8c-.1-.5-.3-1-.4-1.5-.4-2-.6-3.8-.8-5.4-.1-.8-.3-1.6-.5-2.3l-.3-1.1-.4-1.2c-1-3.2-2.1-6.3-3.1-9.8-.3-1 .3-2 1.3-2.3.7-.2 1.3 0 1.8.5 2.7 2.7 4.7 6 6.1 9.5.2.4.3.9.5 1.3s.3.9.5 1.4c.3 1 .5 2 .6 2.9.3 1.9.5 3.6.8 5.1.1.4.2.7.3 1.1l.2.5c0 .1.1.2.1.3.2.5.7 1.2 1.1 2.2.2.5.5 1 .7 1.6.2.5.3.9.5 1.4.3.9.6 1.9.8 2.8.9 3.7 1.4 7.5 1.6 11.2.2 3.8.1 7.4-.3 11.2-.4 3.8-1.2 7.6-2.7 11.3-.8 1.9-1.7 3.7-3 5.4-1.2 1.7-2.7 3.3-4.6 4.7a14.3 14.3 0 01-6.7 2.6c-2.5.3-5.4-.4-7.6-2.2-2.2-1.7-3.5-4.3-3.9-6.7-.1-.6-.2-1.2-.2-1.8v-3.1-1.2c0-3.1-.6-6.3-1.5-9.4-.5-1.5-1.1-3.1-1.7-4.5-.3-.7-.7-1.4-1.1-1.9-.2-.3-.4-.6-.5-.7-.1-.2-.3-.3-.1-.2 0 0 .1.1.2.1l.2.1c.1 0 .3.1.4.1.1 0 .4.1.7.1.5 0 1-.2 1.4-.4.2-.1.5-.3.6-.5.1-.1.3-.3.3-.4.1-.2.1-.2.2-.3l.1-.2v-.1 2.5c.1 1.8.1 3.6.1 5.5 0 3.7-.4 7.5-1 11.2-.3 1.8-.7 3.7-1.2 5.5-.4 1.7-1 3.8-1.9 5.7-.9 1.9-2.2 3.9-4.1 5.4-1.9 1.6-4.5 2.5-6.8 2.6-2.4.1-4.6-.4-6.5-1.1-1-.4-1.9-.8-2.8-1.2-.5-.2-.9-.5-1.3-.7-.5-.3-.8-.5-1.4-.9l3 .4c-1.7.5-3.6 1-5.5.8-1.9-.1-3.7-.5-5.4-1.3-1.6-.8-3.1-1.8-4.4-2.9l-1.8-1.8c-.3-.3-.6-.6-.8-1-.3-.4-.5-.6-.8-1.1l2.9 1.5c-1.9 0-3.8-.2-5.6-.9-1.8-.7-3.4-1.6-4.8-2.7s-2.5-2.4-3.6-3.8c-.5-.7-1-1.4-1.4-2.1-.2-.4-.4-.7-.6-1.1-.2-.4-.4-.7-.6-1.3l3.8 1.9-2.4.5c-.9.1-1.7.2-2.6.2-1.8 0-3.7-.3-5.5-1-1.8-.8-3.5-2.1-4.6-3.7-.6-.8-1-1.6-1.4-2.5-.2-.4-.4-.9-.5-1.3-.1-.5-.3-.8-.4-1.5l.4 1.1c-1-1.7-1.8-3.6-2.4-5.4-.6-1.9-1-3.8-1.3-5.7-.5-3.9-.5-7.7 0-11.5 1-7.5 3.3-14.5 6.4-21.2 3-6.7 6.9-13 11.3-18.8 2.2-2.9 4.6-5.9 7.7-8.4 1.5-1.3 3.2-2.4 5-3.3.9-.4 1.9-.8 2.8-.9 1-.1 1.9-.2 3 0 1.2.2 2 1.5 1.8 2.7-.1.3-.2.6-.3.8h-1z\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default BaseBody;\n","import Grid from './Grid';\nimport BaseTail from './BaseTail';\nimport BaseHead from './BaseHead';\nimport BaseBody from './BaseBody';\n\nconst svg = {\n  Grid,\n  Base: {\n    Head: BaseHead,\n    Body: BaseBody,\n    Tail: BaseTail,\n  },\n};\n\nexport default svg;\n","import React from 'react';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\n\nfunction BaseHead({\n  furColor = DEFAULTS.FUR,\n  snoutColor = DEFAULTS.HEAD.SNOUT,\n  noseColor = DEFAULTS.HEAD.NOSE,\n  eyeColor = DEFAULTS.HEAD.EYES,\n}) {\n  const furColorClass = `fur-color-fill-${PROPS.FUR[furColor].id}`;\n  const st2FurClass = `svg-base-head__st2 ${furColorClass}`;\n\n  const snoutColorClass = `snout-color-fill-${PROPS.HEAD.SNOUT[snoutColor].id}`;\n  const snoutClass = `svg-base-head__snout ${snoutColorClass}`;\n\n  const noseColorClass = `nose-color-fill-${PROPS.HEAD.NOSE[noseColor].id}`;\n  const noseClass = `svg-base-head__nose ${noseColorClass}`;\n\n  const eyeColorClass = `eye-color-fill-${PROPS.HEAD.EYES[eyeColor].id}`;\n  const pupilClass = `svg-base-head__pupil ${eyeColorClass}`;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      overflow=\"visible\"\n      viewBox=\"0 0 1024 1024\"\n      className=\"svg-sprite\"\n    >\n      <g id=\"_x2B_Head_copy\">\n        <g id=\"_x2B_Base_copy\">\n          <g id=\"head_1_\">\n            <path\n              d=\"M396.5 340.4s-17-27.4-49-6.6c-32 20.7-16.4 64.8-16.4 64.8s15.3 47.3 58.5 30.3c43.2-17.1 6.9-88.5 6.9-88.5zM348.1 355.9s38-16.7 35.4 39.2\"\n              className=\"svg-base-head__st1\"\n            />\n            <path\n              d=\"M348.5 354.2c5.2-2.1 10.9-3.1 16.7-2.2 2.9.5 5.8 1.5 8.4 3 2.6 1.6 5 3.7 6.5 6.3 3.2 5.1 4.3 10.9 4.8 16.4.4 5.5.5 11 .2 16.4 0 .6-.8 1-1.7 1-.9 0-1.6-.5-1.6-1.1.2-5.3-.1-10.6-1.2-15.7-1-5.1-2.9-9.9-5.5-13.8-1.3-2-2.8-3.7-4.5-5.3-1.8-1.5-3.9-2.7-6.3-3.2-4.7-1.2-10-.7-14.9.8-.5.2-1.1-.3-1.4-1.1-.2-.5 0-1.3.5-1.5z\"\n              className=\"svg-base-head__st1\"\n            />\n            <g>\n              <path\n                d=\"M373.9 358.6c-25 12.9-12.6 36.5-12.6 36.5M374.3 361.2c-2.7 1.9-5.1 4-7.3 6.2-2.1 2.2-3.7 4.9-4.8 7.7-1.1 2.8-1.6 6-1.7 9.2 0 3.2.7 6.6 2 9.6.1.3-.4.9-1.2 1.3-.8.4-1.6.4-1.8.1-1.6-3.4-2.6-6.8-3.3-10.5-.7-3.7-.6-7.6.5-11.4.5-1.9 1.4-3.7 2.4-5.4 1-1.7 2.2-3.2 3.5-4.7 2.7-2.8 6-4.9 9.4-6.3.6-.2 1.5.5 2 1.7.5 1.1.6 2.2.3 2.5z\"\n                className=\"svg-base-head__st1\"\n              />\n            </g>\n            <path\n              d=\"M732.2 347.3c-10.6-88.8-33.9-202.6-186.4-208.6s-163.9 160.1-158.5 193 4.5 203.1 200.7 203.4c83 .1 166-5.4 144.2-187.8z\"\n              className=\"svg-base-head__st1\"\n            />\n            <g>\n              <path\n                d=\"M727.3 465.5c-17.9-28.4-86.4-38.1-86.4-38.1-139.6-.2-171.3 42.9-178.7 72.2 28.7 21.1 69 35.4 125.8 35.5 58.9.1 117.9-2.7 139.3-69.6z\"\n                className=\"svg-base-head__st1\"\n              />\n              <path\n                d=\"M626.8 425.7s17.4-.6 19.9 4.4-13.6 33.3-21.7 33.3-26.5-29.8-22.9-34.3c3.7-4.5 21.8-3.4 24.7-3.4z\"\n                className=\"svg-base-head__st1\"\n              />\n            </g>\n            <g>\n              <path\n                d=\"M396.5 340.4s-17-27.4-49-6.6c-32 20.7-16.4 64.8-16.4 64.8s15.3 47.3 58.5 30.3c43.2-17.1 6.9-88.5 6.9-88.5z\"\n                className={st2FurClass}\n              />\n              <path d=\"M348.5 354.2c5.2-2.1 10.9-3.1 16.7-2.2 2.9.5 5.8 1.5 8.4 3 2.6 1.6 5 3.7 6.5 6.3 3.2 5.1 4.3 10.9 4.8 16.4.4 5.5.5 11 .2 16.4 0 .6-.8 1-1.7 1-.9 0-1.6-.5-1.6-1.1.2-5.3-.1-10.6-1.2-15.7-1-5.1-2.9-9.9-5.5-13.8-1.3-2-2.8-3.7-4.5-5.3-1.8-1.5-3.9-2.7-6.3-3.2-4.7-1.2-10-.7-14.9.8-.5.2-1.1-.3-1.4-1.1-.2-.5 0-1.3.5-1.5z\" />\n              <path d=\"M374.3 361.2c-2.7 1.9-5.1 4-7.3 6.2-2.1 2.2-3.7 4.9-4.8 7.7-1.1 2.8-1.6 6-1.7 9.2 0 3.2.7 6.6 2 9.6.1.3-.4.9-1.2 1.3-.8.4-1.6.4-1.8.1-1.6-3.4-2.6-6.8-3.3-10.5-.7-3.7-.6-7.6.5-11.4.5-1.9 1.4-3.7 2.4-5.4 1-1.7 2.2-3.2 3.5-4.7 2.7-2.8 6-4.9 9.4-6.3.6-.2 1.5.5 2 1.7.5 1.1.6 2.2.3 2.5z\" />\n              <path\n                d=\"M732.2 347.3c-10.6-88.8-33.9-202.6-186.4-208.6s-163.9 160.1-158.5 193 4.5 203.1 200.7 203.4c83 .1 166-5.4 144.2-187.8z\"\n                className={st2FurClass}\n              />\n              <g>\n                <path\n                  d=\"M727.3 465.5c-17.9-28.4-86.4-38.1-86.4-38.1-139.6-.2-171.3 42.9-178.7 72.2 28.7 21.1 69 35.4 125.8 35.5 58.9.1 117.9-2.7 139.3-69.6z\"\n                  className={snoutClass}\n                />\n                <path\n                  d=\"M626.8 425.7s17.4-.6 19.9 4.4-13.6 33.3-21.7 33.3-26.5-29.8-22.9-34.3c3.7-4.5 21.8-3.4 24.7-3.4z\"\n                  className={noseClass}\n                />\n              </g>\n            </g>\n            <g>\n              <path d=\"M619.8 507c-3.4 1.2-6.9 1.9-10.4 2.4-3.5.4-7.1.7-10.7.5-3.6-.2-7.1-.6-10.6-1.3-3.5-.7-6.9-1.6-10.2-2.9-6.6-2.4-12.9-5.7-18.7-9.7-5.7-4-11.2-8.3-16.2-13.1-.5-.5-.5-1.5.2-2.1.6-.6 1.5-.7 2.1-.2 4.9 4.6 10.4 8.5 16.3 11.8 5.9 3.2 12 6 18.3 7.9 3.1 1 6.3 1.9 9.5 2.5 3.2.7 6.5 1 9.7 1.2 3.3.2 6.5.1 9.8-.1 3.2-.3 6.5-.7 9.7-1.4 1-.2 2.2.7 2.5 1.9.2 1.1-.3 2.3-1.3 2.6z\" />\n            </g>\n            <g>\n              <ellipse cx=\"506.6\" cy=\"364.9\" className=\"svg-base-head__eye\" rx=\"70.6\" ry=\"56.6\" />\n              <circle cx=\"495.3\" cy=\"368.4\" r=\"29.6\" className={pupilClass} />\n              <g>\n                <ellipse cx=\"677.4\" cy=\"364.9\" className=\"svg-base-head__eye\" rx=\"49.7\" ry=\"56.6\" />\n                <circle cx=\"662.7\" cy=\"369.2\" r=\"24.9\" className={pupilClass} />\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default BaseHead;\n","import React from 'react';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\n\nfunction BaseTail({ furColor = DEFAULTS.FUR }) {\n  const furClass = `fur-color-fill-${PROPS.FUR[furColor].id}`;\n  const borderFurClass = `svg-base-tail__border ${furClass}`;\n  const fillFurClass = `svg-base-tail__fill ${furClass}`;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      overflow=\"visible\"\n      viewBox=\"0 0 1024 1024\"\n      className=\"svg-sprite\"\n    >\n      <g id=\"_x2B_Tail_copy\">\n        <g id=\"_x2B_Base_copy\">\n          <g id=\"tail_1_\">\n            <path\n              d=\"M571.5 738.2s-82.1 13.6-117.2-129.8S352.8 474 352.8 474s-132.6 76.5-194 0-26.6-193.6 35.6-232.4c143.5-89.5 312-43.7 378 95.7 79.8 169 79.3 310.6-.9 400.9z\"\n              className={borderFurClass}\n            />\n            <path\n              d=\"M193.2 304.5s-25.9 41.1-24.8 62.9c0 0 11.3-15.5 20.2-17.1 0 0-12.1 29.6 3 52.1\"\n              className={fillFurClass}\n            />\n            <path d=\"M194.8 305.5c-2.9 4.8-5.6 9.8-8.1 14.9-2.6 5-5 10.1-7.1 15.3-2.2 5.2-4.1 10.4-5.6 15.7-.7 2.7-1.4 5.3-1.8 8-.4 2.7-.6 5.3-.5 7.8l-5.9-1.8c1.5-1.9 2.9-3.7 4.4-5.4 1.5-1.7 3.2-3.4 4.9-5.1 1.7-1.6 3.6-3.2 5.6-4.6 2.1-1.4 4.3-2.7 7.3-3.3 1.7-.3 3.4.8 3.8 2.5.1.6.1 1.3-.2 1.8v.1c-.4.9-.8 1.9-1.1 2.9-.3 1-.7 2-1 3.1-.6 2.1-1.1 4.2-1.5 6.3-.8 4.3-1.3 8.6-1.3 12.9 0 2.2.1 4.3.4 6.4.2 2.1.6 4.2 1.2 6.3 1.1 4.1 2.8 8.1 5.1 11.7.6 1 .3 2.3-.7 3-1 .6-2.3.3-2.9-.6-2.7-3.9-4.8-8.2-6.2-12.8-.7-2.3-1.2-4.6-1.6-6.9-.4-2.3-.6-4.7-.7-7-.2-4.7.1-9.4.8-14 .4-2.3.8-4.6 1.4-6.9.3-1.1.6-2.3.9-3.4.3-1.2.7-2.2 1.1-3.5l3.6 4.4c-1.5.3-3.2 1.2-4.8 2.3-1.7 1.1-3.3 2.5-4.8 3.9-1.5 1.5-3 3-4.5 4.6-1.4 1.6-2.8 3.3-4.1 5l-.1.1c-1.1 1.4-3.1 1.6-4.5.6-.8-.6-1.2-1.5-1.2-2.4-.1-3.2.3-6.3.9-9.2.6-2.9 1.4-5.8 2.3-8.6 1.8-5.6 4.1-10.9 6.5-16.2 2.4-5.2 5.1-10.3 7.9-15.3 2.8-5 5.7-9.9 8.8-14.8.6-.9 1.8-1.1 2.7-.6.9.7 1.2 1.9.6 2.8z\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default BaseTail;\n","import { createGlobalState } from 'react-hooks-global-state';\nimport DEFAULTS from '../utils/properties/defaults';\n\nconst initialState = {\n  furColor: DEFAULTS.FUR,\n  // HEAD\n  snoutColor: DEFAULTS.HEAD.SNOUT,\n  noseColor: DEFAULTS.HEAD.NOSE,\n  eyeColor: DEFAULTS.HEAD.EYES,\n  // BODY\n\n  // TAIL\n};\n\nconst { useGlobalState } = createGlobalState(initialState);\n\nexport default useGlobalState;\n","import React from 'react';\n\n// Components\nimport SVG from './svg';\n\nimport useCharacterState from '../states/useCharacterState';\n\nfunction Character() {\n  const [furColor] = useCharacterState('furColor');\n  const [snoutColor] = useCharacterState('snoutColor');\n  const [noseColor] = useCharacterState('noseColor');\n  const [eyeColor] = useCharacterState('eyeColor');\n\n  return (\n    <div className=\"character\">\n      <SVG.Grid />\n      <SVG.Base.Tail furColor={furColor} />\n      <SVG.Base.Body furColor={furColor} />\n      <SVG.Base.Head\n        furColor={furColor}\n        snoutColor={snoutColor}\n        noseColor={noseColor}\n        eyeColor={eyeColor}\n      />\n    </div>\n  );\n}\n\nexport default Character;\n","import React, { useCallback } from 'react';\n\nimport { Radio } from 'antd';\n\nimport useCharacterState from '../../states/useCharacterState';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\nimport { printProps } from '../../utils';\n\nconst FURS = Object.values(PROPS.FUR);\n\nfunction FurColorSelector() {\n  const [furColor, setFurColor] = useCharacterState('furColor');\n\n  const onChange = useCallback(\n    (e) => {\n      setFurColor(e?.target?.value ?? DEFAULTS.FUR);\n    },\n    [setFurColor]\n  );\n\n  printProps(FURS, 'FUR');\n\n  return (\n    <div className=\"character-option character-option--radios\">\n      <label htmlFor=\"fur\">Fur Color:</label>\n      <Radio.Group onChange={onChange} value={furColor} name=\"fur\">\n        {FURS.map((swatch) => {\n          return (\n            <Radio.Button\n              key={`fur-color-swatch-${swatch.id}`}\n              value={swatch.dna}\n              className=\"color-swatch-radio\"\n              checked={swatch.dna === furColor}\n            >\n              <span\n                className={`color-swatch fur-color-bg-${swatch.id}`}\n                title={`Fur Color ${swatch.name}`}\n              />\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </div>\n  );\n}\n\nexport default FurColorSelector;\n","import React, { useCallback } from 'react';\n\nimport { Radio } from 'antd';\n\nimport useCharacterState from '../../states/useCharacterState';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\nimport { printProps } from '../../utils';\n\nconst SNOUTS = Object.values(PROPS.HEAD.SNOUT);\n\nfunction SnoutColorSelector() {\n  const [snoutColor, setSnoutColor] = useCharacterState('snoutColor');\n\n  const onChange = useCallback(\n    (e) => {\n      setSnoutColor(e?.target?.value ?? DEFAULTS.HEAD.SNOUT);\n    },\n    [setSnoutColor]\n  );\n\n  printProps(SNOUTS, 'SNOUTS');\n\n  return (\n    <div className=\"character-option character-option--radios\">\n      <label htmlFor=\"snout\">Snout Color:</label>\n      <Radio.Group onChange={onChange} value={snoutColor} name=\"snout\">\n        {SNOUTS.map((swatch) => {\n          return (\n            <Radio.Button\n              key={`snout-color-swatch-${swatch.id}`}\n              value={swatch.dna}\n              className=\"color-swatch-radio\"\n              checked={swatch.dna === snoutColor}\n            >\n              <span\n                className={`color-swatch snout-color-bg-${swatch.id}`}\n                title={`Snout Color ${swatch.name}`}\n              />\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </div>\n  );\n}\n\nexport default SnoutColorSelector;\n","import React, { useCallback } from 'react';\n\nimport { Radio } from 'antd';\n\nimport useCharacterState from '../../states/useCharacterState';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\nimport { printProps } from '../../utils';\n\nconst NOSES = Object.values(PROPS.HEAD.NOSE);\n\nfunction NoseColorSelector() {\n  const [noseColor, setNoseColor] = useCharacterState('noseColor');\n\n  const onChange = useCallback(\n    (e) => {\n      setNoseColor(e?.target?.value ?? DEFAULTS.HEAD.NOSE);\n    },\n    [setNoseColor]\n  );\n\n  printProps(NOSES, 'NOSES');\n\n  return (\n    <div className=\"character-option character-option--radios\">\n      <label htmlFor=\"nose\">Nose Color:</label>\n      <Radio.Group onChange={onChange} value={noseColor} name=\"nose\">\n        {NOSES.map((swatch) => {\n          return (\n            <Radio.Button\n              key={`nose-color-swatch-${swatch.id}`}\n              value={swatch.dna}\n              className=\"color-swatch-radio\"\n              checked={swatch.dna === noseColor}\n            >\n              <span\n                className={`color-swatch nose-color-bg-${swatch.id}`}\n                title={`Nose Color ${swatch.name}`}\n              />\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </div>\n  );\n}\n\nexport default NoseColorSelector;\n","import React, { useCallback } from 'react';\n\nimport { Radio } from 'antd';\n\nimport useCharacterState from '../../states/useCharacterState';\n\nimport PROPS from '../../utils/properties/';\nimport DEFAULTS from '../../utils/properties/defaults';\nimport { printProps } from '../../utils';\n\nconst EYES = Object.values(PROPS.HEAD.EYES);\n\nfunction EyeColorSelector() {\n  const [eyeColor, setEyeColor] = useCharacterState('eyeColor');\n\n  const onChange = useCallback(\n    (e) => {\n      setEyeColor(e?.target?.value ?? DEFAULTS.HEAD.EYES);\n    },\n    [setEyeColor]\n  );\n\n  printProps(EYES, 'EYES');\n\n  return (\n    <div className=\"character-option character-option--radios\">\n      <label htmlFor=\"eye\">Eye Color:</label>\n      <Radio.Group onChange={onChange} value={eyeColor} name=\"eye\">\n        {EYES.map((swatch) => {\n          return (\n            <Radio.Button\n              key={`eye-color-swatch-${swatch.id}`}\n              value={swatch.dna}\n              className=\"color-swatch-radio\"\n              checked={swatch.dna === eyeColor}\n            >\n              <span\n                className={`color-swatch eye-color-bg-${swatch.id}`}\n                title={`Eye Color ${swatch.name}`}\n              />\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </div>\n  );\n}\n\nexport default EyeColorSelector;\n","import React from 'react';\n\nimport { Collapse } from 'antd';\n\nimport FurColorSelector from './options/FurColorSelector';\nimport SnoutColorSelector from './options/SnoutColorSelector';\nimport NoseColorSelector from './options/NoseColorSelector';\nimport EyeColorSelector from './options/EyeColorSelector';\n\nfunction CharacterOptions() {\n  const callback = (key) => {\n    console.log(key);\n  };\n\n  return (\n    <div className=\"options\">\n      <Collapse defaultActiveKey={['fur']} onChange={callback}>\n        <Collapse.Panel header=\"Fur\" key=\"fur\">\n          <FurColorSelector />\n        </Collapse.Panel>\n        <Collapse.Panel header=\"Face\" key=\"face\">\n          <SnoutColorSelector />\n          <NoseColorSelector />\n          <EyeColorSelector />\n        </Collapse.Panel>\n        <Collapse.Panel header=\"Hair\" key=\"hair\">\n          Something\n        </Collapse.Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CharacterOptions;\n","import React from 'react';\n\n// Design Resources\nimport { Layout } from 'antd';\n\n// Components\nimport Character from './Character';\nimport CharacterOptions from './CharacterOptions';\n\nfunction Creator() {\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main creator\">\n        <h1>Creator</h1>\n        <section className=\"section\">\n          <Character />\n          <CharacterOptions />\n        </section>\n      </main>\n    </Layout.Content>\n  );\n}\n\nexport default Creator;\n","import store from '../services/store';\nimport { DEFAULT_MEMBERS } from '../utils/constants';\nimport { Line, Part, Section, serializeKey, Song } from '../utils/distributor';\nimport { setDistributorGlobalState } from './useDistributorState';\nimport { setGlobalState } from './useGlobalState';\n\nexport const loadSongState = async (songId) => {\n  setDistributorGlobalState('isFullyLoaded', false);\n\n  const song = await store.getRecord('song', songId);\n  const songData = await store.getRecord('song-data', songId);\n\n  const newSong = new Song({ ...song, sectionsIds: songData.sectionsIds });\n\n  // Created instances looping through included data\n  const newSections = {};\n  const newLines = {};\n  const newParts = {};\n  songData.included.forEach((entry) => {\n    if (entry.type === 'section') {\n      const newInstance = new Section(entry);\n      return (newSections[newInstance.id] = newInstance);\n    }\n    if (entry.type === 'line') {\n      const newInstance = new Line(entry);\n      return (newLines[newInstance.id] = newInstance);\n    }\n    if (entry.type === 'part') {\n      const newInstance = new Part(entry);\n      return (newParts[newInstance.id] = newInstance);\n    }\n  });\n\n  setDistributorGlobalState('parts', newParts);\n  setDistributorGlobalState('lines', newLines);\n  setDistributorGlobalState('sections', newSections);\n  setDistributorGlobalState('song', newSong);\n  setDistributorGlobalState('videoId', newSong.videoId);\n  setDistributorGlobalState('step', newSong.isComplete ? '3' : '2');\n  setDistributorGlobalState('isFullyLoaded', true);\n};\n\nexport const loadActiveMembers = async (group, includeDefault = false) => {\n  const members = await store.getCollection('members', true);\n\n  console.log({ members });\n\n  console.log({ group });\n  const activeMembers = group.membersIds.reduce((acc, memberId) => {\n    const key = serializeKey('member', memberId);\n    acc[key] = { ...members[key] };\n    return acc;\n  }, {});\n\n  if (includeDefault) {\n    setGlobalState('activeMembers', { ...activeMembers, ...DEFAULT_MEMBERS });\n    return;\n  }\n\n  setGlobalState('activeMembers', { ...activeMembers });\n};\n","import React, { useState, useCallback, useEffect, Fragment } from 'react';\n\n// Design Resources\nimport { Button, Modal, Spin, Table } from 'antd';\n// State\nimport useLoadingState from '../../states/useLoadingState';\nimport { loadSongState } from '../../states/functions';\n// Store\nimport store from '../../services/store';\n// Components\nimport LoadingContainer from '../global/LoadingContainer';\n\nfunction LoadSongModal({ buttonLabel = 'Load Song', onBeforeLoad = () => {}, onAfterLoad = () => {} }) {\n  const [isSongLoading] = useLoadingState('isSongLoading');\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setIsModalVisible(true)} disabled={isSongLoading}>\n        {isSongLoading ? <Spin size=\"small\" /> : buttonLabel}\n      </Button>\n\n      {isModalVisible && (\n        <SongModal\n          isModalVisible={isModalVisible}\n          setIsModalVisible={setIsModalVisible}\n          onBeforeLoad={onBeforeLoad}\n          onAfterLoad={onAfterLoad}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction SongModal({ isModalVisible, setIsModalVisible, onBeforeLoad = () => {}, onAfterLoad = () => {} }) {\n  const [isSongLoading] = useLoadingState('isSongLoading');\n\n  const [data, setData] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  useEffect(() => {\n    async function fetchSongs() {\n      setData(await store.getCollection('songs'));\n    }\n    fetchSongs();\n  }, []);\n\n  const onCancelModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const onLoadSong = useCallback(() => {\n    async function fetchSongData() {\n      onBeforeLoad();\n\n      await loadSongState(selectedId);\n\n      setSelectedId(null);\n      onAfterLoad();\n      setIsModalVisible(false);\n    }\n\n    fetchSongData();\n  }, [selectedId, setIsModalVisible, onBeforeLoad, onAfterLoad]);\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      render: (title, data) => (data.version ? `${title} (${data.version})` : title),\n    },\n    {\n      title: 'Genre',\n      dataIndex: 'genre',\n    },\n    {\n      title: 'Style',\n      dataIndex: 'style',\n    },\n    {\n      title: 'Duration',\n      dataIndex: 'duration',\n    },\n  ];\n\n  const rowSelection = {\n    onChange: (_, selectedRows) => {\n      setSelectedId(selectedRows[0].id);\n    },\n  };\n\n  return (\n    <Modal\n      title=\"Load Song\"\n      visible={isModalVisible}\n      onOk={onLoadSong}\n      okText=\"Load Song\"\n      onCancel={onCancelModal}\n      okButtonProps={{ disabled: isSongLoading || Boolean(!selectedId) }}\n    >\n      <LoadingContainer waitFor=\"song\">\n        <Table\n          rowSelection={{\n            type: 'radio',\n            ...rowSelection,\n          }}\n          columns={columns}\n          dataSource={data ?? []}\n        />\n      </LoadingContainer>\n    </Modal>\n  );\n}\n\nexport default LoadSongModal;\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\n// State\nimport useDistributorState from '../../states/useDistributorState';\n\nfunction YoutubeVideo({\n  playerRef,\n  height = '180',\n  width = '320',\n  className = '',\n  onStateChange = () => {},\n}) {\n  const [videoId] = useDistributorState('videoId');\n  const [, setIsRecording] = useDistributorState('isRecording');\n  const [, setIsPlaying] = useDistributorState('isPlaying');\n\n  const videoOptions = {\n    height: height ?? '180',\n    width: width ?? '320',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };\n\n  const onReady = (e) => {\n    console.log('onReady', e);\n  };\n\n  const onPlay = (e) => {\n    console.log('onPlay', e);\n    setIsPlaying(true);\n  };\n\n  const onPause = (e) => {\n    console.log('onPause', e);\n    setIsPlaying(false);\n  };\n\n  const onEnd = (e) => {\n    console.log('onEnd', e);\n    setIsRecording(false);\n    setIsPlaying(false);\n  };\n\n  const onPlaybackRateChange = (e) => {\n    console.log('onPlaybackRateChange', e);\n  };\n\n  return (\n    <YouTube\n      videoId={videoId}\n      id={videoId}\n      key={videoId}\n      className=\"video\"\n      containerClassName={className}\n      opts={videoOptions}\n      onReady={onReady}\n      onPlay={onPlay}\n      onPause={onPause}\n      onEnd={onEnd}\n      onStateChange={onStateChange}\n      onPlaybackRateChange={onPlaybackRateChange}\n      // onError={func}                    // defaults -> noop\n      // onPlaybackQualityChange={func}    // defaults -> noop\n      ref={playerRef}\n    />\n  );\n}\n\nexport default YoutubeVideo;\n","import React from 'react';\n\n// Design Resources\nimport { ApiOutlined } from '@ant-design/icons';\n// State\nimport useGlobalState from '../../states/useGlobalState';\n\nfunction LogAssignees({ partId }) {\n  const [lineDistribution] = useGlobalState('lineDistribution');\n  const [activeMembers] = useGlobalState('activeMembers');\n\n  if (!Boolean(lineDistribution?.[partId])) {\n    return <ApiOutlined />;\n  }\n\n  const distributionAssignees = lineDistribution?.[partId] ?? {};\n  const assignedMembers = Object.keys(distributionAssignees).map((memberId) => {\n    return activeMembers[memberId];\n  });\n\n  return (\n    <span className=\"log-assignees__list\">\n      {assignedMembers.map((member) => {\n        return (\n          <span\n            key={`${partId}-${member.id}`}\n            className=\"log-assignees__item\"\n            style={{ backgroundColor: member?.color }}\n          >\n            {member?.name?.[0] ?? <ApiOutlined />}\n          </span>\n        );\n      })}\n    </span>\n  );\n}\n\nexport default LogAssignees;\n","import React, { useCallback } from 'react';\n\n// Design Resources\nimport { Button, Checkbox } from 'antd';\nimport { NotificationFilled, CheckCircleOutlined, ApiOutlined } from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport LogAssignees from './LogAssignees';\n\nfunction LogPartEdit({ part, onShowModal, onCheckboxChange }) {\n  const [selectedTimestamps, setSelectedTimestamps] = useDistributorState('selectedTimestamps');\n  const [unassignedTimestamps, setUnassignedTimestamps] = useDistributorState('unassignedTimestamps');\n  const [selection] = useDistributorState('selection');\n\n  // CSS Classes\n  const baseClass = 'log-part';\n  const assigneeClass = `assignee-background--${part.assignee}`;\n\n  const attachTimestamp = useCallback(() => {\n    const selectedTimestampsCopy = [...selectedTimestamps];\n    const firstTimestamp = selectedTimestampsCopy.shift();\n    part.updateTimestamp(firstTimestamp);\n    // Remove timestamp from options\n    setUnassignedTimestamps((state) => {\n      delete state[firstTimestamp.id];\n      return state;\n    });\n    setSelectedTimestamps(selectedTimestampsCopy);\n  }, [part, selectedTimestamps, setSelectedTimestamps, setUnassignedTimestamps]);\n\n  const checkedIndex = selection.indexOf(part.key);\n\n  return (\n    <li className={`${baseClass} ${assigneeClass}`}>\n      <Checkbox id={part.key} name=\"part\" onChange={onCheckboxChange} checked={checkedIndex !== -1} />\n      <Button\n        type=\"text\"\n        icon={part.isComplete ? <CheckCircleOutlined className=\"icon--green\" /> : <NotificationFilled />}\n        onClick={() => onShowModal(part)}\n        size=\"small\"\n      >\n        {part.text}\n        {Boolean(Object.keys(unassignedTimestamps).length) && checkedIndex !== -1 && (\n          <span className=\"log-part__button-index\">({checkedIndex + 1})</span>\n        )}\n      </Button>\n      {Boolean(selectedTimestamps?.length) && (\n        <Button\n          shape=\"circle\"\n          type=\"default\"\n          size=\"small\"\n          icon={<ApiOutlined />}\n          className=\"log-part__connect-icon\"\n          onClick={attachTimestamp}\n        />\n      )}\n    </li>\n  );\n}\n\nfunction LogPartCompact({ part, seekAndPlay, onCheckboxChange }) {\n  const [selectedTimestamps, setSelectedTimestamps] = useDistributorState('selectedTimestamps');\n  const [unassignedTimestamps, setUnassignedTimestamps] = useDistributorState('unassignedTimestamps');\n  const [selection] = useDistributorState('selection');\n\n  // CSS Classes\n  const baseClass = 'log-part';\n  const assigneeClass = `assignee-background--${part.assignee}`;\n\n  const attachTimestamp = useCallback(() => {\n    const selectedTimestampsCopy = [...selectedTimestamps];\n    const firstTimestamp = selectedTimestampsCopy.shift();\n    part.updateTimestamp(firstTimestamp);\n    // Remove timestamp from options\n    setUnassignedTimestamps((state) => {\n      delete state[firstTimestamp.id];\n      return state;\n    });\n    setSelectedTimestamps(selectedTimestampsCopy);\n  }, [part, selectedTimestamps, setSelectedTimestamps, setUnassignedTimestamps]);\n\n  const checkedIndex = selection.indexOf(part.key);\n\n  const onPlayPart = useCallback(() => {\n    seekAndPlay(part.startTime / 1000);\n  }, [part.startTime, seekAndPlay]);\n\n  return (\n    <li className={`${baseClass} ${assigneeClass}`}>\n      <Checkbox id={part.key} name=\"part\" onChange={onCheckboxChange} checked={checkedIndex !== -1} />\n      <Button\n        type=\"text\"\n        icon={part.isComplete ? <CheckCircleOutlined className=\"icon--green\" /> : <NotificationFilled />}\n        onClick={onPlayPart}\n        size=\"small\"\n      >\n        {part.text}\n        {Boolean(Object.keys(unassignedTimestamps).length) && checkedIndex !== -1 && (\n          <span className=\"log-part__button-index\">({checkedIndex + 1})</span>\n        )}\n      </Button>\n      {Boolean(selectedTimestamps?.length) && (\n        <Button\n          shape=\"circle\"\n          type=\"default\"\n          size=\"small\"\n          icon={<ApiOutlined />}\n          className=\"log-part__connect-icon\"\n          onClick={attachTimestamp}\n        />\n      )}\n    </li>\n  );\n}\n\nfunction LogPartDistribute({ part, assignMembers }) {\n  return (\n    <li className=\"log-part assignee-background--none\">\n      <Button\n        type=\"text\"\n        onClick={() => assignMembers(part.id)}\n        size=\"small\"\n        className=\"log-part__distribute\"\n      >\n        {part.text}\n        <LogAssignees partId={part.id} />\n      </Button>\n    </li>\n  );\n}\n\nconst LogPart = {\n  Compact: LogPartCompact, // identical except for click action\n  Distribute: LogPartDistribute, // identical except for click action\n  Edit: LogPartEdit,\n};\n\nexport default LogPart;\n","import React from 'react';\n\n// Design Resources\nimport { Button, Checkbox, Tooltip } from 'antd';\nimport { MessageFilled, CheckCircleOutlined, PlusOutlined, ColumnWidthOutlined } from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\nimport useGlobalState from '../../states/useGlobalState';\n// Engine and utilities\nimport { Part } from '../../utils/distributor';\nimport { bemClass, getBemModifier } from '../../utils';\n// Components\nimport LogPart from './LogPart';\n\nfunction LogLineEdit({ line, onCheckboxChange, onShowModal }) {\n  const [parts] = useDistributorState('parts');\n  const [selection] = useDistributorState('selection');\n\n  // CSS Classes\n  const isLineChecked = selection.includes(line.key);\n  const baseClass = 'log-line';\n  const checkedClass = getBemModifier(isLineChecked, 'checked');\n\n  const onAddNewPart = (line) => {\n    const newPart = new Part({ lineId: line.id, text: '[missing lyrics]' });\n    line.addPart(newPart);\n  };\n\n  return (\n    <li className={bemClass(baseClass, checkedClass)}>\n      <div className=\"log-line__title\">\n        <Checkbox id={line.key} name=\"line\" onChange={onCheckboxChange} checked={isLineChecked} />\n        <Tooltip title=\"Open Line Options\">\n          <Button\n            type=\"text\"\n            icon={line.isComplete ? <CheckCircleOutlined className=\"icon--green\" /> : <MessageFilled />}\n            className=\"log-line__line-button\"\n            onClick={() => onShowModal(line)}\n          >\n            <span className=\"log-line__title-text\">{line.text}</span>\n          </Button>\n        </Tooltip>\n        <div className=\"log-line__actions\">\n          <Tooltip title=\"Add new part to this line\">\n            <Button\n              shape=\"circle\"\n              type=\"default\"\n              size=\"small\"\n              icon={<PlusOutlined />}\n              className=\"log-line__icon-button\"\n              onClick={() => onAddNewPart(line)}\n            />\n          </Tooltip>\n\n          <Tooltip title=\"Nudge Line\">\n            <Button\n              shape=\"circle\"\n              type=\"default\"\n              size=\"small\"\n              icon={<ColumnWidthOutlined />}\n              className=\"log-line__icon-button\"\n              disabled\n              onClick={() => {}}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <ul className=\"log__parts\">\n        {line?.partsIds?.map((partId) => {\n          const part = parts[partId];\n          return (\n            <LogPart.Edit\n              key={part.key}\n              part={part}\n              onCheckboxChange={onCheckboxChange}\n              onShowModal={onShowModal}\n            />\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n\nfunction LogLineCompact({ line, onCheckboxChange, seekAndPlay }) {\n  const [parts] = useDistributorState('parts');\n\n  return (\n    <li className={bemClass('log-line', 'compact')}>\n      <ul className={bemClass('log__parts', 'compact')}>\n        {line?.partsIds?.map((partId) => {\n          const part = parts[partId];\n          return (\n            <LogPart.Compact\n              key={part.key}\n              part={part}\n              onCheckboxChange={onCheckboxChange}\n              seekAndPlay={seekAndPlay}\n            />\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n\nfunction LogLineDistribute({ line, assignMembers }) {\n  const [parts] = useDistributorState('parts');\n  const [lineDistribution] = useGlobalState('lineDistribution');\n\n  const isComplete = line?.partsIds?.every((partId) => Boolean(lineDistribution[partId]));\n  const incompleteClass = isComplete ? '' : 'incomplete';\n\n  return (\n    <li className={bemClass('log-line', 'compact')}>\n      <ul className={bemClass('log__parts', 'compact', incompleteClass)}>\n        {line?.partsIds?.map((partId) => {\n          const part = parts[partId];\n          return <LogPart.Distribute key={part.key} part={part} assignMembers={assignMembers} />;\n        })}\n      </ul>\n    </li>\n  );\n}\n\nconst LogLine = {\n  Compact: LogLineCompact,\n  Distribute: LogLineDistribute,\n  Edit: LogLineEdit,\n};\n\nexport default LogLine;\n","import React, { useCallback } from 'react';\n\n// Design Resources\nimport { Button, Checkbox, Tooltip } from 'antd';\nimport {\n  DatabaseFilled,\n  CheckCircleOutlined,\n  PlusOutlined,\n  ColumnWidthOutlined,\n  PlayCircleOutlined,\n} from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n\n// Engine and utilities\nimport { Line } from '../../utils/distributor';\nimport { bemClass, getBemModifier } from '../../utils';\n// Components\nimport LogLine from './LogLine';\n\nfunction LogSectionEdit({ section, onCheckboxChange, onShowModal, seekAndPlay }) {\n  const [lines] = useDistributorState('lines');\n  const [selection] = useDistributorState('selection');\n\n  // CSS Classes\n  const isSectionChecked = selection.includes(section.key);\n  const baseClass = 'log-section';\n  const checkedClass = getBemModifier(isSectionChecked, 'checked');\n\n  // Methods\n  const onAddNewLine = useCallback(() => {\n    const newLine = new Line({ sectionId: section.id });\n    section.addLine(newLine);\n  }, [section]);\n\n  const onPlaySection = useCallback(() => {\n    seekAndPlay(section.startTime / 1000);\n  }, [section.startTime, seekAndPlay]);\n\n  return (\n    <li className={bemClass(baseClass, checkedClass)}>\n      <div className=\"log-section__title\">\n        <Checkbox id={section.key} name=\"section\" onChange={onCheckboxChange} checked={isSectionChecked} />\n        <Button\n          type=\"default\"\n          shape=\"round\"\n          icon={section.isComplete ? <CheckCircleOutlined className=\"icon--green\" /> : <DatabaseFilled />}\n          className=\"log-section__title-button\"\n          onClick={() => onShowModal(section)}\n        >\n          Section {section.kind}\n        </Button>\n        {Boolean(seekAndPlay) && (\n          <Tooltip title=\"Play song from here\">\n            <Button\n              shape=\"circle\"\n              type=\"default\"\n              size=\"small\"\n              icon={<PlayCircleOutlined />}\n              className=\"log-section__icon-button\"\n              onClick={onPlaySection}\n            />\n          </Tooltip>\n        )}\n        <div className=\"log-section__actions\">\n          <Tooltip title=\"Add new line to this section\">\n            <Button\n              shape=\"circle\"\n              type=\"default\"\n              size=\"small\"\n              icon={<PlusOutlined />}\n              className=\"log-section__icon-button\"\n              onClick={onAddNewLine}\n            />\n          </Tooltip>\n          <Tooltip title=\"Nudge Section\">\n            <Button\n              shape=\"circle\"\n              type=\"default\"\n              size=\"small\"\n              icon={<ColumnWidthOutlined />}\n              className=\"log-section__icon-button\"\n              disabled\n              onClick={() => {}}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <ul className=\"log__lines\">\n        {section.linesIds.map((lineId) => {\n          const line = lines[lineId];\n          return (\n            <LogLine.Edit\n              key={line.key}\n              line={line}\n              onCheckboxChange={onCheckboxChange}\n              onShowModal={onShowModal}\n            />\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n\nfunction LogSectionCompact({ section, onCheckboxChange, seekAndPlay }) {\n  const [lines] = useDistributorState('lines');\n\n  const onPlaySection = useCallback(() => {\n    seekAndPlay(section.startTime / 1000);\n  }, [section.startTime, seekAndPlay]);\n\n  return (\n    <li className={bemClass('log-section', 'compact')}>\n      <Button\n        shape=\"circle\"\n        type=\"default\"\n        size=\"small\"\n        icon={<PlayCircleOutlined />}\n        className=\"log-section__icon-button\"\n        onClick={onPlaySection}\n        disabled={!Boolean(section.startTime)}\n      />\n\n      <ul className={bemClass('log__lines', 'compact')}>\n        {section.linesIds.map((lineId) => {\n          const line = lines[lineId];\n          return (\n            <LogLine.Compact\n              key={line.key}\n              line={line}\n              section={section}\n              onCheckboxChange={onCheckboxChange}\n              seekAndPlay={seekAndPlay}\n            />\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n\nfunction LogSectionDistribute({ section, seekAndPlay, assignMembers }) {\n  const [lines] = useDistributorState('lines');\n\n  const onPlaySection = useCallback(() => {\n    seekAndPlay(section.startTime / 1000);\n  }, [section.startTime, seekAndPlay]);\n\n  return (\n    <li className={bemClass('log-section', 'compact')}>\n      <Button\n        shape=\"circle\"\n        type=\"default\"\n        size=\"small\"\n        icon={<PlayCircleOutlined />}\n        className=\"log-section__icon-button\"\n        onClick={onPlaySection}\n      />\n\n      <ul className={bemClass('log__lines', 'compact')}>\n        {section.linesIds.map((lineId) => {\n          const line = lines[lineId];\n          return <LogLine.Distribute key={line.key} line={line} assignMembers={assignMembers} />;\n        })}\n      </ul>\n    </li>\n  );\n}\n\nconst LogSection = {\n  Compact: LogSectionCompact,\n  Distribute: LogSectionDistribute,\n  Edit: LogSectionEdit,\n};\n\nexport default LogSection;\n","import React, { useState, useCallback } from 'react';\n\n// Design Resources\nimport { Button, Switch } from 'antd';\n\n// State\nimport useDistributorState from '../../states/useDistributorState';\n\n// Engine and utilities\nimport {\n  deserializeKey,\n  getDuplicatedData,\n  batchDeserializeInstancesSameData,\n} from '../../utils/distributor';\nimport { bemClassConditionalModifier } from '../../utils';\n// Components\nimport LogSection from './LogSection';\n\nfunction Log({\n  seekAndPlay,\n  className = '',\n  defaultCompactSetting = true,\n  locked = false,\n  assignMembers = () => {},\n}) {\n  const [song] = useDistributorState('song');\n  const [sections] = useDistributorState('sections');\n  const [lines] = useDistributorState('lines');\n  const [parts] = useDistributorState('parts');\n  const [, setActiveInstance] = useDistributorState('activeInstance');\n  const [selection, setSelection] = useDistributorState('selection');\n  const [isCompact, setIsCompact] = useState(defaultCompactSetting);\n\n  const onSwitchLogView = (checked) => {\n    setIsCompact(checked);\n  };\n\n  const handleEditAll = useCallback(() => {\n    const [type] = deserializeKey(selection[0]);\n\n    let instance = {\n      id: `SELECTION-${selection.length}`,\n      type,\n      deserialize(data) {\n        const dict = {\n          line: lines,\n          section: sections,\n          part: parts,\n        }[type];\n        batchDeserializeInstancesSameData(dict, selection, data, true);\n        setSelection([]);\n      },\n    };\n    if (type === 'section') {\n      const equalParts = getDuplicatedData(sections, selection, true);\n\n      instance = {\n        ...instance,\n        name: `SELECTION-${selection.length}`,\n        linesIds: [],\n        ...equalParts,\n      };\n    }\n    if (type === 'line') {\n      const equalParts = getDuplicatedData(lines, selection, true);\n      instance = {\n        ...instance,\n        partsIds: [],\n        ...equalParts,\n      };\n    }\n\n    setActiveInstance(instance);\n  }, [parts, lines, sections, selection, setActiveInstance, setSelection]);\n\n  const handleDeselectAll = () => {\n    setSelection([]);\n  };\n\n  const onShowModal = useCallback(\n    (instance) => {\n      setActiveInstance(instance);\n      if (instance.type === 'part' && seekAndPlay) {\n        seekAndPlay(instance.startTime / 1000);\n      }\n    },\n    [seekAndPlay, setActiveInstance]\n  );\n\n  const onCheckboxChange = useCallback(\n    (e) => {\n      const { name, id, checked } = e.target;\n\n      if (checked) {\n        setSelection((state) => {\n          if (state.length && state[0].startsWith(name)) {\n            return [...state, id];\n          }\n\n          return [id];\n        });\n      } else {\n        setSelection((state) => {\n          if (state.length && state[0].startsWith(name)) {\n            return state.filter((i) => i !== id);\n          }\n\n          return [];\n        });\n      }\n    },\n    [setSelection]\n  );\n\n  return (\n    <div className={`${bemClassConditionalModifier('log', 'compact', isCompact)} ${className}`}>\n      {!locked && (\n        <div className=\"log__editing-actions\">\n          <Button type=\"link\" size=\"small\" onClick={handleEditAll} disabled={!Boolean(selection?.length)}>\n            Edit Selected Instances\n          </Button>\n          <Button type=\"link\" size=\"small\" onClick={handleDeselectAll} disabled={!Boolean(selection?.length)}>\n            Deselect Selected Instances\n          </Button>\n          <div>\n            Compact View <Switch defaultChecked={isCompact} onChange={onSwitchLogView} size=\"small\" />\n          </div>\n        </div>\n      )}\n\n      <ul className={bemClassConditionalModifier('log__sections', 'compact', isCompact)}>\n        {song?.sectionsIds?.map((sectionId) => {\n          const section = sections[sectionId];\n\n          if (locked) {\n            return (\n              <LogSection.Distribute\n                key={section.key}\n                section={section}\n                seekAndPlay={seekAndPlay}\n                assignMembers={assignMembers}\n              />\n            );\n          }\n\n          if (isCompact) {\n            return (\n              <LogSection.Compact\n                key={section.key}\n                section={section}\n                onCheckboxChange={onCheckboxChange}\n                seekAndPlay={seekAndPlay}\n              />\n            );\n          }\n\n          return (\n            <LogSection.Edit\n              key={section.key}\n              section={section}\n              onCheckboxChange={onCheckboxChange}\n              onShowModal={onShowModal}\n              seekAndPlay={seekAndPlay}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Log;\n","import React from 'react';\nimport { Avatar as AntAvatar, Image } from 'antd';\n\nfunction Avatar({ name, className, color, size = 'default' }) {\n  const urlPrefix = `${process.env.PUBLIC_URL}/images/members/`;\n  return (\n    <AntAvatar\n      size={size}\n      style={color && { border: `2px solid ${color}` }}\n      src={\n        <Image\n          src={`${urlPrefix}${name.toLowerCase()}.jpg`}\n          fallback={`${urlPrefix}none.jpg`}\n          alt={name}\n          className={className}\n        />\n      }\n    />\n  );\n}\n\nexport default Avatar;\n","import React, { Fragment } from 'react';\n\n// Design Resources\nimport { Badge, Tag, Tooltip } from 'antd';\n\n// Components\nimport Avatar from './Avatar';\n\nfunction Member({\n  member,\n  className = '',\n  showName = false,\n  showPosition = false,\n  progress,\n  count,\n  showProgressNumber = false,\n}) {\n  return (\n    <li className={`member ${className}`}>\n      <Badge count={count}>\n        <Avatar\n          name={member.name}\n          className=\"member-avatar\"\n          style={{ borderColor: member.color ?? 'black' }}\n        />\n      </Badge>\n      <span className=\"member-info\">\n        {showName && <span className=\"member-name\">{member.name}</span>}\n        {showPosition && <span className=\"member__separator\">•</span>}\n        {showPosition && (\n          <span className=\"member-position\">\n            <Tag>{member.positions[0]}</Tag>\n          </span>\n        )}\n      </span>\n      {progress !== undefined && progress !== null && (\n        <Fragment>\n          <Tooltip title={`${progress}%`}>\n            <span className=\"member-progress\">\n              <span\n                className=\"member-progress-bar\"\n                style={{ width: `${progress}%`, backgroundColor: member.color ?? 'white' }}\n              ></span>\n            </span>\n          </Tooltip>\n          {showProgressNumber && <span className=\"member-progress-number\">{progress || 0}%</span>}\n        </Fragment>\n      )}\n    </li>\n  );\n}\n\nexport default Member;\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Button, Divider, Layout, Progress, Spin, Switch, Select, Input } from 'antd';\n// State\nimport useGlobalState from '../states/useGlobalState';\nimport useLoadingState from '../states/useLoadingState';\nimport useDistributorState from '../states/useDistributorState';\nimport { loadSongState } from '../states/functions';\n// Store\nimport store from '../services/store';\n// API\nimport API from '../api';\n// Utilities\nimport { serializeKey } from '../utils/distributor';\nimport { bemClassConditionalModifier } from '../utils';\nimport { DEFAULT_MEMBERS } from '../utils/constants';\n// Components\nimport LoadSongModal from './modals/LoadSongModal';\nimport YoutubeVideo from './distributor/YoutubeVideo';\nimport Log from './log/Log';\nimport Member from './Member';\n\nfunction Distribute() {\n  const history = useHistory();\n  const [isLoading] = useLoadingState('isLoading');\n  const [activeGroup] = useGlobalState('activeGroup');\n  const [activeMembers, setActiveMembers] = useGlobalState('activeMembers');\n  const [song] = useDistributorState('song');\n  const [isFullyLoaded] = useDistributorState('isFullyLoaded');\n  const [loadedLineDistribution, setLoadedDistribution] = useGlobalState('loadedLineDistribution');\n  const [lineDistribution, setLineDistribution] = useGlobalState('lineDistribution');\n  const [parts] = useDistributorState('parts');\n  const [stats, setStats] = useGlobalState('stats');\n\n  const [distributionName, setDistributionName] = useState(loadedLineDistribution?.name || '');\n\n  // Run on mount\n  useEffect(() => {\n    // Redirect if there is no active group\n    if (!activeGroup) {\n      history.push('/groups');\n    }\n\n    // Load members\n    async function loadMembers() {\n      const members = await store.getCollection('members', true);\n      setActiveMembers({ ...members, ...DEFAULT_MEMBERS });\n    }\n    loadMembers();\n  }, []);\n\n  // Load line distribution if one exists\n  useEffect(() => {\n    async function loadContent() {\n      await loadSongState(loadedLineDistribution.songId);\n    }\n\n    if (loadedLineDistribution?.id) {\n      loadContent();\n    }\n  }, [loadedLineDistribution?.id, loadedLineDistribution?.songId]);\n\n  if (!activeGroup) {\n    return <Spin size=\"large\" />;\n  }\n\n  const resetDistribution = () => {\n    setLineDistribution({});\n    setStats({});\n    setDistributionName('');\n  };\n\n  const updateName = (event) => {\n    setDistributionName(event.target.value);\n  };\n\n  const saveDistribution = async (values) => {\n    try {\n      const response = await API.saveDistribution({\n        id: loadedLineDistribution?.id ?? null,\n        type: 'distribution',\n        name: distributionName || loadedLineDistribution.name || 'original',\n        songId: song.id,\n        songTitle: song.title,\n        groupId: activeGroup.id,\n        assignedParts: lineDistribution,\n        stats,\n      });\n\n      setLoadedDistribution(response);\n    } catch (_) {}\n  };\n\n  const distributionCompletion = Math.floor(\n    (100 * Object.keys(lineDistribution ?? {}).length) / Object.keys(parts ?? {}).length\n  );\n\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main distribute\">\n        <h1>Distribute{song ? `: ${song.title}` : ''}</h1>\n        <div className=\"distribute__actions\">\n          <LoadSongModal onBeforeLoad={resetDistribution} />\n        </div>\n\n        {isFullyLoaded && (\n          <Fragment>\n            <DistributeWidget\n              members={activeMembers}\n              distributionCompletion={distributionCompletion}\n              resetDistribution={resetDistribution}\n            />\n\n            <div className=\"distribute__actions\">\n              <Input\n                placeholder=\"original\"\n                disabled={isLoading}\n                onChange={updateName}\n                className=\"distribute__actions-input\"\n              />\n              <Button\n                type=\"primary\"\n                onClick={saveDistribution}\n                disabled={isLoading || distributionCompletion < 100}\n              >\n                {loadedLineDistribution?.id ? 'Update' : 'Save'} Distribution\n              </Button>\n            </div>\n          </Fragment>\n        )}\n      </main>\n    </Layout.Content>\n  );\n}\n\nfunction DistributeWidget({ members, distributionCompletion, resetDistribution }) {\n  const [isLoading] = useLoadingState('isLoading');\n  const [activeGroup] = useGlobalState('activeGroup');\n  const [lineDistribution, setLineDistribution] = useGlobalState('lineDistribution');\n  const [parts] = useDistributorState('parts');\n  const [stats, setStats] = useGlobalState('stats');\n\n  const [selectedMember, setSelectedMember] = useState({});\n  const [isAbsoluteProgress, setAbsoluteProgress] = useState(false);\n  const [progressType, setProgressType] = useState('');\n\n  const playerRef = useRef();\n\n  useEffect(() => {\n    let total = 0;\n    let totalAll = 0;\n    let totalAllNone = 0;\n    let max = 0;\n    let maxAll = 0;\n    let maxAllNone = 0;\n    const newStats = {};\n    // Calculate progress, max, counts\n    Object.entries(lineDistribution).forEach(([partId, memberKeysObj]) => {\n      const part = parts[partId];\n      const partDuration = part.duration ?? 0;\n      const membersKeys = Object.keys(memberKeysObj);\n\n      if (membersKeys.length === 1 && memberKeysObj['member::NONE']) {\n        totalAllNone += partDuration;\n      } else if (membersKeys.length === 1 && memberKeysObj['member::ALL']) {\n        totalAllNone += partDuration;\n        totalAll += partDuration;\n      } else {\n        totalAllNone += partDuration;\n        totalAll += partDuration;\n        total += partDuration;\n      }\n\n      // Calculate progress and count\n      membersKeys.forEach((memberKey) => {\n        if (newStats[memberKey] === undefined) {\n          newStats[memberKey] = {\n            count: 0,\n            total: 0,\n            totalAll: 0,\n            totalAllNone: 0,\n            relativeProgress: 0,\n            relativeProgressAll: 0,\n            relativeProgressAllNone: 0,\n            absoluteProgress: 0,\n            absoluteProgressAll: 0,\n            absoluteProgressAllNone: 0,\n            lines: [],\n          };\n        }\n        // Add member count (only new lines)\n        if (!newStats[memberKey].lines.includes(part.lineId)) {\n          newStats[memberKey].count += 1;\n          newStats[memberKey].lines.push(part.lineId);\n        }\n        // Add member total\n        newStats[memberKey].total += partDuration;\n        newStats[memberKey].totalAll += partDuration;\n        newStats[memberKey].totalAllNone += partDuration;\n        // Recalculate max\n        if (memberKey === 'member::NONE') {\n          maxAllNone =\n            newStats[memberKey].totalAllNone > maxAllNone ? newStats[memberKey].totalAllNone : maxAllNone;\n        } else if (memberKey === 'member::ALL') {\n          maxAllNone =\n            newStats[memberKey].totalAllNone > maxAllNone ? newStats[memberKey].totalAllNone : maxAllNone;\n          maxAll = newStats[memberKey].totalAll > maxAll ? newStats[memberKey].totalAll : maxAll;\n        } else {\n          maxAllNone =\n            newStats[memberKey].totalAllNone > maxAllNone ? newStats[memberKey].totalAllNone : maxAllNone;\n          maxAll = newStats[memberKey].totalAll > maxAll ? newStats[memberKey].totalAll : maxAll;\n          max = newStats[memberKey].total > max ? newStats[memberKey].total : max;\n        }\n      });\n    });\n    // Calculate member progress\n    Object.keys(newStats).forEach((key) => {\n      newStats[key].relativeProgress = Math.round((100 * newStats[key].total) / max);\n      newStats[key].relativeProgressAll = Math.round((100 * newStats[key].totalAll) / maxAll);\n      newStats[key].relativeProgressAllNone = Math.round((100 * newStats[key].totalAllNone) / maxAllNone);\n      newStats[key].absoluteProgress = Math.round((100 * newStats[key].total) / total);\n      newStats[key].absoluteProgressAll = Math.round((100 * newStats[key].totalAll) / totalAll);\n      newStats[key].absoluteProgressAllNone = Math.round((100 * newStats[key].totalAllNone) / totalAllNone);\n    });\n\n    setStats(newStats);\n  }, [lineDistribution, parts, setStats]);\n\n  const seekAndPlay = (timestamp) => {\n    playerRef?.current?.internalPlayer?.seekTo(timestamp);\n    playerRef?.current?.internalPlayer?.playVideo();\n  };\n\n  const toggleMember = (memberKey) => {\n    setSelectedMember((state) => (state === memberKey ? null : memberKey));\n  };\n\n  const assignMembers = (partId) => {\n    setLineDistribution((state) => {\n      const part = { ...state[partId] };\n      if (part[selectedMember]) {\n        delete part[selectedMember];\n      } else {\n        part[selectedMember] = true;\n      }\n\n      if (!Object.keys(part).length) {\n        const result = { ...state };\n        delete result[partId];\n        return result;\n      }\n      return { ...state, [partId]: part };\n    });\n  };\n\n  const onProgressTypeChange = (key) => {\n    setProgressType(key);\n  };\n\n  return (\n    <div className=\"distribute__container\">\n      <div className=\"distribute-options\">\n        <YoutubeVideo playerRef={playerRef} width=\"320\" height=\"180\" className=\"distribute-options__video\" />\n        <div className=\"distribute__controls\">\n          <div>\n            Progress Bar Type{' '}\n            <Select defaultValue=\"\" onChange={onProgressTypeChange}>\n              <Select.Option value=\"\">Members only</Select.Option>\n              <Select.Option value=\"All\">Include ALL lines</Select.Option>\n              <Select.Option value=\"AllNone\">Include All and None lines</Select.Option>\n            </Select>\n          </div>\n          <div>\n            Absolute Progress{' '}\n            <Switch\n              defaultChecked={isAbsoluteProgress}\n              onChange={(checked) => setAbsoluteProgress(checked)}\n              size=\"small\"\n            />\n          </div>\n        </div>\n        <ul className=\"members-selection\">\n          {Object.values(DEFAULT_MEMBERS).map((member) => {\n            const memberStats = stats?.[member.key] ?? {};\n            const progress = isAbsoluteProgress\n              ? memberStats?.[`absoluteProgress${progressType}`]\n              : memberStats?.[`relativeProgress${progressType}`];\n            return (\n              <MemberSelection\n                key={`member-selection-${member.key}`}\n                member={member}\n                selectedMember={selectedMember}\n                toggleMember={toggleMember}\n                progress={progress}\n              />\n            );\n          })}\n          <Divider />\n          {activeGroup.membersIds &&\n            members &&\n            activeGroup.membersIds.map((memberId) => {\n              const member = members[serializeKey('member', memberId)] ?? {};\n              const memberStats = stats?.[member.key] ?? {};\n              const progress = isAbsoluteProgress\n                ? memberStats?.[`absoluteProgress${progressType}`]\n                : memberStats?.[`relativeProgress${progressType}`];\n              return (\n                <MemberSelection\n                  key={`member-selection-${member.key}`}\n                  member={member}\n                  selectedMember={selectedMember}\n                  toggleMember={toggleMember}\n                  progress={progress}\n                  count={stats?.[member.key]?.count}\n                />\n              );\n            })}\n        </ul>\n        <Divider />\n        <Progress percent={distributionCompletion} className=\"distribute__line-distribution-completion\" />\n        <div className=\"distribute__controls\">\n          <Button type=\"default\" onClick={resetDistribution} disabled={isLoading}>\n            Reset Distribution\n          </Button>\n        </div>\n      </div>\n      <Log\n        seekAndPlay={seekAndPlay}\n        className=\"distribute-log\"\n        defaultCompactSetting\n        locked\n        assignMembers={assignMembers}\n      />\n    </div>\n  );\n}\n\nfunction MemberSelection({ member, selectedMember, toggleMember, progress = 0, count = 0 }) {\n  return (\n    <Button\n      key={`button-${member.id}`}\n      type=\"text\"\n      className={bemClassConditionalModifier(\n        'distribute-member-button',\n        'selected',\n        selectedMember === member.key\n      )}\n      onClick={() => toggleMember(member.key)}\n    >\n      <Member\n        member={member}\n        showName\n        showPosition\n        isSelected\n        progress={progress}\n        count={count}\n        className=\"member-component\"\n        showProgressNumber\n      />\n    </Button>\n  );\n}\n\nexport default Distribute;\n","import React from 'react';\n\n// Design Resources\nimport { Steps } from 'antd';\n// Components\nconst { Step } = Steps;\n\nfunction StepperProgress({ currentStep }) {\n  return (\n    <Steps progressDot current={Number(currentStep)} className=\"stepper-progress\">\n      <Step title=\"Load Song\" />\n      <Step title=\"Lyrics & Sections\" />\n      <Step title=\"Time & Sync\" />\n      <Step title=\"Preview\" />\n      <Step title=\"Song Metadata\" />\n      <Step title=\"Save\" />\n    </Steps>\n  );\n}\n\nexport default StepperProgress;\n","import React, { useCallback } from 'react';\n\n// Design Resources\nimport { Input } from 'antd';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport { Song } from '../../utils/distributor';\n// Components\nimport LoadSongModal from '../modals/LoadSongModal';\n\nfunction LoadSong() {\n  const [, setSong] = useDistributorState('song');\n  const [, setStep] = useDistributorState('step');\n  const [videoId, setVideoId] = useDistributorState('videoId');\n\n  const onAddVideoId = useCallback(\n    (event) => {\n      const { value } = event.target;\n      setVideoId(value);\n      setSong(new Song({ videoId: value }));\n      setStep('1');\n    },\n    [setSong, setStep, setVideoId]\n  );\n\n  return (\n    <div className=\"load-song\">\n      <h2 className=\"load-song__title\">Load Song</h2>\n      <Input\n        addonBefore=\"https://www.youtube.com/watch?v=\"\n        defaultValue={videoId}\n        onPressEnter={onAddVideoId}\n        placeholder=\"Insert Youtube video id\"\n      />\n      <span className=\"load-song__separator\">or</span>\n      <LoadSongModal />\n    </div>\n  );\n}\n\nexport default LoadSong;\n","import React, { useCallback, useState } from 'react';\n\n// Design Resources\nimport { Button, Divider, Input, Typography } from 'antd';\nimport { DatabaseFilled, MessageFilled, NotificationFilled } from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport { Section, Line, Part, generateUniqueId } from '../../utils/distributor';\n// Components\nimport Log from '../log/Log';\nconst { Paragraph } = Typography;\n\nfunction LyricsAndSections() {\n  const [, setLines] = useDistributorState('lines');\n  const [, setParts] = useDistributorState('parts');\n  const [, setSections] = useDistributorState('sections');\n  const [song] = useDistributorState('song');\n  const [, setStep] = useDistributorState('step');\n\n  const [isBuiltOnce, setIsBuiltOnce] = useState(Boolean(song.id));\n  const [textarea, setTextarea] = useState('Sample lyrics\\nSample |lyrics\\n\\nSampleLyrics');\n\n  const onTextareaChange = useCallback(\n    (e) => {\n      const { value } = e.target;\n      setTextarea(value);\n    },\n    [setTextarea]\n  );\n\n  const buildSections = useCallback(() => {\n    setSections([]);\n    setLines([]);\n    setParts([]);\n\n    // Remove double spaces and first line and last line line breaks\n    const filteredTextarea = textarea.split('\\n').filter((entry, index, list) => {\n      const line = entry.trim();\n      // Empty lines\n      if (line === '') {\n        // First line\n        if (index === 0) return false;\n        // Last line is empty\n        else if (index === list.length - 1) return false;\n        // Double empty lines\n        else if (list[index - 1]?.trim() === '') return false;\n      }\n      return true;\n    });\n\n    const tempSections = [];\n    let tempSection = [];\n    let newSectionId = generateUniqueId();\n\n    filteredTextarea.forEach((entry, index, list) => {\n      const line = entry.trim();\n      if (line === '') {\n        const newSection = new Section({ id: newSectionId, linesIds: tempSection, songId: song.id });\n        tempSections.push(newSection);\n        tempSection = [];\n        newSectionId = generateUniqueId();\n      } else {\n        const newLine = new Line();\n        // Split lines, create a part for each\n        const parts = entry\n          .split('|')\n          .map((part) => {\n            const text = part?.trim() ?? '';\n            if (text) {\n              return new Part({ text: text.trim(), lineId: newLine.id });\n            }\n            return null;\n          })\n          .filter((i) => i);\n\n        newLine.deserialize({ placeholder: entry, partsIds: parts, sectionId: newSectionId });\n        tempSection.push(newLine);\n      }\n\n      if (index === list.length - 1 && tempSection.length) {\n        const newSection = new Section({\n          id: newSectionId,\n          linesIds: tempSection,\n          sectionId: newSectionId,\n          songId: song.id,\n        });\n        tempSections.push(newSection);\n      }\n    });\n\n    song.deserialize({ sectionsIds: tempSections });\n\n    setIsBuiltOnce(true);\n  }, [setLines, setParts, setSections, song, textarea]);\n\n  const rebuildSections = useCallback(() => {\n    const confirmation = window.confirm('Are you sure you want to rebuild sections for this song?');\n    if (confirmation) {\n      buildSections({});\n    }\n  }, [buildSections]);\n\n  return (\n    <section className=\"lyrics-and-sections\">\n      <h2 className=\"lyrics-and-sections__title\">Add Lyrics</h2>\n\n      <Paragraph>Paste the lyrics and press enter to auto generate the sections and lines.</Paragraph>\n      <Paragraph>\n        An line break creates a Line, a double line break generates a Section, and | generates parts.\n      </Paragraph>\n      <Paragraph>\n        Click on each Section {<DatabaseFilled />}, Line {<MessageFilled />}, and Part{' '}\n        {<NotificationFilled />} to edit their options\n      </Paragraph>\n\n      <div className=\"lyrics-and-sections__container\">\n        <Input.TextArea\n          placeholder=\"Insert lyrics here\"\n          className=\"lyrics-and-sections__textarea\"\n          onChange={onTextareaChange}\n          defaultValue={textarea}\n          disabled={song?.id}\n        />\n        <Log className=\"lyrics-and-sections__log\" defaultCompactSetting={false} />\n      </div>\n\n      <div className=\"lyrics-and-sections__action\">\n        {isBuiltOnce && (\n          <Paragraph type=\"danger\">\n            Rebuilding Sections is destruction and will reset all details you might have enter to Sections,\n            Lines, and Parts.\n          </Paragraph>\n        )}\n        <Button\n          type={isBuiltOnce ? 'default' : 'primary'}\n          danger={isBuiltOnce}\n          onClick={Boolean(song.id) ? rebuildSections : buildSections}\n          disabled={!textarea.length}\n        >\n          {isBuiltOnce ? 'Rebuild' : 'Build'} Sections\n        </Button>\n      </div>\n\n      <Divider />\n\n      {isBuiltOnce && (\n        <div className=\"lyrics-and-sections__action\">\n          <Button type=\"primary\" onClick={() => setStep('2')}>\n            Next Step: Time & Sync\n          </Button>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default LyricsAndSections;\n","import React from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Select, Divider } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n// Engine and utilities\nimport { SECTION } from '../../utils/distributor';\n\nfunction OptionsSection({ section, onValuesChange }) {\n  const initialValues = {\n    text: section.text,\n    number: section.number,\n    kind: section.kind,\n    linesTotal: section.linesIds.length,\n  };\n\n  return (\n    <Form\n      layout=\"vertical\"\n      name=\"options-section\"\n      initialValues={initialValues}\n      onValuesChange={onValuesChange}\n      className=\"modal-options-form\"\n      autoComplete=\"off\"\n      preserve={false}\n    >\n      <Form.Item label=\"Type\" name=\"kind\" valuePropName=\"checked\" className=\"modal-options-form__item\">\n        <Select defaultValue={section.kind}>\n          {Object.values(SECTION).map((entry) => (\n            <Select.Option key={entry} value={entry}>\n              {entry}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <div className=\"modal-options-form__items modal-options-form__items--2\">\n        <Form.Item\n          label=\"Number\"\n          name=\"number\"\n          className=\"modal-options-form__item\"\n          help=\"This number will be automatically generated when locking the song.\"\n        >\n          <InputNumber min={1} disabled />\n        </Form.Item>\n\n        <Form.Item label=\"Line Count\" name=\"linesTotal\" className=\"modal-options-form__item\">\n          <InputNumber disabled />\n        </Form.Item>\n      </div>\n\n      <Form.Item\n        label=\"Lyrics\"\n        name=\"text\"\n        className=\"modal-options-form__item\"\n        help=\"Collection of lyrics from all lines and parts.\"\n      >\n        <Input.TextArea disabled placeholder=\"No lyrics available yet\" />\n      </Form.Item>\n\n      <Divider />\n\n      <Form.Item\n        label=\"\"\n        name=\"text\"\n        className=\"modal-options-form__action-button\"\n        help=\"Permanently delete this entire section.\"\n      >\n        <Button type=\"primary\" disabled onClick={() => {}} danger icon={<DeleteOutlined />}>\n          Delete This Section\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default OptionsSection;\n","import React, { useState, useCallback } from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Switch, Select, Divider } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n// Engine and utilities\nimport { SKILL, SKILL_LEVEL, SKILL_TYPE } from '../../utils/distributor';\n\nfunction OptionsLine({ line, onValuesChange }) {\n  const [skill, setSkill] = useState(line?.skill ?? SKILL.VOCAL);\n\n  const onSkillChange = useCallback((value) => {\n    setSkill(value);\n  }, []);\n\n  const initialValues = {\n    text: line.text,\n    skill: line.skill,\n    skillType: line.skillType,\n    skillLevel: line.skillLevel,\n    isDismissible: line.isDismissible,\n    partsTotal: line.partsIds.length,\n  };\n\n  const skillTypes = SKILL_TYPE[skill];\n\n  return (\n    <Form\n      layout=\"vertical\"\n      name=\"options-line\"\n      initialValues={initialValues}\n      onValuesChange={onValuesChange}\n      className=\"modal-options-form\"\n      autoComplete=\"off\"\n      preserve={false}\n    >\n      <div className=\"modal-options-form__items modal-options-form__items--3\">\n        <Form.Item label=\"Skill\" name=\"skill\" valuePropName=\"checked\" className=\"modal-options-form__item\">\n          <Select onChange={onSkillChange} defaultValue={line.skill}>\n            {Object.values(SKILL).map((entry) => (\n              <Select.Option key={entry} value={entry}>\n                {entry}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Skill Type\"\n          name=\"skillType\"\n          valuePropName=\"checked\"\n          className=\"modal-options-form__item\"\n        >\n          <Select defaultValue={line.skillType}>\n            {Object.values(skillTypes).map((entry) => (\n              <Select.Option key={entry} value={entry}>\n                {entry}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Skill Level\"\n          name=\"skillLevel\"\n          valuePropName=\"checked\"\n          className=\"modal-options-form__item\"\n        >\n          <Select defaultValue={line.skillLevel}>\n            {Object.values(SKILL_LEVEL).map((entry) => (\n              <Select.Option key={entry} value={entry}>\n                {entry}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </div>\n\n      <div className=\"modal-options-form__items modal-options-form__items--2\">\n        <Form.Item\n          label=\"Dismissible\"\n          name=\"isDismissible\"\n          className=\"modal-options-form__item\"\n          valuePropName=\"checked\"\n          help=\"Dismissible lines are lines that do not need to be displayed, usually vocalizing parts and some ad-libs.\"\n        >\n          <Switch />\n        </Form.Item>\n\n        <Form.Item label=\"Parts Count\" name=\"partsTotal\" className=\"modal-options-form__item\">\n          <InputNumber disabled />\n        </Form.Item>\n      </div>\n\n      <Form.Item\n        label=\"Lyrics\"\n        name=\"text\"\n        className=\"modal-options-form__item\"\n        help=\"Collection of lyrics from all parts.\"\n      >\n        <Input disabled placeholder=\"No lyrics available yet\" />\n      </Form.Item>\n\n      <Divider />\n\n      <Form.Item\n        label=\"\"\n        name=\"text\"\n        className=\"modal-options-form__action-button\"\n        help=\"Permanently delete this entire line.\"\n      >\n        <Button type=\"primary\" disabled onClick={() => {}} danger icon={<DeleteOutlined />}>\n          Delete This Line\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default OptionsLine;\n","import React, { useState } from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Divider, Radio } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n// Engine and utilities\nimport { ASSIGNEE, ASSIGNEE_LABEL } from '../../utils/distributor';\n\nconst ASSIGNEE_OPTIONS = Object.values(ASSIGNEE).map((i) => ({ value: i, label: ASSIGNEE_LABEL[i] }));\n\nfunction OptionsPart({ part, onValuesChange }) {\n  const [tempAssignee, setTempAssignee] = useState(part.assignee);\n\n  const initialValues = {\n    text: part.text,\n    assignee: part.assignee,\n    startTime: part.startTime,\n    endTime: part.endTime,\n    lineId: part.lineId,\n  };\n\n  const formClass = `modal-options-form modal-options-form--assignee-${tempAssignee}`;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      name=\"options-line\"\n      initialValues={initialValues}\n      onValuesChange={onValuesChange}\n      className={formClass}\n      autoComplete=\"off\"\n      preserve={false}\n    >\n      <Form.Item\n        label=\"Assignee\"\n        name=\"assignee\"\n        className=\"modal-options-form__item\"\n        help=\"This is just a reference if the next part could or should be sung by a different person. Keep it semantic! Use A and B for vocals, C and D for raps, E and F for Ad-libs, G for All, and H\n        for None.\"\n      >\n        <Radio.Group\n          options={ASSIGNEE_OPTIONS}\n          optionType=\"button\"\n          className=\"assignees-radio-group\"\n          onChange={(e) => setTempAssignee(e.target.value)}\n        />\n      </Form.Item>\n\n      <Form.Item label=\"Lyrics\" name=\"text\" className=\"modal-options-form__item\">\n        <Input />\n      </Form.Item>\n\n      <div className=\"modal-options-form__items modal-options-form__items--3\">\n        <Form.Item label=\"Start Time\" name=\"startTime\" className=\"modal-options-form__item\">\n          <InputNumber />\n        </Form.Item>\n\n        <Form.Item label=\"End Time\" name=\"endTime\" className=\"modal-options-form__item\">\n          <InputNumber />\n        </Form.Item>\n\n        <Form.Item label=\"LineId\" name=\"lineId\" className=\"modal-options-form__item\">\n          <Input disabled />\n        </Form.Item>\n      </div>\n\n      <Divider />\n\n      <Form.Item\n        label=\"\"\n        name=\"text\"\n        className=\"modal-options-form__action-button\"\n        help=\"Permanently delete this entire part.\"\n      >\n        <Button type=\"primary\" disabled onClick={() => {}} danger icon={<DeleteOutlined />}>\n          Delete This Part\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default OptionsPart;\n","import React, { useState, useCallback } from 'react';\n\n// Design Resources\nimport { Divider, Modal, Progress } from 'antd';\n// Components\nimport OptionsSection from './OptionsSection';\nimport OptionsLine from './OptionsLine';\nimport OptionsPart from './OptionsPart';\n\nfunction ModalOptions({ activeInstance, setActiveInstance }) {\n  const [tempData, setTempData] = useState({});\n\n  const onCancelModal = () => {\n    setActiveInstance(null);\n  };\n\n  const onSaveModal = useCallback(() => {\n    activeInstance.deserialize(tempData);\n    setTempData({});\n    setActiveInstance(null);\n  }, [activeInstance, tempData, setTempData, setActiveInstance]);\n\n  const onFormChange = useCallback((data) => {\n    setTempData((state) => ({ ...state, ...data }));\n  }, []);\n\n  if (!activeInstance) return <span></span>;\n\n  const id = activeInstance?.id;\n  const type = activeInstance?.type;\n\n  const title =\n    {\n      part: `Part \"${activeInstance.text}\" Options`,\n      line: `Line \"${activeInstance.text}\" Options`,\n      section: `Section ${activeInstance?.name ?? id} Options`,\n      song: `Song ${id} Options`,\n    }[type] ?? 'Unknown';\n\n  return (\n    <Modal\n      title={title}\n      visible={Boolean(activeInstance)}\n      onOk={onSaveModal}\n      okText=\"Save\"\n      onCancel={onCancelModal}\n    >\n      {type === 'section' && <OptionsSection section={activeInstance} onValuesChange={onFormChange} />}\n      {type === 'line' && <OptionsLine line={activeInstance} onValuesChange={onFormChange} />}\n      {type === 'part' && <OptionsPart part={activeInstance} onValuesChange={onFormChange} />}\n      <Divider />\n      <Progress percent={activeInstance.completion} />\n    </Modal>\n  );\n}\n\nexport default ModalOptions;\n","import React, { useEffect } from 'react';\n\n// Design Resources\nimport { Button } from 'antd';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport { ASSIGNEE, ASSIGNEE_LABEL, convertStoMS, generateTempId } from '../../utils/distributor';\nimport { useKeyDown, useKeyUp } from '../../utils/useKeypress';\nimport { KEYS, KEY_ASSIGNEE } from '../../utils/constants';\n\n// These variables are not using state since setState is asynchronous and is messing up with the time tracking\nlet playing = false;\n\nconst temp = {\n  keyPressing: {},\n  part: {},\n};\n\nasync function handleActionDown(key, playerRef, assignee) {\n  // Don't run if video is not playing\n  if (!playing) return;\n  // Don't run if this key is being captured\n  if (temp.keyPressing[key]) return;\n  // Don't run if a part for this key is present\n  if (temp.part[key]) return;\n  // Not allowed key\n  if (!KEY_ASSIGNEE[key]) return;\n\n  temp.keyPressing[key] = true;\n  const newTimestamp = {\n    startTime: convertStoMS(await playerRef.current.internalPlayer.getCurrentTime()),\n    assignee: key === ' ' ? assignee : KEY_ASSIGNEE[key],\n    partId: null,\n    id: generateTempId(),\n  };\n\n  temp.part[key] = newTimestamp;\n}\n\nasync function handleActionUp(key, playerRef) {\n  // Don't run if video is not playing\n  if (!playing) return;\n  // Don't run if key is not being captured\n  if (!temp.keyPressing[key]) return;\n  // Don't run if a part is not present\n  if (!temp.part[key]) return;\n  // Not allowed key\n  if (!KEY_ASSIGNEE[key]) return;\n\n  temp.part[key].endTime = convertStoMS(await playerRef.current.internalPlayer.getCurrentTime());\n\n  const copy = { ...temp.part[key] };\n  temp.part[key] = null;\n  temp.keyPressing[key] = null;\n  return copy;\n}\n\nconst ASSIGNEE_OPTIONS = Object.values(ASSIGNEE ?? {}).map((i) => ({ value: i, label: ASSIGNEE_LABEL[i] }));\n\nfunction MouseButtons({ playerRef, isPlaying }) {\n  const [assignee] = useDistributorState('assignee');\n  const [, setUnassignedTimestamps] = useDistributorState('unassignedTimestamps');\n\n  // Work around since useKeyDown is not capturing isPlaying correctly\n  useEffect(() => {\n    playing = isPlaying;\n  }, [isPlaying]);\n\n  // Capture Button Down\n  const onCaptureButtonDown = async (key) => {\n    await handleActionDown(key, playerRef, assignee);\n  };\n\n  const onCaptureButtonUp = async (key) => {\n    const result = await handleActionUp(key, playerRef);\n\n    if (result?.endTime) {\n      setUnassignedTimestamps((state) => {\n        state[result.id] = { ...result };\n        return state;\n      });\n    }\n  };\n\n  return (\n    <div className=\"key-capture-capture-buttons distributor-controls__buttons\">\n      {ASSIGNEE_OPTIONS.map((entry, index) => (\n        <Button\n          key={entry.value}\n          onClick={() => {}}\n          className={`distributor-controls__button assignee-background--${entry.value}`}\n          onMouseDown={() => onCaptureButtonDown(entry.value)}\n          onMouseUp={() => onCaptureButtonUp(entry.value)}\n        >\n          {index + 1} ({entry.label})\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nfunction Keyboard({ playerRef, isPlaying }) {\n  const [assignee] = useDistributorState('assignee');\n  const [, setUnassignedTimestamps] = useDistributorState('unassignedTimestamps');\n\n  // Work around since useKeyDown is not capturing isPlaying correctly\n  useEffect(() => {\n    playing = isPlaying;\n  }, [isPlaying]);\n\n  // Capture SPACE key down\n  useKeyDown(KEYS, async (key) => {\n    await handleActionDown(key, playerRef, assignee);\n  });\n\n  // Capture SPACE key up\n  useKeyUp(KEYS, async (key) => {\n    const result = await handleActionUp(key, playerRef);\n\n    if (result?.endTime) {\n      setUnassignedTimestamps((state) => {\n        state[result.id] = { ...result };\n        return state;\n      });\n    }\n  });\n\n  return <div className=\"distributor-grid__key-capture key-capture\" />;\n}\n\nconst KeyCapture = {\n  Keyboard,\n  MouseButtons,\n};\n\nexport default KeyCapture;\n","import { useEffect } from 'react';\n\n/**\n * useKeyUp\n * @param {string[]} keys - the name of the keys to respond to, compared against event.key\n * @param {function} action - the action to perform on key up\n */\nexport function useKeyUp(keys, action) {\n  useEffect(() => {\n    function onKeyup(e) {\n      if (keys.includes(e.key)) action(e.key);\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => window.removeEventListener('keyup', onKeyup);\n  }, []);\n}\n\n/**\n * useKeyUp\n * @param {string[]} keys - the name of the keys to respond to, compared against event.key\n * @param {function} action - the action to perform on key down\n */\nexport function useKeyDown(keys, action) {\n  useEffect(() => {\n    function onKeyDown(e) {\n      if (keys.includes(e.key)) action(e.key);\n    }\n    window.addEventListener('keydown', onKeyDown);\n    return () => window.removeEventListener('keydown', onKeyDown);\n  }, []);\n}\n","import React, { useCallback } from 'react';\n\n// Design Resources\nimport { Button, Radio } from 'antd';\nimport { PlayCircleOutlined } from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport KeyCapture from './KeyCapture';\nimport { ASSIGNEE, ASSIGNEE_LABEL } from '../../utils/distributor';\n\nconst ASSIGNEE_OPTIONS = Object.values(ASSIGNEE ?? {}).map((i) => ({ value: i, label: ASSIGNEE_LABEL[i] }));\n\nfunction Controls({ playerRef, playVideo, pauseVideo, isPlaying }) {\n  const [isRecording, setIsRecording] = useDistributorState('isRecording');\n  const [assignee, setAssignee] = useDistributorState('assignee');\n\n  const onRadioGroupChange = useCallback(\n    (e) => {\n      setAssignee(e.target.value);\n    },\n    [setAssignee]\n  );\n\n  const toggleRecording = useCallback(\n    (e) => {\n      if (isRecording) {\n        pauseVideo();\n        setIsRecording(false);\n      } else {\n        playVideo();\n        setIsRecording(true);\n        e.currentTarget.blur();\n      }\n    },\n    [isRecording, pauseVideo, playVideo, setIsRecording]\n  );\n\n  return (\n    <div className=\"distributor-grid__controls distributor-controls\">\n      <Button\n        icon={<PlayCircleOutlined />}\n        danger={isRecording}\n        type={isRecording ? 'primary' : null}\n        onClick={toggleRecording}\n        className=\"distributor-controls__record\"\n      >\n        {isRecording ? 'Recording' : 'Record'}\n      </Button>\n      <div className=\"distributor-controls__other-controls\">\n        <h4 className=\"distributor-controls__title\">Active Assignee for SPACE bar</h4>\n\n        <Radio.Group\n          options={ASSIGNEE_OPTIONS}\n          onChange={onRadioGroupChange}\n          value={assignee}\n          optionType=\"button\"\n          className=\"distributor-controls__assignees assignees-radio-group\"\n        />\n        <p className=\"distributor-controls__description\">\n          This indicates what assignee the space bar will assign when recording.\n        </p>\n        <h4 className=\"distributor-controls__title\">Capture Buttons</h4>\n        <p className=\"distributor-controls__description\">\n          Click and hold to record. It allows multiple clicks at the same time. You may also use the number\n          keys on your keyboard.\n        </p>\n        <KeyCapture.MouseButtons playerRef={playerRef} isPlaying={isPlaying} />\n        <p className=\"distributor-controls__description\">\n          Keep it semantic! Use A and B for vocals, C and D for raps, E and F for Ad-libs, G for All, and H\n          for None.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React, { useState, useEffect, useCallback } from 'react';\n\n// Design Resources\nimport { Button } from 'antd';\nimport { ClockCircleOutlined, DeleteFilled } from '@ant-design/icons';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Engine and utilities\nimport { bemClass, getBemModifier, getTimestampDuration } from '../../utils';\nimport { deserializeKey } from '../../utils/distributor';\n\nfunction TimestampsBank() {\n  const [unassignedTimestamps, setUnassignedTimestamps] = useDistributorState('unassignedTimestamps');\n  const [selection, setSelection] = useDistributorState('selection');\n  const [selectedTimestamps, setSelectedTimestamps] = useDistributorState('selectedTimestamps');\n  const [parts] = useDistributorState('parts');\n\n  const [isPointAndClickOn, setIsPointClickOn] = useState(false);\n  const [isOnlyPartsSelection, setIsOnlyPartsSelection] = useState(false);\n  const [isTimestampDeleteOn, setIsTimestampDeleteOn] = useState(false);\n\n  // Check if selection exists and it is only parts\n  useEffect(() => {\n    setIsOnlyPartsSelection(Boolean(selection && selection?.[0]?.startsWith('part')));\n  }, [selection, setIsOnlyPartsSelection]);\n\n  useEffect(() => {\n    if (selectedTimestamps.length === 0) {\n      setIsPointClickOn(false);\n      setIsTimestampDeleteOn(false);\n    }\n  }, [selectedTimestamps]);\n\n  const onToggleTimestampSelection = useCallback(\n    (timestamp, selectedClass) => {\n      setSelectedTimestamps((sts) => {\n        if (selectedClass) {\n          return [...sts].filter((ts) => ts.id !== timestamp.id);\n        }\n        const arr = [...sts];\n        arr.push(timestamp);\n\n        return arr;\n      });\n    },\n    [setSelectedTimestamps]\n  );\n\n  const unassignedTimestampsArray = Object.values(unassignedTimestamps);\n\n  const onToggleSequentialPointAndClick = useCallback(() => {\n    if (isPointAndClickOn) {\n      setSelectedTimestamps([]);\n      setIsPointClickOn(false);\n    } else {\n      setSelectedTimestamps(unassignedTimestampsArray);\n      setIsPointClickOn(true);\n    }\n  }, [isPointAndClickOn, setSelectedTimestamps, unassignedTimestampsArray]);\n\n  const deleteAllUnassignedTimestamps = useCallback(() => {\n    const confirmation = window.confirm('Are you sure you want to delete all unassigned timestamps?');\n    if (confirmation) {\n      setUnassignedTimestamps({});\n    }\n  }, [setUnassignedTimestamps]);\n\n  const onToggleTimestampDelete = useCallback(() => {\n    setIsTimestampDeleteOn((state) => !state);\n  }, []);\n\n  const onTimestampClick = useCallback(\n    (timestamp, selectedClass) => {\n      if (isTimestampDeleteOn) {\n        setUnassignedTimestamps((state) => {\n          const obj = { ...state };\n          delete obj[timestamp.id];\n          return obj;\n        });\n      } else {\n        onToggleTimestampSelection(timestamp, selectedClass);\n      }\n    },\n    [isTimestampDeleteOn, setUnassignedTimestamps, onToggleTimestampSelection]\n  );\n\n  const onPerformLinearSync = useCallback(() => {\n    // Loop through unassigned timestamps and assigned to each selection\n    const complete = unassignedTimestampsArray.map((timestamp, index) => {\n      const partKey = selection[index];\n      const [, partId] = deserializeKey(partKey);\n      const part = parts[partId];\n      part.updateTimestamp(timestamp);\n      return true;\n    });\n\n    if (complete.length === unassignedTimestampsArray.length) {\n      // Deselect all\n      setUnassignedTimestamps({});\n      setSelection([]);\n    }\n  }, [parts, selection, setSelection, setUnassignedTimestamps, unassignedTimestampsArray]);\n\n  return (\n    <div className=\"distributor-grid__timestamps timestamps-bank\">\n      <h4 className=\"timestamps-bank__title\">Available Timestamps ({unassignedTimestampsArray.length})</h4>\n\n      <ul className=\"timestamps-bank__list\">\n        {unassignedTimestampsArray.map((timestamp) => {\n          const selectedIndex = selectedTimestamps?.findIndex((ts) => ts.id === timestamp.id);\n\n          const selectedClass = getBemModifier(selectedIndex !== -1, 'selected');\n\n          const activeClass = getBemModifier(selectedTimestamps[0]?.id === timestamp.id, 'active');\n\n          return (\n            <li key={timestamp.id} className=\"timestamps-bank__item\">\n              <Button\n                shape=\"round\"\n                size=\"small\"\n                icon={isTimestampDeleteOn ? <DeleteFilled /> : <ClockCircleOutlined />}\n                className={bemClass('timestamps-bank__button', selectedClass, activeClass)}\n                onClick={() => onTimestampClick(timestamp, selectedClass)}\n              >\n                {getTimestampDuration(timestamp)} ms\n                {selectedIndex !== -1 && (\n                  <span className=\"timestamps-bank__button-index\">({selectedIndex + 1})</span>\n                )}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4 className=\"timestamps-bank__title\">Syncing Options</h4>\n      <p className=\"timestamps-bank__description\">\n        You may click on a timestamp and then click on a part to attach it automatically.\n      </p>\n      <Button\n        type=\"default\"\n        block\n        disabled={!isOnlyPartsSelection || selection.length !== unassignedTimestampsArray.length}\n        onClick={onPerformLinearSync}\n      >\n        Linear Sync to Selected Parts\n        {isOnlyPartsSelection && `(${selection.length}-${unassignedTimestampsArray.length})`}\n      </Button>\n      <p className=\"timestamps-bank__description\">\n        Select Part checkboxes on the Lyrics on the right. All timestamps will be automatically synced in the\n        order checkboxes were selected.\n      </p>\n      <Button\n        type=\"default\"\n        block\n        onClick={onToggleSequentialPointAndClick}\n        className={isPointAndClickOn ? 'timestamps-bank__point-and-click-button' : ''}\n        disabled={!unassignedTimestampsArray.length}\n      >\n        Sequential Point and Click Sync{isPointAndClickOn && ': ON'}\n      </Button>\n      <p className=\"timestamps-bank__description\">\n        Engine will activate each timestamp in sequence and will select the next timestamp after you click on\n        a part to attach it.\n      </p>\n\n      <Button\n        type=\"default\"\n        danger\n        block\n        onClick={onToggleTimestampDelete}\n        className={isTimestampDeleteOn ? 'timestamps-bank__delete-button' : ''}\n        disabled={!unassignedTimestampsArray.length}\n      >\n        Toggle Timestamp Deletion\n      </Button>\n      <p className=\"timestamps-bank__description\">Instantly delete timestamps by clicking on them.</p>\n      <Button\n        type=\"primary\"\n        danger\n        block\n        onClick={deleteAllUnassignedTimestamps}\n        disabled={!unassignedTimestampsArray.length}\n      >\n        Delete All Unassigned Timestamps\n      </Button>\n      <p className=\"timestamps-bank__description\">Deletes all unassigned timestamps at once. Be careful.</p>\n    </div>\n  );\n}\n\nexport default TimestampsBank;\n","import React from 'react';\n\n// Design Resources\nimport { Button, Divider, Progress, Tooltip } from 'antd';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Components\nimport KeyCapture from './KeyCapture';\nimport Log from '../log/Log';\nimport Controls from './Controls';\nimport TimestampsBank from './TimestampsBank';\nimport YoutubeVideo from './YoutubeVideo';\n\nfunction TimeAndSync({ playerRef, playVideo, pauseVideo, seekAndPlay }) {\n  const [isRecording] = useDistributorState('isRecording');\n  const [song] = useDistributorState('song');\n  const [step, setStep] = useDistributorState('step');\n  const [isPlaying] = useDistributorState('isPlaying');\n\n  return (\n    <section className=\"distributor-grid time-and-sync\">\n      {isRecording && <KeyCapture.Keyboard playerRef={playerRef} isPlaying={isPlaying} />}\n\n      {step === '2' && (\n        <YoutubeVideo\n          playerRef={playerRef}\n          width=\"320\"\n          height=\"180\"\n          className=\"distributor-grid__video-container\"\n        />\n      )}\n\n      <Controls playerRef={playerRef} playVideo={playVideo} pauseVideo={pauseVideo} />\n\n      <TimestampsBank />\n\n      <Log seekAndPlay={seekAndPlay} className=\"distributor-grid__log log-full-width\" />\n\n      <div className=\"distributor-grid__actions\">\n        <Divider />\n        <Tooltip title=\"Sections Completion Rate\">\n          <Progress percent={song?.relationshipsCompletion} />\n        </Tooltip>\n        <Divider />\n        <div className=\"time-and-sync__action\">\n          <Button type=\"primary\" onClick={() => setStep('3')}>\n            Next Step: Preview\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default TimeAndSync;\n","class ChartEntry {\n  constructor({ key, position }) {\n    this.key = key;\n    this.value = 0;\n    this.on = false;\n    this.percentage = 0;\n    this.position = position;\n  }\n}\n\nexport default ChartEntry;\n","class DistributedPart {\n  constructor({\n    id,\n    text,\n    startTime,\n    endTime,\n    duration,\n    assignee,\n    membersIds,\n    lineId,\n    sectionId,\n    isDismissible = false,\n  }) {\n    this.id = id;\n    this.type = 'distributed-part';\n    this.text = text;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.duration = duration;\n    this.lineId = lineId;\n    this.sectionId = sectionId;\n    this.isDismissible = isDismissible;\n    this.assignees =\n      Array.isArray(membersIds) && membersIds.length\n        ? membersIds\n        : Array.isArray(assignee) && assignee.length\n        ? assignee\n        : ['NONE'];\n  }\n}\n\nexport default DistributedPart;\n","class LineEntry {\n  constructor({ lineId, startTime }) {\n    this.lineId = lineId;\n    this.sectionId = null;\n    this.partsIds = [];\n    this.text = [];\n    this.assignees = [];\n    this.startTime = startTime;\n  }\n\n  add(part) {\n    this.partsIds.push(part.id);\n    this.sectionId = part.sectionId;\n    this.text.push(part.text);\n    this.assignees.push(part.assignees.sort().join('+++'));\n    this.startTime = part.startTime < this.startTime ? part.startTime : this.startTime;\n  }\n\n  // Condense text and assignees into one if they the assignees are the same\n  cleanup() {\n    if (this.partsIds.length > 1) {\n      if (this.assignees.every((v) => v === this.assignees[0])) {\n        this.text = [this.text.join(' ')];\n        this.assignees = [this.assignees[0]];\n      }\n    }\n    this.assignees = this.assignees.join('+++');\n  }\n}\n\nexport default LineEntry;\n","import { getFrameFromTimestamp } from '..';\n\nclass LyricEntry {\n  constructor(entry) {\n    this.startTime = entry.startTime;\n    this.sectionId = entry.sectionId;\n    this.assignees = entry.assignees;\n    this.lines = [entry];\n  }\n\n  add(entry) {\n    this.lines.push(entry);\n  }\n\n  data(members, framerate) {\n    const assignees = [...new Set(this.assignees.split('+++'))].map((key) => members[key]);\n\n    return {\n      frame: getFrameFromTimestamp(this.startTime, framerate),\n      names: assignees.map((assignee) => {\n        if (!assignee) {\n          return 'ALL';\n        }\n        return assignee.name;\n      }),\n      colors: assignees.map((assignee) => {\n        if (!assignee) {\n          return '#808080';\n        }\n        return assignee.color;\n      }),\n      lines: this.lines.map((line) => line.text.join(' ')),\n    };\n  }\n}\n\nexport default LyricEntry;\n","class MemberEntry {\n  constructor({ key, color, name, age }) {\n    this.key = key;\n    this.color = color;\n    this.name = name;\n    this.age = age;\n    this.percentage = 0;\n    this.duration = 0;\n  }\n}\n\nexport default MemberEntry;\n","import { deepCopy, getFrameFromTimestamp, getTimestampFromFrame } from '..';\nimport ChartEntry from './chartEntry';\nimport DistributedPart from './distributedPart';\nimport LineEntry from './lineEntry';\nimport LyricEntry from './lyricEntry';\nimport MemberEntry from './memberEntry';\n\nconst ALL_NONE_MEMBERS = ['ALL', 'NONE', 'member::ALL', 'member::NONE'];\n\n/**\n * Class to generate a Line Distribution preview.\n */\nexport class Previewer {\n  constructor({ songTitle, allParts, members, distribution, framerate = 30 }) {\n    this._songTitle = songTitle;\n    this._allParts = allParts;\n    this._distribution = distribution;\n    this._framerate = framerate;\n\n    this._members = this._buildMembers(members);\n    this._distributedParts = this._buildDistributionParts();\n    this._max = this._calculateMax();\n    this._priorityPosition = this._buildMemberPriorityPosition();\n    this._membersCountCache = {};\n    this._membersChartData = this._buildMembersLineBarChartData();\n  }\n\n  /**\n   * Builds dictionary of MemberEntry where the key is the member key.\n   * @param {object{}} members\n   * @returns {MemberEntry{}}\n   */\n  _buildMembers(members) {\n    return Object.values(members).reduce((result, member) => {\n      result[member.key] = new MemberEntry(member);\n      return result;\n    }, {});\n  }\n\n  /**\n   * Builds array of DistributedPart sorted by startTime.\n   * @returns {DistributedPart[]}\n   */\n  _buildDistributionParts() {\n    return this._allParts\n      .map((part) => {\n        const distributedPart = this._distribution[part.id];\n        const distributedAssignees = Array.isArray(distributedPart)\n          ? distributedPart\n          : Object.keys(distributedPart);\n\n        return new DistributedPart({\n          ...part,\n          membersIds: distributedAssignees,\n        });\n      })\n      .sort((a, b) => (a.startTime > b.startTime ? 1 : -1));\n  }\n\n  /**\n   * Builds Max dictionary.\n   * @returns {object}\n   */\n  _calculateMax() {\n    return this._distributedParts.reduce(\n      (acc, part) => {\n        // Add total\n        acc.totalDuration += part.duration;\n        // Add each member duration\n        part.assignees.forEach((assignee) => {\n          if (acc.cache[assignee] === undefined) {\n            acc.cache[assignee] = 0;\n          }\n          acc.cache[assignee] += part.duration;\n\n          if (!ALL_NONE_MEMBERS.includes(assignee) && acc.cache[assignee] > acc.winningDuration) {\n            acc.winningDuration = acc.cache[assignee];\n            acc.winnerKey = assignee;\n          }\n        });\n\n        return acc;\n      },\n      {\n        totalDuration: 0,\n        winningDuration: 0,\n        winnerKey: null,\n        cache: {},\n      }\n    );\n  }\n\n  /**\n   * Builds Position priority based on age\n   */\n  _buildMemberPriorityPosition() {\n    return this.members().reduce((acc, memberEntry, index) => {\n      acc[memberEntry.key] = index;\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Creates a LineBars ChartEntry dictionary that has every member ChartEntry set to 0/\n   * @returns {ChartEntry{}}\n   */\n  _buildMembersLineBarChartData() {\n    this._membersCountCache = {};\n    return Object.keys(this._members).reduce((acc, key) => {\n      this._membersCountCache[key] = 0;\n      acc[key] = new ChartEntry({ key, position: -1 });\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Outputs the members array\n   * @return {Member[]}\n   */\n  members() {\n    return Object.values(this._members).sort((a, b) => (b.age > a.age ? 1 : -1));\n  }\n\n  /**\n   * Build distribution bars\n   * @param {boolean} force - flag indicating if bars should be rebuilt\n   */\n  bars(force = false) {\n    if (this._bars && !force) return this._bars;\n\n    const temp = [deepCopy(this._membersChartData)];\n\n    // Create an temp entry for each startTime and endTime on each distributedPart\n    this._distributedParts.forEach((dPart) => {\n      const startIndex = getFrameFromTimestamp(dPart.startTime, this._framerate);\n      const endIndex = getFrameFromTimestamp(dPart.endTime, this._framerate);\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        if (temp[i] === undefined) {\n          temp[i] = deepCopy(this._membersChartData);\n        }\n        dPart.assignees.forEach((assigneeKey) => {\n          if (!ALL_NONE_MEMBERS.includes(assigneeKey)) {\n            temp[i][assigneeKey].on = i !== endIndex;\n          }\n        });\n      }\n    });\n\n    // Add the initial state\n    const result = [temp[0]];\n\n    // Calculate value and percentage for each entry (undefined indexes will remain undefined)\n    for (let i = 1; i < temp.length; i++) {\n      const entry = temp[i];\n      if (entry) {\n        // Add whoever is 'on'\n        Object.values(entry).forEach((chartEntry) => {\n          if (chartEntry.on) {\n            this._membersCountCache[chartEntry.key] += 1;\n          }\n\n          // Update value and percentage\n          chartEntry.value = getTimestampFromFrame(this._membersCountCache[chartEntry.key], this._framerate);\n          chartEntry.percentage = Math.ceil((100 * chartEntry.value) / this._max.winningDuration);\n        });\n\n        // Reposition\n        const sortedEntry = Object.values(entry).sort((a, b) => (b.value > a.value ? 1 : -1));\n        Object.values(entry).forEach((chartEntry) => {\n          chartEntry.position =\n            chartEntry.value > 0 ? sortedEntry.findIndex((e) => e.key === chartEntry.key) : -1;\n          // Fix value\n          chartEntry.value = Number(chartEntry.value / 1000).toFixed(1);\n        });\n\n        result[i] = entry;\n      }\n    }\n\n    // Add an last entry that every member is on\n    const newLastEntry = deepCopy(result[result.length - 1]);\n    Object.values(newLastEntry).forEach((chartEntry) => {\n      chartEntry.on = true;\n    });\n    result.push(newLastEntry);\n\n    this._bars = result;\n    return this._bars;\n  }\n\n  /**\n   *\n   * @param {*} force\n   */\n  lyrics(force = false) {\n    if (this._lyrics && !force) return this._lyrics;\n\n    const lineEntries = {};\n\n    // Iterate through distributedParts building lyricLine\n    this._distributedParts.forEach((dPart) => {\n      // Ignore dismissible parts\n      if (dPart.isDismissible) return;\n      // Ignore parts with None\n      if (dPart.assignees.includes('member::NONE')) return;\n      // Create line entry where there is none for given lineId\n      if (lineEntries[dPart.lineId] === undefined) {\n        lineEntries[dPart.lineId] = new LineEntry(dPart);\n      }\n\n      lineEntries[dPart.lineId].add(dPart);\n    });\n\n    const lyricsEntries = {};\n\n    // Grouping\n    // Rules if different sectionId, new lyricEntry\n    const sortedLineEntries = Object.values(lineEntries).sort((a, b) =>\n      a.startTime >= b.startTime ? 1 : -1\n    );\n\n    let latestEntry = null;\n\n    sortedLineEntries.forEach((entry) => {\n      // Cleanup entry\n      entry.cleanup();\n\n      // If is the same sectionId and same assignees of previous entry, use it\n      if (latestEntry?.sectionId === entry.sectionId && latestEntry.assignees === entry.assignees) {\n        latestEntry.add(entry);\n        return;\n      }\n\n      // Consume latestEntry\n      if (latestEntry) {\n        if (lyricsEntries[latestEntry?.startTime]) {\n          lyricsEntries[latestEntry.startTime + 0.1] = latestEntry;\n        } else {\n          lyricsEntries[latestEntry.startTime] = latestEntry;\n        }\n        latestEntry = null;\n      }\n\n      // Create new entry\n      latestEntry = new LyricEntry(entry);\n    });\n\n    // Cleanup\n    Object.entries(lyricsEntries).forEach(([key, entry]) => {\n      lyricsEntries[key] = entry.data(this._members, this._framerate);\n    });\n\n    // console.log({ lyricsEntries });\n\n    this._lyrics = Object.values(lyricsEntries);\n    return this._lyrics;\n  }\n}\n\nexport default Previewer;\n","import React, { useEffect, useRef, useState } from 'react';\n\n// Components\nimport YoutubeVideo from './YoutubeVideo';\nimport { bemClass, getBemModifier, getFrameFromTimestamp } from '../../utils';\nimport Avatar from '../Avatar';\nconsole.log('9:02');\nfunction LineDistribution({ playerRef, members, bars, lyrics, framerate = 30 }) {\n  const [intervalId, setIntervalId] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentRank, setCurrentRank] = useState(bars[0]);\n\n  useEffect(() => {\n    setCurrentRank(bars[0]);\n  }, [bars]);\n\n  const onStateChange = (e) => {\n    if (e.data === 1) {\n      setIntervalId(\n        setInterval(() => {\n          setCurrentTime(e.target.getCurrentTime());\n        }, 1000 / framerate)\n      );\n    } else {\n      // Kill interval\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n  };\n\n  useEffect(() => {\n    // Every time change update current ranking if id exists according to framerate\n    const frameIndex = getFrameFromTimestamp(currentTime * 1000, framerate);\n    if (currentTime < 0.5 || !currentRank) {\n      setCurrentRank(bars[0]);\n    }\n\n    if (bars[frameIndex]) {\n      setCurrentRank(bars[frameIndex]);\n    }\n  }, [currentRank, currentTime, bars, framerate]);\n\n  return (\n    <section className=\"line-distribution__container\">\n      <YoutubeVideo\n        playerRef={playerRef}\n        width=\"320\"\n        height=\"180\"\n        className=\"line-distribution__video\"\n        onStateChange={onStateChange}\n      />\n      <RankingBars members={members} currentRank={currentRank} />\n      <LyricsScroller currentTime={currentTime} lyrics={lyrics} framerate={framerate} />\n    </section>\n  );\n}\n\nfunction RankingBars({ members, currentRank }) {\n  console.log({ currentRank });\n  return (\n    <ul className=\"line-distribution__live-ranking\">\n      {members?.map((member) => (\n        <RankEntry key={`rank-entry-${member.key}`} member={member} rank={currentRank[member.key]} />\n      ))}\n    </ul>\n  );\n}\n\nfunction RankEntry({ member, rank }) {\n  const onClass = getBemModifier(rank.on, 'active');\n\n  return (\n    <li className={bemClass('rank-entry', onClass, rank.position)}>\n      <Avatar name={member.name} className=\"rank-entry__avatar\" color={member.color ?? 'black'} />\n      <div className=\"rank-entry__name\">{member.name}</div>\n      <div className=\"rank-entry__progress\">\n        <span\n          className=\"rank-entry__progress-bar\"\n          style={{ width: `${rank.percentage}%`, backgroundColor: rank.on ? member.color : 'white' }}\n        />\n      </div>\n      <div className=\"rank-entry__timestamp\">{rank.value}s</div>\n    </li>\n  );\n}\n\nfunction LyricsScroller({ currentTime, lyrics, framerate }) {\n  const lyricsRef = useRef([]);\n  // console.log(lyrics);\n\n  // useEffect(() => {\n  //   // Every time change update current ranking if id exists according to framerate\n  //   const frame = getFrameFromTimestamp(currentTime * 1000, framerate);\n\n  //   const lyricIndex = lyrics.findIndex((lyric) => lyric.frame === frame);\n  //   // console.log('trying', frame, lyricIndex);\n  //   if (lyricIndex > -1) {\n  //     console.log('SCROLLING');\n  //     lyricsRef.current[lyricIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });\n  //   }\n  // }, [currentTime, lyrics, lyricsRef]);\n\n  return (\n    <div className=\"line-distribution__live-lyrics\">\n      <ul className=\"lyrics-entries-container\">\n        {lyrics.map((lyric, index) => (\n          <li key={`lyrics-${index}`} ref={(el) => (lyricsRef.current[index] = el)}>\n            <Lyric lyric={lyric} number={index} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Lyric({ lyric, number }) {\n  return (\n    <div className=\"lyrics-entry\">\n      <div className=\"lyrics-entry__avatars\">\n        {lyric.names.map((name, index) => (\n          <Avatar\n            key={`avt-${name}-${number}-${index}`}\n            name={name}\n            color={lyric.colors[index]}\n            className={name === 'ALL' && lyric.names.length > 1 && 'lyrics-entry__avatar--all'}\n            size={name === 'ALL' && lyric.names.length > 1 && 'small'}\n          />\n        ))}\n      </div>\n      <div className=\"lyrics-entry__names\">\n        {lyric.names.map((name, index) => (\n          <span\n            key={`nms-${name}-${number}-${index}`}\n            className=\"lyrics-entry__name\"\n            style={{ color: lyric.colors[index] }}\n          >\n            {name}\n          </span>\n        ))}\n      </div>\n      <div className=\"lyrics-entry__lines\">\n        {lyric.lines.map((line, index) => (\n          <span key={`lin-${line}-${number}-${index}`} className=\"lyrics-entry__line\">\n            {line}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default LineDistribution;\n","import React, { useEffect, useState } from 'react';\n\n// Design Resources\nimport { Button, Divider, Typography } from 'antd';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n// Temp\nimport sampleGroupJson from '../../utils/mock/sampleGroup.json';\n// Engine and utilities\nimport Previewer from '../../utils/distribution/previewer';\n// Components\nimport LineDistribution from './LineDistribution';\nimport { buildMockDistribution } from '../../utils';\n\nconst { Paragraph } = Typography;\n\nfunction Preview({ playerRef }) {\n  const [song] = useDistributorState('song');\n  const [parts] = useDistributorState('parts');\n  const [step, setStep] = useDistributorState('step');\n\n  const [sampleGroup] = useState(sampleGroupJson);\n  const [previewMembers, setPreviewMembers] = useState([]);\n  const [previewBars, setPreviewBars] = useState([]);\n  const [previewLyrics, setPreviewLyrics] = useState({});\n\n  useEffect(() => {\n    if (step === '3') {\n      const preview = new Previewer({\n        songTitle: song.title ?? 'Untitled',\n        allParts: song.allPartsIds.map((partId) => parts[partId].data),\n        members: sampleGroup.members,\n        distribution: buildMockDistribution(parts).data,\n      });\n      setPreviewMembers(preview.members());\n      setPreviewBars(preview.bars());\n      setPreviewLyrics(preview.lyrics());\n    }\n  }, [step, parts, song, sampleGroup.members]);\n\n  return (\n    <section className=\"preview\">\n      <h2 className=\"preview__title\">Preview</h2>\n      <Paragraph>Visualize how this songs plays.</Paragraph>\n\n      {step === '3' && previewBars.length && (\n        <LineDistribution\n          playerRef={playerRef}\n          members={previewMembers}\n          bars={previewBars}\n          lyrics={previewLyrics}\n        />\n      )}\n\n      <Divider />\n\n      <div className=\"lyrics-and-sections__action\">\n        <Button type=\"primary\" onClick={() => setStep('4')}>\n          Next Step: Song Metadata\n        </Button>\n      </div>\n    </section>\n  );\n}\n\nexport default Preview;\n","import React, { useCallback } from 'react';\n\n// Design Resources\nimport { Button, InputNumber, Form, Input, Checkbox, Divider, Tooltip, Progress, TimePicker } from 'antd';\n// State\nimport useDistributorState from '../../states/useDistributorState';\n\nfunction SongMetadata() {\n  const [song] = useDistributorState('song');\n  const [, setStep] = useDistributorState('step');\n\n  const onValuesChange = useCallback(\n    (data) => {\n      song.deserialize(data);\n    },\n    [song]\n  );\n\n  return (\n    <div className=\"song-metadata\">\n      <h2 className=\"song-metadata__title\">Finish Song Metadata</h2>\n\n      <Form\n        layout=\"vertical\"\n        name=\"song-metadata\"\n        initialValues={{ ...song.data, tempo: song.data.tempo || 120 }}\n        onValuesChange={onValuesChange}\n        className=\"song-metadata-form\"\n        autoComplete=\"off\"\n        preserve={false}\n      >\n        <Form.Item label=\"Video ID\" name=\"videoId\" className=\"song-metadata__form-item\">\n          <Input />\n        </Form.Item>\n\n        <div className=\"song-metadata-form__items song-metadata-form__items--2\">\n          <Form.Item label=\"Song Title\" name=\"title\" className=\"song-metadata-form__item\">\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Version\" name=\"version\" className=\"song-metadata-form__item\">\n            <Input />\n          </Form.Item>\n        </div>\n\n        <div className=\"song-metadata-form__items song-metadata-form__items--4\">\n          <Form.Item label=\"Duration\" name=\"duration\" className=\"song-metadata-form__item\">\n            <TimePicker format=\"mm:ss\" />\n          </Form.Item>\n\n          <Form.Item label=\"Tempo\" name=\"tempo\" className=\"song-metadata-form__item\">\n            <InputNumber placeholder={120} formatter={(value) => `${value} bpm`} />\n          </Form.Item>\n\n          <Form.Item label=\"Ideal Group Size\" name=\"idealGroupSize\" className=\"song-metadata-form__item\">\n            <InputNumber min={1} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Single/Title\"\n            name=\"isSingle\"\n            className=\"song-metadata-form__item\"\n            valuePropName=\"checked\"\n          >\n            <Checkbox />\n          </Form.Item>\n        </div>\n\n        <div className=\"song-metadata-form__items song-metadata-form__items--4\">\n          <Form.Item label=\"Genre\" name=\"genre\" className=\"song-metadata-form__item\">\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Style\" name=\"style\" className=\"song-metadata-form__item\">\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Album ID\" name=\"albumId\" className=\"song-metadata-form__item\">\n            <Input disabled />\n          </Form.Item>\n          <Form.Item label=\"Parts Count\" name=\"partsCount\" className=\"song-metadata-form__item\">\n            <Input disabled />\n          </Form.Item>\n        </div>\n      </Form>\n\n      <div className=\"song-metadata__actions\">\n        <Divider />\n        <Tooltip title=\"Song Completion Rate\">\n          <Progress percent={song?.completion} />\n        </Tooltip>\n        <Divider />\n        <div className=\"song-metadata__action\">\n          <Button type=\"primary\" disabled={!song?.completion} onClick={() => setStep('5')}>\n            Next Step: Save On Database\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SongMetadata;\n","import React, { useState } from 'react';\n\n// Design Resources\nimport { Button, Divider, Tooltip, Progress } from 'antd';\n// State\nimport useLoadingState from '../../states/useLoadingState';\nimport useDistributorState from '../../states/useDistributorState';\n// API\nimport API from '../../api';\n\nfunction SaveSong() {\n  const [song] = useDistributorState('song');\n  const [, setStep] = useDistributorState('step');\n  const [isSongLoading] = useLoadingState('isSongLoading');\n\n  const [success, setSuccess] = useState(false);\n\n  const onSave = async () => {\n    try {\n      await API.saveSong(song.serialize());\n      setSuccess(true);\n      setStep(0);\n    } catch (_) {}\n  };\n\n  return (\n    <div className=\"song-metadata\">\n      <h2 className=\"song-metadata__title\">Save to Database</h2>\n\n      <div className=\"song-metadata__actions\">\n        <Divider />\n        <Tooltip title=\"Song Completion Rate\">\n          <Progress percent={song?.completion} />\n        </Tooltip>\n        <Divider />\n        <div className=\"song-metadata__action\">\n          <Button type=\"primary\" disabled={isSongLoading ?? success} onClick={onSave}>\n            Save On Database\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SaveSong;\n","import React, { useRef } from 'react';\n\n// Design Resources\nimport { Layout, Divider, Collapse } from 'antd';\n\n// State\nimport useDistributorState from '../states/useDistributorState';\n// Components\nimport StepperProgress from './distributor/StepperProgress';\nimport LoadSong from './distributor/LoadSong';\nimport LyricsAndSections from './distributor/LyricsAndSections';\nimport ModalOptions from './distributor/ModalOptions';\nimport TimeAndSync from './distributor/TimeAndSync';\nimport Preview from './distributor/Preview';\nimport SongMetadata from './distributor/SongMetadata';\nimport SaveSong from './distributor/SaveSong';\n\nconst { Panel } = Collapse;\n\nfunction Distributor() {\n  const [step, setStep] = useDistributorState('step');\n  const [videoId] = useDistributorState('videoId');\n  const [song] = useDistributorState('song');\n  const [activeInstance, setActiveInstance] = useDistributorState('activeInstance');\n\n  const playerRef = useRef();\n\n  const changePanel = (key) => {\n    setStep(key);\n  };\n\n  const playVideo = () => {\n    playerRef?.current?.internalPlayer?.playVideo();\n  };\n\n  const pauseVideo = () => {\n    playerRef?.current?.internalPlayer?.pauseVideo();\n  };\n\n  const seekAndPlay = (timestamp) => {\n    playerRef?.current?.internalPlayer?.seekTo(timestamp);\n    playerRef?.current?.internalPlayer?.playVideo();\n  };\n\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main distributor\">\n        <h1>Distributor</h1>\n        <StepperProgress currentStep={step} />\n        <Collapse accordion defaultActiveKey={0} activeKey={step} onChange={changePanel}>\n          <Panel header=\"Load Song\" key=\"0\">\n            <LoadSong />\n          </Panel>\n          <Panel header=\"Lyrics & Sections\" key=\"1\">\n            <LyricsAndSections />\n          </Panel>\n          <Panel header=\"Capture Parts\" key=\"2\">\n            {Boolean(videoId) && step === '2' ? (\n              <TimeAndSync\n                playerRef={playerRef}\n                playVideo={playVideo}\n                pauseVideo={pauseVideo}\n                seekAndPlay={seekAndPlay}\n              />\n            ) : (\n              <p>You can't see this step without a video.</p>\n            )}\n          </Panel>\n          <Panel header=\"Preview\" key=\"3\">\n            {Boolean(videoId) && step === '3' ? (\n              <Preview\n                playerRef={playerRef}\n                playVideo={playVideo}\n                pauseVideo={pauseVideo}\n                seekAndPlay={seekAndPlay}\n              />\n            ) : (\n              <p>You can't see this step without a video.</p>\n            )}\n          </Panel>\n          <Panel header=\"Song Metadata\" key=\"4\">\n            {song && step === '4' ? <SongMetadata /> : <p>You can't see this step without a loaded song.</p>}\n          </Panel>\n          <Panel header=\"Save\" key=\"5\">\n            {song ? <SaveSong /> : <p>You can't see this step without a loaded song.</p>}\n          </Panel>\n        </Collapse>\n\n        <Divider />\n\n        <ModalOptions activeInstance={activeInstance} setActiveInstance={setActiveInstance} />\n      </main>\n    </Layout.Content>\n  );\n}\n\nexport default Distributor;\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Button, Layout, Card, Tabs, Affix, Table } from 'antd';\nimport { EditOutlined, FileAddOutlined, YoutubeOutlined } from '@ant-design/icons';\n// State\nimport useGlobalState from '../states/useGlobalState';\nimport useDistributorState from '../states/useDistributorState';\n// Store\nimport store from '../services/store';\n// Utilities\nimport { serializeKey } from '../utils/distributor';\n// Components\nimport Member from './Member';\nimport LoadingContainer from './global/LoadingContainer';\nconst { TabPane } = Tabs;\n\nfunction Groups() {\n  const [groups, setGroups] = useState([]);\n  const [members, setMembers] = useState({});\n  const groupsRefs = useRef([]);\n\n  useEffect(() => {\n    async function loadContent() {\n      setMembers(await store.getCollection('members', true));\n      setGroups(await store.getCollection('groups'));\n    }\n    loadContent();\n  }, []);\n\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main groups\">\n        <h1>Groups</h1>\n        <LoadingContainer waitFor=\"group\" noResults={!groups.length}>\n          <div className=\"groups-page\">\n            <ul className=\"group-card-containers\">\n              {groups.map((group, i) => (\n                <li key={group.id} ref={(el) => (groupsRefs.current[i] = el)}>\n                  <Group group={group} members={members} />\n                </li>\n              ))}\n            </ul>\n            <aside>\n              <Affix offsetTop={120}>\n                <ul className=\"group-quick-links\">\n                  {groups.map((group, i) => (\n                    <li key={`quick-link-${group.id}`} className=\"group-quick-links__link\">\n                      <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => groupsRefs.current[i].scrollIntoView({ behavior: 'smooth' })}\n                      >\n                        {group.name}\n                      </Button>\n                    </li>\n                  ))}\n                </ul>\n              </Affix>\n            </aside>\n          </div>\n        </LoadingContainer>\n      </main>\n    </Layout.Content>\n  );\n}\n\nfunction Group({ group, members }) {\n  const history = useHistory();\n  const [, setActiveGroup] = useGlobalState('activeGroup');\n  const [, setActiveMembers] = useGlobalState('activeMembers');\n  const [, setLineDistribution] = useGlobalState('lineDistribution');\n  const [, setLoadedLineDistribution] = useGlobalState('loadedLineDistribution');\n  const [, setIsFullyLoaded] = useDistributorState('isFullyLoaded');\n\n  const [tab, setTab] = useState('1');\n  const [groupMembers, setGroupMembers] = useState({});\n\n  const activateDistribution = useCallback(\n    async (distribution, isEdit = false) => {\n      setIsFullyLoaded(false);\n      setActiveMembers(null);\n      setActiveGroup(group);\n\n      if (distribution) {\n        const distributionData = await store.getRecord('distribution-data', distribution.id);\n        setLoadedLineDistribution(distribution);\n        setLineDistribution(distributionData.assignedParts);\n\n        const route = isEdit ? 'distribute' : 'distribution';\n        history.push(`/${route}/${distribution.id}`);\n        return;\n      }\n\n      setLoadedLineDistribution({});\n      setLineDistribution({});\n      history.push(`/distribute/new`);\n    },\n    [\n      history,\n      setActiveGroup,\n      setActiveMembers,\n      setLineDistribution,\n      setIsFullyLoaded,\n      setLoadedLineDistribution,\n      group,\n    ]\n  );\n\n  useEffect(() => {\n    setGroupMembers(\n      group.membersIds.reduce((acc, memberId) => {\n        const key = serializeKey('member', memberId);\n        const member = members[key] ?? {};\n        acc[key] = member;\n        return acc;\n      }, {})\n    );\n  }, [members, group.membersIds]);\n\n  const onChangeTab = (tab1) => {\n    setTab(tab1);\n  };\n\n  return (\n    <Card\n      title={`${group.name} • ${group.debutYear} — ${group.disbandmentYear}`}\n      size=\"small\"\n      extra={\n        <Button type=\"default\" size=\"small\" icon={<EditOutlined />}>\n          Edit\n        </Button>\n      }\n      className=\"group-card\"\n    >\n      <Tabs defaultActiveKey=\"1\" size=\"small\" className=\"group-card__tabs\" onChange={onChangeTab}>\n        <TabPane tab=\"Members\" key=\"1\">\n          <ul className=\"group-card__members\">\n            {Object.values(groupMembers).map((member) => {\n              return (\n                <Member\n                  key={member.key}\n                  member={member}\n                  showName\n                  showPosition\n                  className=\"group-card__member\"\n                />\n              );\n            })}\n          </ul>\n        </TabPane>\n        <TabPane tab=\"Albums\" key=\"2\">\n          Albums will come here.\n        </TabPane>\n        <TabPane tab=\"Distributions\" key=\"3\">\n          {tab === '3' && (\n            <GroupDistributions\n              group={group}\n              groupMembers={groupMembers}\n              activateDistribution={activateDistribution}\n            />\n          )}\n          <Button type=\"default\" icon={<FileAddOutlined />} onClick={() => activateDistribution()}>\n            Create a Distribution for this group\n          </Button>\n        </TabPane>\n      </Tabs>\n    </Card>\n  );\n}\n\nfunction GroupDistributions({ group, groupMembers, activateDistribution }) {\n  const [groupDistributions, setGroupDistributions] = useState(null);\n\n  useEffect(() => {\n    async function loadContent() {\n      setGroupDistributions(await store.getCollection('distributions', null, { groupId: group.id }));\n    }\n\n    if (!groupDistributions) {\n      loadContent();\n    }\n  }, [group.id, groupDistributions]);\n\n  if (!groupDistributions) {\n    return (\n      <div>\n        <p>Distributions not loaded yet.</p>\n      </div>\n    );\n  }\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'songTitle',\n      className: 'group-distribution-table__title',\n      render: (title, data) => (data.name !== 'original' ? `${title} (${data.name})` : title),\n    },\n    {\n      title: 'Snippet',\n      dataIndex: 'id',\n      className: 'group-distribution-table__snippet',\n      render: (_, data) => <GroupDistributionSnippet distribution={data} groupMembers={groupMembers} />,\n    },\n    {\n      title: 'Edit',\n      dataIndex: 'id',\n      className: 'group-distribution-table__button',\n      render: (_, data) => (\n        <Button\n          type=\"default\"\n          size=\"small\"\n          icon={<EditOutlined />}\n          onClick={() => activateDistribution(data, true)}\n        >\n          Edit\n        </Button>\n      ),\n    },\n    {\n      title: 'View',\n      dataIndex: 'id',\n      className: 'group-distribution-table__button',\n      render: (_, data) => (\n        <Button\n          type=\"primary\"\n          size=\"small\"\n          icon={<YoutubeOutlined />}\n          onClick={() => activateDistribution(data)}\n        >\n          View\n        </Button>\n      ),\n    },\n  ];\n\n  return (\n    <Table\n      dataSource={groupDistributions}\n      columns={columns}\n      showHeader={false}\n      size=\"small\"\n      tableLayout=\"auto\"\n    />\n  );\n}\n\nfunction GroupDistributionSnippet({ distribution, groupMembers }) {\n  return (\n    <ul className=\"group-distribution-snippet\">\n      {Object.entries(groupMembers).map(([memberKey, memberData]) => {\n        const progress = distribution?.stats[memberKey]?.absoluteProgress ?? 0;\n        return (\n          <span\n            key={`${distribution.id}${memberKey}`}\n            style={{ width: `${progress}%`, backgroundColor: memberData.color }}\n          >\n            {progress > 5 ? `${progress}%` : ''}\n          </span>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default Groups;\n","import React from 'react';\n\n// Design Resources\nimport { Layout } from 'antd';\n\n// Components\n\nfunction Home() {\n  return (\n    <Layout.Content className=\"container\">\n      <main className=\"main home\">\n        <h1>Home</h1>\n        <section className=\"section\">Content comes here</section>\n      </main>\n    </Layout.Content>\n  );\n}\n\nexport default Home;\n","import { auth } from '../services/firebase';\n\nexport function signUp(email, password) {\n  return auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function signIn(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n","import React, { useState } from 'react';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert } from 'antd';\n\n// API\nimport { signIn } from '../api/auth';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      await signIn(email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"container\">\n      <h1 className=\"login__title\">Enter the Squirrel Zone</h1>\n      {Boolean(error) && <Alert message=\"Error\" description={error} type=\"error\" showIcon />}\n      <Form\n        {...layout}\n        layout=\"horizontal\"\n        name=\"sign-in\"\n        onValuesChange={onValuesChange}\n        className=\"login__form\"\n        autoComplete=\"off\"\n      >\n        <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n          <Input type=\"email\" />\n        </Form.Item>\n        <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n          <Input type=\"password\" />\n        </Form.Item>\n        <div className=\"login__form-action\">\n          <Button type=\"primary\" onClick={onHandleSubmit}>\n            Login\n          </Button>\n        </div>\n      </Form>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout } from 'antd';\n// State\nimport useGlobalState from '../states/useGlobalState';\nimport useDistributorState from '../states/useDistributorState';\n// Utilities\nimport Previewer from '../utils/distribution/previewer';\nimport { loadActiveMembers, loadSongState } from '../states/functions';\n// Components\nimport LineDistribution from './distributor/LineDistribution';\nimport LoadingContainer from './global/LoadingContainer';\n\nfunction Distribution() {\n  const history = useHistory();\n  const [activeGroup] = useGlobalState('activeGroup');\n  const [activeMembers] = useGlobalState('activeMembers');\n  const [song] = useDistributorState('song');\n  const [isFullyLoaded] = useDistributorState('isFullyLoaded');\n  const [loadedLineDistribution] = useGlobalState('loadedLineDistribution');\n  const [lineDistribution] = useGlobalState('lineDistribution');\n  const [parts] = useDistributorState('parts');\n\n  const [previewMembers, setPreviewMembers] = useState([]);\n  const [previewBars, setPreviewBars] = useState([]);\n  const [previewLyrics, setPreviewLyrics] = useState({});\n\n  // Run on mount\n  useEffect(() => {\n    // Redirect if there is no active group\n    if (!activeGroup) {\n      history.push('/groups');\n      return;\n    }\n\n    // Load members\n    async function loadContent() {\n      await loadSongState(loadedLineDistribution.songId);\n      await loadActiveMembers(activeGroup);\n    }\n    loadContent();\n  }, []);\n\n  useEffect(() => {\n    if (isFullyLoaded && song && activeMembers && parts && Object.keys(parts).length && lineDistribution) {\n      const preview = new Previewer({\n        songTitle: song.title,\n        allParts: song.allPartsIds.map((partId) => parts[partId].data),\n        members: activeMembers,\n        distribution: lineDistribution,\n        framerate: 30,\n      });\n      setPreviewMembers(preview.members());\n      setPreviewBars(preview.bars());\n      setPreviewLyrics(preview.lyrics());\n      console.log(preview.bars());\n    }\n  }, [isFullyLoaded, parts, song, activeMembers, lineDistribution]);\n\n  const playerRef = useRef();\n\n  return (\n    <LoadingContainer forceLoading={!previewBars.length}>\n      <Layout.Content className=\"container\">\n        <main className=\"main distribution\">\n          <h1>Line Distribution{song ? `: ${song.title}` : ''}</h1>\n          <LineDistribution\n            playerRef={playerRef}\n            members={previewMembers}\n            bars={previewBars}\n            lyrics={previewLyrics}\n          />\n        </main>\n      </Layout.Content>\n    </LoadingContainer>\n  );\n}\n\nexport default Distribution;\n","import { Layout } from 'antd';\nimport React from 'react';\n\nfunction Loading({ className = '' }) {\n  return (\n    <Layout.Content className={`loading ${className}`}>\n      <svg\n        className=\"loading-logo__svg\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"400\"\n        height=\"400\"\n        overflow=\"visible\"\n      >\n        <path\n          className=\"loading-logo__black\"\n          d=\"M201.3 0H200C89.5 0 0 89.5 0 200s89.5 200 200 200h1.3c109.9-.7 198.7-90 198.7-200S311.2.7 201.3 0zm23.5 61.1c.9-.4 1.8-.9 2.7-1.3C235.1 56.4 244 55 253 55c17 0 33.9 5.1 41.5 11.4 11.6 9.7 18.4 37 1.2 41.7-2.4.7-4.7.9-6.7.9-9 0-14.4-5.5-16.7-8.6.2-.5.3-1.1.5-1.8.1-.4.2-.7.3-1.1l.3-1.2c.2-.8.6-1.9 1.1-3.2.5-1.3 1.2-2.7 2.1-4.2.2-.4.5-.7.7-1.1.3-.4.6-.7.8-1l.5-.5.2-.2c.1-.1.2-.1.3-.2.2-.1.3-.3.5-.4.2-.1.4-.3.6-.4.4-.3.8-.5 1.2-.7l.6-.3.6-.3c.9-.3 1.9-.5 2.9-.6 1-.1 2 0 3 .2.9.2 1.8.5 2.5 1s1.2 1 1.5 1.7c.2.3.3.7.4 1.1 0 .2.1.4.1.7v.7c0 1.8-.6 3.7-1.5 4.9-.2.3-.5.6-.8.9-.3.3-.6.5-1 .8-.7.5-1.3.8-1.9.9-.4.1-.7.2-1 .2H286.1c-.3 0-.7-.1-1.1-.3-.8-.3-1.4-.8-2-1.1-.5-.3-1-.5-1.4-.6-.4-.1-.8 0-1 .1-.3.1-.5.3-.7.8-.2.5-.2 1.2.1 2.2.2.5.4 1.1.8 1.7.4.6.9 1.3 1.7 1.8.4.3.9.6 1.4.8l.9.3c.3.1.6.2.9.2.6.1 1.2.1 1.8.1.6 0 1.3-.1 1.9-.3 1.1-.3 2.3-.8 3.4-1.5.5-.3 1.1-.7 1.6-1.2.3-.2.5-.4.7-.7.2-.3.5-.5.7-.8 1.9-2.2 3.1-5.1 3.2-8.2 0-.8 0-1.6-.1-2.4 0-.4-.1-.8-.2-1.2-.1-.4-.2-.8-.3-1.3-.3-.8-.7-1.7-1.2-2.4-.5-.8-1.1-1.5-1.8-2-1.4-1.2-3-1.9-4.6-2.3-1.6-.4-3.2-.5-4.7-.4-1.5.1-3 .4-4.4.9-.4.1-.7.3-1.1.4-.3.2-.7.3-1 .5-.2.1-.3.2-.5.3l-.5.3-.9.6c-2.3 1.7-3.9 3.8-5 5.8s-1.8 3.8-2.3 5.3c-.5 1.5-.8 2.7-1 3.5-.2.8-.3 1.6-.4 2.3-.1.7-.2 1.4-.2 2 0 .2 0 .4-.1.6v.2c-.1.9-.1 1.7-.1 2.4 0 .6.1 1 .1 1.5v.4l-4.5-6.5-35.1-9.9-7.8 2.5v-7.3c3.7-.7 7-4 8-8.3 1.3-5.7-1.6-11.2-6.5-12.4-.4-.1-.8-.1-1.2-.2.9-.2 2-.8 3.2-1.4zm42.3 239.5l-65.8-90.1v-159H200c-.9 0-1.7.1-2.5.2-.9.1-1.7.3-2.5.6-6.3 1.8-10.8 6.3-10.8 6.3v7.2c-1.1-.5-2.3-.6-3.5-.4-3.5.8-5.6 5-4.6 9.3 1 4.3 4.6 7.1 8 6.4v13.2l-.7-.2-9.7-3.1-33.5 9.4-35.4 50.5 34.9 45.3h18.4l-21.7-42 15.8-20.3 26.7 40.6L86 308.6l49.5-8 59.4-81.3 2.5-3.5 2.5-3.5 1.3-1.8v167.6h-1.3c-98.4 0-178.2-79.8-178.2-178.2 0-98.4 79.8-178.2 178.2-178.2h1.3v29.8c8.4-.3 17.2-3.3 17.2-3.3V65.8c.7-.3 1.5-.5 2.3-.5.4 0 .8 0 1.1.1 3.5.8 5.6 5 4.6 9.3-.9 3.8-3.9 6.5-7 6.5-.4 0-.7 0-1.1-.1v13.2l10.4-3.3 33.5 9.4 6.4 9.1 2 2.8 2 2.8 25 35.7-34.9 45.3h-18.4l21.7-42-4.4-5.6-1.7-2.2-1.7-2.2-8-10.3-26.7 40.6 4.7 6.7 1.5 2.1 1.5 2.1 85.4 123-49.5-7.7zm-34.8-122.5c-.6.6-1.3 1.1-1.9 1.7l-3.5-5.1 23.8-36.2 6.6 8.4c-.4.8-.9 1.6-1.3 2.4-6.8 11.6-15.3 21.2-23.7 28.8z\"\n        />\n        <path\n          className=\"loading-logo__blue\"\n          d=\"M201.3 0H200C89.5 0 0 89.5 0 200s89.5 200 200 200h1.3c109.9-.7 198.7-90 198.7-200S311.2.7 201.3 0zm23.5 61.1c.9-.4 1.8-.9 2.7-1.3C235.1 56.4 244 55 253 55c17 0 33.9 5.1 41.5 11.4 11.6 9.7 18.4 37 1.2 41.7-2.4.7-4.7.9-6.7.9-9 0-14.4-5.5-16.7-8.6.2-.5.3-1.1.5-1.8.1-.4.2-.7.3-1.1l.3-1.2c.2-.8.6-1.9 1.1-3.2.5-1.3 1.2-2.7 2.1-4.2.2-.4.5-.7.7-1.1.3-.4.6-.7.8-1l.5-.5.2-.2c.1-.1.2-.1.3-.2.2-.1.3-.3.5-.4.2-.1.4-.3.6-.4.4-.3.8-.5 1.2-.7l.6-.3.6-.3c.9-.3 1.9-.5 2.9-.6 1-.1 2 0 3 .2.9.2 1.8.5 2.5 1s1.2 1 1.5 1.7c.2.3.3.7.4 1.1 0 .2.1.4.1.7v.7c0 1.8-.6 3.7-1.5 4.9-.2.3-.5.6-.8.9-.3.3-.6.5-1 .8-.7.5-1.3.8-1.9.9-.4.1-.7.2-1 .2H286.1c-.3 0-.7-.1-1.1-.3-.8-.3-1.4-.8-2-1.1-.5-.3-1-.5-1.4-.6-.4-.1-.8 0-1 .1-.3.1-.5.3-.7.8-.2.5-.2 1.2.1 2.2.2.5.4 1.1.8 1.7.4.6.9 1.3 1.7 1.8.4.3.9.6 1.4.8l.9.3c.3.1.6.2.9.2.6.1 1.2.1 1.8.1.6 0 1.3-.1 1.9-.3 1.1-.3 2.3-.8 3.4-1.5.5-.3 1.1-.7 1.6-1.2.3-.2.5-.4.7-.7.2-.3.5-.5.7-.8 1.9-2.2 3.1-5.1 3.2-8.2 0-.8 0-1.6-.1-2.4 0-.4-.1-.8-.2-1.2-.1-.4-.2-.8-.3-1.3-.3-.8-.7-1.7-1.2-2.4-.5-.8-1.1-1.5-1.8-2-1.4-1.2-3-1.9-4.6-2.3-1.6-.4-3.2-.5-4.7-.4-1.5.1-3 .4-4.4.9-.4.1-.7.3-1.1.4-.3.2-.7.3-1 .5-.2.1-.3.2-.5.3l-.5.3-.9.6c-2.3 1.7-3.9 3.8-5 5.8s-1.8 3.8-2.3 5.3c-.5 1.5-.8 2.7-1 3.5-.2.8-.3 1.6-.4 2.3-.1.7-.2 1.4-.2 2 0 .2 0 .4-.1.6v.2c-.1.9-.1 1.7-.1 2.4 0 .6.1 1 .1 1.5v.4l-4.5-6.5-35.1-9.9-7.8 2.5v-7.3c3.7-.7 7-4 8-8.3 1.3-5.7-1.6-11.2-6.5-12.4-.4-.1-.8-.1-1.2-.2.9-.2 2-.8 3.2-1.4zm42.3 239.5l-65.8-90.1v-159H200c-.9 0-1.7.1-2.5.2-.9.1-1.7.3-2.5.6-6.3 1.8-10.8 6.3-10.8 6.3v7.2c-1.1-.5-2.3-.6-3.5-.4-3.5.8-5.6 5-4.6 9.3 1 4.3 4.6 7.1 8 6.4v13.2l-.7-.2-9.7-3.1-33.5 9.4-35.4 50.5 34.9 45.3h18.4l-21.7-42 15.8-20.3 26.7 40.6L86 308.6l49.5-8 59.4-81.3 2.5-3.5 2.5-3.5 1.3-1.8v167.6h-1.3c-98.4 0-178.2-79.8-178.2-178.2 0-98.4 79.8-178.2 178.2-178.2h1.3v29.8c8.4-.3 17.2-3.3 17.2-3.3V65.8c.7-.3 1.5-.5 2.3-.5.4 0 .8 0 1.1.1 3.5.8 5.6 5 4.6 9.3-.9 3.8-3.9 6.5-7 6.5-.4 0-.7 0-1.1-.1v13.2l10.4-3.3 33.5 9.4 6.4 9.1 2 2.8 2 2.8 25 35.7-34.9 45.3h-18.4l21.7-42-4.4-5.6-1.7-2.2-1.7-2.2-8-10.3-26.7 40.6 4.7 6.7 1.5 2.1 1.5 2.1 85.4 123-49.5-7.7zm-34.8-122.5c-.6.6-1.3 1.1-1.9 1.7l-3.5-5.1 23.8-36.2 6.6 8.4c-.4.8-.9 1.6-1.3 2.4-6.8 11.6-15.3 21.2-23.7 28.8z\"\n        />\n        <path\n          className=\"loading-logo__cyan\"\n          d=\"M201.3 0H200C89.5 0 0 89.5 0 200s89.5 200 200 200h1.3c109.9-.7 198.7-90 198.7-200S311.2.7 201.3 0zm23.5 61.1c.9-.4 1.8-.9 2.7-1.3C235.1 56.4 244 55 253 55c17 0 33.9 5.1 41.5 11.4 11.6 9.7 18.4 37 1.2 41.7-2.4.7-4.7.9-6.7.9-9 0-14.4-5.5-16.7-8.6.2-.5.3-1.1.5-1.8.1-.4.2-.7.3-1.1l.3-1.2c.2-.8.6-1.9 1.1-3.2.5-1.3 1.2-2.7 2.1-4.2.2-.4.5-.7.7-1.1.3-.4.6-.7.8-1l.5-.5.2-.2c.1-.1.2-.1.3-.2.2-.1.3-.3.5-.4.2-.1.4-.3.6-.4.4-.3.8-.5 1.2-.7l.6-.3.6-.3c.9-.3 1.9-.5 2.9-.6 1-.1 2 0 3 .2.9.2 1.8.5 2.5 1s1.2 1 1.5 1.7c.2.3.3.7.4 1.1 0 .2.1.4.1.7v.7c0 1.8-.6 3.7-1.5 4.9-.2.3-.5.6-.8.9-.3.3-.6.5-1 .8-.7.5-1.3.8-1.9.9-.4.1-.7.2-1 .2H286.1c-.3 0-.7-.1-1.1-.3-.8-.3-1.4-.8-2-1.1-.5-.3-1-.5-1.4-.6-.4-.1-.8 0-1 .1-.3.1-.5.3-.7.8-.2.5-.2 1.2.1 2.2.2.5.4 1.1.8 1.7.4.6.9 1.3 1.7 1.8.4.3.9.6 1.4.8l.9.3c.3.1.6.2.9.2.6.1 1.2.1 1.8.1.6 0 1.3-.1 1.9-.3 1.1-.3 2.3-.8 3.4-1.5.5-.3 1.1-.7 1.6-1.2.3-.2.5-.4.7-.7.2-.3.5-.5.7-.8 1.9-2.2 3.1-5.1 3.2-8.2 0-.8 0-1.6-.1-2.4 0-.4-.1-.8-.2-1.2-.1-.4-.2-.8-.3-1.3-.3-.8-.7-1.7-1.2-2.4-.5-.8-1.1-1.5-1.8-2-1.4-1.2-3-1.9-4.6-2.3-1.6-.4-3.2-.5-4.7-.4-1.5.1-3 .4-4.4.9-.4.1-.7.3-1.1.4-.3.2-.7.3-1 .5-.2.1-.3.2-.5.3l-.5.3-.9.6c-2.3 1.7-3.9 3.8-5 5.8s-1.8 3.8-2.3 5.3c-.5 1.5-.8 2.7-1 3.5-.2.8-.3 1.6-.4 2.3-.1.7-.2 1.4-.2 2 0 .2 0 .4-.1.6v.2c-.1.9-.1 1.7-.1 2.4 0 .6.1 1 .1 1.5v.4l-4.5-6.5-35.1-9.9-7.8 2.5v-7.3c3.7-.7 7-4 8-8.3 1.3-5.7-1.6-11.2-6.5-12.4-.4-.1-.8-.1-1.2-.2.9-.2 2-.8 3.2-1.4zm42.3 239.5l-65.8-90.1v-159H200c-.9 0-1.7.1-2.5.2-.9.1-1.7.3-2.5.6-6.3 1.8-10.8 6.3-10.8 6.3v7.2c-1.1-.5-2.3-.6-3.5-.4-3.5.8-5.6 5-4.6 9.3 1 4.3 4.6 7.1 8 6.4v13.2l-.7-.2-9.7-3.1-33.5 9.4-35.4 50.5 34.9 45.3h18.4l-21.7-42 15.8-20.3 26.7 40.6L86 308.6l49.5-8 59.4-81.3 2.5-3.5 2.5-3.5 1.3-1.8v167.6h-1.3c-98.4 0-178.2-79.8-178.2-178.2 0-98.4 79.8-178.2 178.2-178.2h1.3v29.8c8.4-.3 17.2-3.3 17.2-3.3V65.8c.7-.3 1.5-.5 2.3-.5.4 0 .8 0 1.1.1 3.5.8 5.6 5 4.6 9.3-.9 3.8-3.9 6.5-7 6.5-.4 0-.7 0-1.1-.1v13.2l10.4-3.3 33.5 9.4 6.4 9.1 2 2.8 2 2.8 25 35.7-34.9 45.3h-18.4l21.7-42-4.4-5.6-1.7-2.2-1.7-2.2-8-10.3-26.7 40.6 4.7 6.7 1.5 2.1 1.5 2.1 85.4 123-49.5-7.7zm-34.8-122.5c-.6.6-1.3 1.1-1.9 1.7l-3.5-5.1 23.8-36.2 6.6 8.4c-.4.8-.9 1.6-1.3 2.4-6.8 11.6-15.3 21.2-23.7 28.8z\"\n        />\n        <path\n          className=\"loading-logo__white\"\n          d=\"M201.3 0H200C89.5 0 0 89.5 0 200s89.5 200 200 200h1.3c109.9-.7 198.7-90 198.7-200S311.2.7 201.3 0zm23.5 61.1c.9-.4 1.8-.9 2.7-1.3C235.1 56.4 244 55 253 55c17 0 33.9 5.1 41.5 11.4 11.6 9.7 18.4 37 1.2 41.7-2.4.7-4.7.9-6.7.9-9 0-14.4-5.5-16.7-8.6.2-.5.3-1.1.5-1.8.1-.4.2-.7.3-1.1l.3-1.2c.2-.8.6-1.9 1.1-3.2.5-1.3 1.2-2.7 2.1-4.2.2-.4.5-.7.7-1.1.3-.4.6-.7.8-1l.5-.5.2-.2c.1-.1.2-.1.3-.2.2-.1.3-.3.5-.4.2-.1.4-.3.6-.4.4-.3.8-.5 1.2-.7l.6-.3.6-.3c.9-.3 1.9-.5 2.9-.6 1-.1 2 0 3 .2.9.2 1.8.5 2.5 1s1.2 1 1.5 1.7c.2.3.3.7.4 1.1 0 .2.1.4.1.7v.7c0 1.8-.6 3.7-1.5 4.9-.2.3-.5.6-.8.9-.3.3-.6.5-1 .8-.7.5-1.3.8-1.9.9-.4.1-.7.2-1 .2H286.1c-.3 0-.7-.1-1.1-.3-.8-.3-1.4-.8-2-1.1-.5-.3-1-.5-1.4-.6-.4-.1-.8 0-1 .1-.3.1-.5.3-.7.8-.2.5-.2 1.2.1 2.2.2.5.4 1.1.8 1.7.4.6.9 1.3 1.7 1.8.4.3.9.6 1.4.8l.9.3c.3.1.6.2.9.2.6.1 1.2.1 1.8.1.6 0 1.3-.1 1.9-.3 1.1-.3 2.3-.8 3.4-1.5.5-.3 1.1-.7 1.6-1.2.3-.2.5-.4.7-.7.2-.3.5-.5.7-.8 1.9-2.2 3.1-5.1 3.2-8.2 0-.8 0-1.6-.1-2.4 0-.4-.1-.8-.2-1.2-.1-.4-.2-.8-.3-1.3-.3-.8-.7-1.7-1.2-2.4-.5-.8-1.1-1.5-1.8-2-1.4-1.2-3-1.9-4.6-2.3-1.6-.4-3.2-.5-4.7-.4-1.5.1-3 .4-4.4.9-.4.1-.7.3-1.1.4-.3.2-.7.3-1 .5-.2.1-.3.2-.5.3l-.5.3-.9.6c-2.3 1.7-3.9 3.8-5 5.8s-1.8 3.8-2.3 5.3c-.5 1.5-.8 2.7-1 3.5-.2.8-.3 1.6-.4 2.3-.1.7-.2 1.4-.2 2 0 .2 0 .4-.1.6v.2c-.1.9-.1 1.7-.1 2.4 0 .6.1 1 .1 1.5v.4l-4.5-6.5-35.1-9.9-7.8 2.5v-7.3c3.7-.7 7-4 8-8.3 1.3-5.7-1.6-11.2-6.5-12.4-.4-.1-.8-.1-1.2-.2.9-.2 2-.8 3.2-1.4zm42.3 239.5l-65.8-90.1v-159H200c-.9 0-1.7.1-2.5.2-.9.1-1.7.3-2.5.6-6.3 1.8-10.8 6.3-10.8 6.3v7.2c-1.1-.5-2.3-.6-3.5-.4-3.5.8-5.6 5-4.6 9.3 1 4.3 4.6 7.1 8 6.4v13.2l-.7-.2-9.7-3.1-33.5 9.4-35.4 50.5 34.9 45.3h18.4l-21.7-42 15.8-20.3 26.7 40.6L86 308.6l49.5-8 59.4-81.3 2.5-3.5 2.5-3.5 1.3-1.8v167.6h-1.3c-98.4 0-178.2-79.8-178.2-178.2 0-98.4 79.8-178.2 178.2-178.2h1.3v29.8c8.4-.3 17.2-3.3 17.2-3.3V65.8c.7-.3 1.5-.5 2.3-.5.4 0 .8 0 1.1.1 3.5.8 5.6 5 4.6 9.3-.9 3.8-3.9 6.5-7 6.5-.4 0-.7 0-1.1-.1v13.2l10.4-3.3 33.5 9.4 6.4 9.1 2 2.8 2 2.8 25 35.7-34.9 45.3h-18.4l21.7-42-4.4-5.6-1.7-2.2-1.7-2.2-8-10.3-26.7 40.6 4.7 6.7 1.5 2.1 1.5 2.1 85.4 123-49.5-7.7zm-34.8-122.5c-.6.6-1.3 1.1-1.9 1.7l-3.5-5.1 23.8-36.2 6.6 8.4c-.4.8-.9 1.6-1.3 2.4-6.8 11.6-15.3 21.2-23.7 28.8z\"\n        />\n      </svg>\n    </Layout.Content>\n  );\n}\n\nexport default Loading;\n","import React, { useCallback, useEffect } from 'react';\n\n// Design Resources\nimport { notification } from 'antd';\n// State\nimport useGlobalState from '../../states/useGlobalState';\n\nconst openNotification = ({ message, description, type = 'info' }, onClose) => {\n  notification[type ?? 'info']({\n    message: message ?? 'I suspect that...',\n    description: description ?? 'Something wrong might not be right',\n    duration: type === 'error' ? 0 : 10,\n    onClose: onClose,\n    placement: 'bottomLeft',\n  });\n};\n\nfunction Notification() {\n  const [notification, setNotification] = useGlobalState('notification');\n\n  const onClose = useCallback(() => {\n    setNotification({ message: null, description: null, type: 'info' });\n  }, [setNotification]);\n\n  useEffect(() => {\n    if (notification?.message) {\n      openNotification(notification, onClose);\n    }\n  }, [notification, onClose]);\n\n  return <span></span>;\n}\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout } from 'antd';\n\n// Components\nimport Header from './global/Header';\n\n// Firebase\nimport { auth } from '../services/firebase';\n\n// Pages\nimport Admin from './Admin';\nimport Creator from './Creator';\nimport Distribute from './Distribute';\nimport Distributor from './Distributor';\nimport Groups from './Groups';\nimport Home from './Home';\nimport Login from './Login';\nimport Distribution from './Distribution';\n// Other Components\nimport Loading from './global/Loading';\nimport Notification from './global/Notification';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n      }\n    });\n  });\n\n  return (\n    <Layout className=\"app\">\n      <Router>\n        <Header isAuthenticated={isAuthenticated} />\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PrivateRoute path=\"/creator\" authenticated={isAuthenticated} component={Creator} />\n            <PrivateRoute path=\"/distribute\" authenticated={isAuthenticated} component={Distribute} />\n            <PrivateRoute path=\"/distribution\" authenticated={isAuthenticated} component={Distribution} />\n            <PrivateRoute path=\"/distributor\" authenticated={isAuthenticated} component={Distributor} />\n            <PrivateRoute path=\"/groups\" authenticated={isAuthenticated} component={Groups} />\n\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login}></PublicRoute>\n          </Switch>\n        )}\n        <Notification />\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './stylesheets/index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}